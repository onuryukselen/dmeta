(self["webpackChunkdmeta"] = self["webpackChunkdmeta"] || []).push([["bundle"],{

/***/ "./public/js/admin-dashboard.js":
/*!**************************************!*\
  !*** ./public/js/admin-dashboard.js ***!
  \**************************************/
/*! namespace exports */
/*! export refreshAdminProjectNavbar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "refreshAdminProjectNavbar": () => /* binding */ refreshAdminProjectNavbar
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sortablejs */ "./node_modules/sortablejs/modular/sortable.esm.js");
/* harmony import */ var _dashboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dashboard */ "./public/js/dashboard.js");
/* harmony import */ var _formModules_crudData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formModules/crudData */ "./public/js/formModules/crudData.js");
/* harmony import */ var _formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formModules/dataPerms */ "./public/js/formModules/dataPerms.js");
/* harmony import */ var _formModules_dataRestrictTo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formModules/dataRestrictTo */ "./public/js/formModules/dataRestrictTo.js");
/* harmony import */ var _treeView__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./treeView */ "./public/js/treeView.js");
/* eslint-disable */
;








const JSON5 = __webpack_require__(/*! json5 */ "./node_modules/json5/dist/index.js"); // GLOBAL SCOPE


let $s = {
  data: {},
  collectionCounter: 0
};
$s.AdminCollectionFields = ['name', 'label', 'type', 'required', 'unique', 'hidden', 'default', 'identifier', 'namingPattern', 'enum', 'ontology', 'checkvalid', 'min', 'max', 'lowercase', 'uppercase', 'minlength', 'maxlength', 'trim', 'ref', 'perms', 'collectionID', 'id', 'creationDate', 'lastUpdateDate'];
$s.AdminAllCollectionFields = ['name', 'label', 'version', 'projectID', 'id', 'restrictTo', 'perms', 'owner', 'creationDate', 'lastUpdateDate'];
$s.AdminAllProjectFields = ['name', 'label', 'id', 'restrictTo', 'perms', 'owner', 'creationDate', 'lastUpdateDate'];
const fieldsOfProjectModel = {
  name: {
    name: 'name',
    label: 'Name',
    type: 'String',
    required: true
  },
  label: {
    name: 'label',
    label: 'Label',
    type: 'String',
    required: true
  },
  restrictTo: {
    name: 'restrictTo',
    label: 'RestrictTo',
    type: 'Mixed'
  },
  perms: {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  }
};
const fieldsOfCollectionsModel = {
  name: {
    name: 'name',
    label: 'Name',
    type: 'String',
    required: true
  },
  label: {
    name: 'label',
    label: 'Label',
    type: 'String',
    required: true
  },
  projectID: {
    name: 'projectID',
    label: 'Project',
    type: 'mongoose.Schema.ObjectId',
    ref: 'projects',
    required: true
  },
  version: {
    name: 'version',
    label: 'Version',
    type: 'Number',
    required: true,
    default: '1'
  },
  restrictTo: {
    name: 'restrictTo',
    label: 'RestrictTo',
    type: 'Mixed'
  },
  perms: {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  }
};
const fieldsOfFieldsModel = {
  name: {
    name: 'name',
    label: 'Name',
    type: 'String',
    required: true
  },
  label: {
    name: 'label',
    label: 'Label',
    type: 'String',
    required: true
  },
  type: {
    name: 'type',
    label: 'Type',
    type: 'String',
    required: true,
    default: 'String',
    enum: ['String', 'Number', 'Boolean', 'Array', 'Date', 'Mixed', 'mongoose.Schema.ObjectId']
  },
  collectionID: {
    name: 'collectionID',
    label: 'Collection',
    type: 'mongoose.Schema.ObjectId',
    ref: 'collections',
    required: true
  },
  description: {
    name: 'description',
    label: 'Description',
    type: 'String'
  },
  unique: {
    name: 'unique',
    label: 'Unique',
    type: 'boolean'
  },
  identifier: {
    name: 'identifier',
    label: 'Identifier',
    type: 'boolean'
  },
  namingPattern: {
    name: 'namingPattern',
    label: 'Naming Pattern',
    type: 'String'
  },
  hidden: {
    name: 'hidden',
    label: 'Hidden',
    type: 'boolean'
  },
  required: {
    name: 'required',
    label: 'Required',
    type: 'Mixed',
    default: false
  },
  ontology: {
    name: 'ontology',
    label: 'Ontology',
    type: 'Mixed'
  },
  checkvalid: {
    name: 'checkvalid',
    label: 'CheckValid',
    type: 'Mixed'
  },
  default: {
    name: 'default',
    label: 'Default',
    type: 'String'
  },
  ref: {
    name: 'ref',
    label: 'Ref',
    type: 'String'
  },
  enum: {
    name: 'enum',
    label: 'Enum',
    type: 'Mixed'
  },
  min: {
    name: 'min',
    label: 'Min',
    type: 'Mixed'
  },
  max: {
    name: 'max',
    label: 'Max',
    type: 'Mixed'
  },
  lowercase: {
    name: 'lowercase',
    label: 'Lowercase',
    type: 'boolean'
  },
  uppercase: {
    name: 'uppercase',
    label: 'Uppercase',
    type: 'boolean'
  },
  trim: {
    name: 'trim',
    label: 'Trim',
    type: 'boolean'
  },
  minlength: {
    name: 'minlength',
    label: 'Minlength',
    type: 'Number'
  },
  maxlength: {
    name: 'maxlength',
    label: 'Maxlength',
    type: 'Number'
  },
  perms: {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  }
};

const ajaxCall = async (method, url) => {
  console.log(method, url);

  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    console.log(res.data.data.data);
    return res.data.data.data;
  } catch (err) {
    console.log(err);
    return '';
  }
};

const getTableHeaders = (collID, projectId) => {
  let ret = '';
  ret += `<th></th>`; // for checkboxes
  // ret += `<th>Order</th>`; // for order

  let headerList;

  if (collID == `all_collections_${projectId}`) {
    headerList = $s.AdminAllCollectionFields;
  } else if (collID == 'all_projects') {
    headerList = $s.AdminAllProjectFields;
  } else {
    headerList = $s.AdminCollectionFields;
  }

  for (var k = 0; k < headerList.length; k++) {
    const label = headerList[k].charAt(0).toUpperCase() + headerList[k].slice(1);
    ret += `<th>${label}</th>`;
  }

  return ret;
};

const getCollectionTable = (collID, projectID) => {
  const headers = getTableHeaders(collID, projectID);
  const ret = `
  <div id="warning-${collID}" style="margin-top:10px;"></div>
  <div class="table-responsive" style="overflow-x:auto; width:100%; ">
    <table id="${collID}" class="table table-striped" style="white-space:nowrap;  width:100%;" cellspacing="0" cellpadding="0" border="0">
        <thead>
            <tr>
            ${headers}
            </tr>
        <tbody>
        </tbody>
    </thead>
    </table>
  </div>`;
  return ret;
};

const getFieldsOfCollection = collectionID => {
  if (!$s.fields.length) return [];
  return $s.fields.filter(field => field.collectionID === collectionID);
};

const getCollectionsOfProject = projectID => {
  if (!$s.collections.length) return [];
  return $s.collections.filter(field => field.projectID === projectID);
};

const prepareDataForSingleColumn = async (tableID, projectID) => {
  let data;
  let ret = [];

  if (tableID == `all_collections_${projectID}`) {
    // Use "$s.collections" prepare all_collections table
    data = getCollectionsOfProject(projectID);
  } else if (tableID == 'all_projects') {
    // Use "$s.projects" prepare all_projects table
    data = $s.projects;
  } else {
    // Use $s.fields to prepare data
    data = getFieldsOfCollection(tableID);
  }

  const dataCopy = data.slice();

  if (dataCopy) {
    ret = dataCopy.map((el, index) => {
      let newObj = {};
      $.each(el, function (k) {
        // custom view for all_collections tab -> projectID field (show name of the project)
        if (tableID == `all_collections_${projectID}` && k === `projectID` && el[k]) {
          const projectData = $s.projects.filter(p => p._id == el[k]);

          if (projectData[0] && projectData[0].name) {
            newObj[k] = projectData[0].name;
          } else {
            newObj[k] = el[k];
          }
        } else if (typeof el[k] === 'object' && el[k] !== null || Array.isArray(el[k]) || typeof el[k] === 'boolean') {
          newObj[k] = JSON.stringify(el[k]);
        } else {
          newObj[k] = el[k];
        }
      }); // newObj['order'] = index;

      return newObj;
    });
  }

  return ret;
};

const refreshDataTables = async (TableID, projectID) => {
  if (!$.fn.DataTable.isDataTable(`#${TableID}`)) {
    const data = await prepareDataForSingleColumn(TableID, projectID);
    console.log(TableID, data);
    let columns = [];
    let fieldList;

    if (TableID == `all_collections_${projectID}`) {
      fieldList = $s.AdminAllCollectionFields;
    } else if (TableID == 'all_projects') {
      fieldList = $s.AdminAllProjectFields;
    } else {
      fieldList = $s.AdminCollectionFields;
    }

    columns.push({
      data: '_id'
    }); // for checkboxes
    // columns.push({ data: 'order' }); // for order

    for (var i = 0; i < fieldList.length; i++) {
      columns.push({
        data: fieldList[i]
      });
    }

    var dataTableObj = {
      columns: columns,
      columnDefs: [{
        defaultContent: '',
        targets: '_all'
      }, //hides undefined error,
      {
        targets: 0,
        checkboxes: {
          selectRow: true
        }
      }],
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, 'All']],
      select: {
        style: 'multiple'
      } // order: [[1, 'asc']]

    }; // if (TableID !== `all_collections_${projectID}` && TableID !== 'all_projects') {
    //   dataTableObj.rowReorder = { selector: 'tr', dataSrc: 'order' };
    // }

    dataTableObj.dom = '<"pull-left"f>lrt<"pull-left"i><"bottom"p><"clear">';
    dataTableObj.destroy = true;
    dataTableObj.pageLength = 25;
    dataTableObj.data = data;
    dataTableObj.hover = true; // speed up the table loading

    dataTableObj.deferRender = true;
    dataTableObj.scroller = true;
    dataTableObj.colReorder = true;
    dataTableObj.scrollX = '500';
    $s.TableID = $(`#${TableID}`).DataTable(dataTableObj); // $s.TableID.on('row-reorder', function(e, diff, edit) {
    //   let result = 'Reorder started on row: ' + edit.triggerRow.data()[1] + '<br>';
    //   console.log(edit);
    //   console.log(result);
    //   console.log(diff);
    //   for (let i = 0, ien = diff.length; i < ien; i++) {
    //     // let rowData = $s.TableID.row(diff[i].node).data();
    //     result +=
    //       ' updated to be in position ' + diff[i].newData + ' (was ' + diff[i].oldData + ')<br>';
    //   }
    //   console.log('Event result:<br>' + result);
    // });
  } else {
    $s.collections = await ajaxCall('GET', '/api/v1/collections');
    $s.fields = await ajaxCall('GET', '/api/v1/fields');
    $s.projects = await ajaxCall('GET', '/api/v1/projects');
    const data = await prepareDataForSingleColumn(TableID, projectID);
    $(`#${TableID}`).DataTable().clear().rows.add(data).draw();
  }

  if (TableID != `all_collections_${projectID}` && TableID != 'all_projects') {
    checkIdentifierField(TableID);
  }
};

const checkIdentifierField = collID => {
  const identifierField = $s.fields.filter(f => f.identifier && f.collectionID == collID);
  let text = '';

  if (identifierField.length < 1) {
    text = 'Please define an identifier field for this collection.';
  } else if (identifierField.length > 1) {
    text = 'More than one identifier field has been defined for this collection. Only one identifier field is allowed for a collection. Please remove the excess field(s).';
  }

  if (text) {
    $(`#warning-${collID}`).html(`<div class="alert alert-danger" role="alert">${text}</div>`);
  } else {
    $(`#warning-${collID}`).html('');
  }
};

const showTableTabs = () => {
  $(document).on('show.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    const tableID = $(e.target).attr('tableID');
    const projectID = $(e.target).attr('projectID');
    refreshDataTables(tableID, projectID);

    if (tableID == `tree_view_${projectID}`) {
      (0,_treeView__WEBPACK_IMPORTED_MODULE_7__.refreshTreeView)(projectID, $s, false);
    }

    $('[data-toggle="tooltip"]').tooltip();
  });
  $(document).on('shown.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
  });
};

const getErrorDiv = () => {
  return '<p style="background-color:#e211112b;" id="crudModalError"></p>';
};

const updateNavbarTables = async (collID, projectID) => {
  if (collID == 'all_projects') {
    await refreshAdminProjectNavbar();
  } else if (collID == `all_collections_${projectID}`) {
    await refreshCollectionNavbar(projectID, 'refresh');
  } else {
    refreshDataTables(collID, projectID);
  }
};

const refreshAPIWorkflow = async (projectID, apiID, type) => {
  const workflow = await getAPIWorkflow(projectID, type);
  $(`#api-workflow-${projectID}`).empty();
  $(`#api-workflow-${projectID}`).append(workflow);

  if (apiID && $s.apis) {
    const api = $s.apis.filter(e => e._id == apiID);

    if (typeof api[0].config === 'object' && api[0].config !== null) {
      api[0].config = JSON.stringify(api[0].config);
    }

    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.fillFormByName)(`#api-workflow-${projectID}`, 'input, select, textarea', api[0], true);
  } else {
    await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__.prepDataPerms)(`#api-workflow-${projectID}`, {});
  }
};

const getAPIWorkflow = async (projectID, type) => {
  let disabled = '';

  if (type == 'disabled') {
    disabled = 'disabled';
  }

  const permsField = {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  };
  const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(permsField, getProjectData(projectID), $s);
  const permsDiv = (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(element, permsField.label, permsField);
  const collDropdown = getCollectionDropdown(projectID, 'collectionID', [], disabled);
  const ret = `
  <div class="col-sm-10">
    <form class="form-horizontal" id="api-workflow-${projectID}" style="margin-top:40px;">
      <div class="form-group row">
        <label class="col-md-2 col-form-label text-right">Target Collection</label>
        <div class="col-md-10">
          ${collDropdown}
        </div>
      </div>
      <div class="form-group row">
        <label class="col-md-2 col-form-label text-right">Route Description</label>
        <div class="col-md-10">
          <input ${disabled} name="route" class="form-control" type="text" value=""></input>
        </div>
      </div>
      <div class="form-group row">
        <label class="col-md-2 col-form-label text-right">Config</label>
        <div class="col-md-10">
          <textarea ${disabled} name="config" class="form-control"  value="" rows="10"></textarea>
        </div>
      </div>
    </form>
  </div>
  `;
  return ret;
};

const getEventWorkflow = async (projectID, type) => {
  let disabled = '';
  let hide = '';

  if (type == 'disabled') {
    disabled = 'disabled';
    hide = `style="display:none;"`;
  }

  const permsField = {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  };
  const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(permsField, getProjectData(projectID), $s);
  const permsDiv = (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(element, permsField.label, permsField);
  const ret = `
  <div class="col-sm-10">
    <div class="form-group row">
      <label class="col-md-2 col-form-label text-right">Event Name</label>
      <div class="col-md-10">
        <input ${disabled} id="event-name-${projectID}" class="form-control" type="text" value=""></input>
      </div>
    </div>
  </div>
  <div class="col-sm-2"></div>
  <div class="col-sm-10">
    <label class="col-md-2 col-form-label" >Event Form</label>
  </div>
  <div class="col-sm-2"></div>
  <div class="col-sm-10" id="event-schema-${projectID}"></div>
  <div class="col-sm-2">
    <button ${hide} class="btn btn-primary insert-event-row" type="button" projectid="${projectID}"> Insert Group </button>
  </div>
  <div class="col-sm-10">
    <form class="form-horizontal" id="event-perms-${projectID}" style="margin-top:40px;">
      ${permsDiv}
    </div>
  </div>
  <div class="col-sm-2"></div>
  `;
  return ret;
}; // insert empty event workflow
// if eventID is set, then fill the row


const refreshEventWorkflow = async (projectID, eventID, type) => {
  const workflow = await getEventWorkflow(projectID, type);
  $(`#event-workflow-${projectID}`).empty();
  $(`#event-workflow-${projectID}`).append(workflow);

  if (eventID && $s.events) {
    const events = $s.events.filter(e => e._id == eventID);
    if (events[0].name) $(`#event-name-${projectID}`).val(events[0].name);

    if (events[0].fields) {
      const data = events[0].fields;
      const perms = JSON.stringify(events[0].perms);
      let prevCollID = '';
      let lastRow = '';
      console.log('data', data);
      await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__.prepDataPerms)(`#event-perms-${projectID}`, {
        perms: perms
      });

      for (let i = 0; i < data.length; i++) {
        const collID = data[i].collectionID;
        const field = data[i].field;
        const insert = data[i].insert;
        const update = data[i].update;
        const multiple = data[i].multiple;

        if (!prevCollID || prevCollID && prevCollID != collID) {
          lastRow = insertNewEventRow(projectID, type, field);

          if (collID) {
            lastRow.find('.select-collection').val(collID).trigger('change');
          }

          if (insert) lastRow.find('.insert-check').attr('checked', true);
          if (!insert) lastRow.find('.insert-check').attr('checked', false);
          if (update) lastRow.find('.update-check').attr('checked', true);
          if (!update) lastRow.find('.update-check').attr('checked', false);
          if (multiple) lastRow.find('.multiple-check').attr('checked', true);
          if (!multiple) lastRow.find('.multiple-check').attr('checked', false);
        } else {
          //insert new field
          lastRow.find('.insert-event-field').trigger('click');
        }

        if (field) {
          const allFieldSelects = lastRow.find('.select-field');
          $(allFieldSelects[allFieldSelects.length - 1]).val(field);
        }

        prevCollID = collID;
      }
    }
  } else {
    insertNewEventRow(projectID, type, true);
    await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__.prepDataPerms)(`#event-perms-${projectID}`, {});
  }
};

const createSortable = (el, projectID, type, group) => {
  let disabled = false;
  if (type == 'disabled') disabled = true;
  new sortablejs__WEBPACK_IMPORTED_MODULE_2__.default(el, {
    animation: 150,
    disabled: disabled,
    // handle: '.handle',
    filter: '.js-remove',
    group: `${group}-${projectID}`,
    onFilter: function (evt) {
      var item = evt.item;
      var ctrl = evt.target;

      if (sortablejs__WEBPACK_IMPORTED_MODULE_2__.default.utils.is(ctrl, '.js-remove')) {
        // Click on remove button
        item.parentNode.removeChild(item);
      }
    }
  });
};

const getCollDropdown = (projectID, type, counter) => {
  let projectCollections;

  if ($s.collections) {
    projectCollections = $s.collections.filter(c => c.projectID == projectID);
  }

  let disabled = '';
  if (type == 'disabled') disabled = 'disabled';
  let dropdown = `<select ${disabled} counter="${counter}" class="form-control select-collection">`;
  dropdown += `<option value="" >--- Select Collection ---</option>`;

  if (projectCollections) {
    projectCollections.forEach(i => {
      dropdown += `<option  value="${i._id}">${i.label}</option>`;
    });
  }

  dropdown += `</select>`;
  return dropdown;
};

const insertNewField = (projectID, divToAppend, type, counter) => {
  let hide = '';
  let disabled = '';

  if (type == 'disabled') {
    hide = `style="display:none;"`;
    disabled = `disabled`;
  }

  const fieldDropdown = `<select ${disabled} class="form-control select-field"></select>`;
  const newFieldRow = $(`<div class="list-group"  style="padding-right:0px;">
  <div class="list-group-item" style="display:flex;">
    <div class="col-sm-1" style="padding-top:7px;">
      <i class="cil-apps handle-field"></i>
    </div>
    <div class="col-sm-10" style="display:flex;">
       <span style="padding-top:7px; padding-right:10px;">Field</span>
      ${fieldDropdown}
    </div>
    <div class="col-sm-1" style="padding-top:7px;">
    <a ${hide} href="#"><i class="cil-trash js-remove float-right" data-toggle="tooltip" data-placement="bottom" title="Remove Field"></i></a>
    </div>  
  </div>  
</div>`);
  divToAppend.append(newFieldRow);
  createSortable(newFieldRow[0], projectID, type, `field-${counter}`); // fill fields dropdown based on selected collection

  const selectedCollID = divToAppend.closest('.list-group-item').find('.select-collection').val();
  const selectField = newFieldRow.find('.select-field');
  fillCollectionFields(selectField, selectedCollID);
};

const insertNewEventRow = (projectID, type, newField) => {
  let hide = '';
  let disabled = '';

  if (type == 'disabled') {
    hide = `style="display:none;"`;
    disabled = `disabled`;
  }

  const counter = $s.collectionCounter;
  $s.collectionCounter++;
  const collectionDropdown = getCollDropdown(projectID, type, counter);
  const newRow = $(`
    <div class="list-group collection"  style="padding-right:0px;">
      <div class="list-group-item collection" style="padding-right:7px; padding-left:7px; padding-bottom:25px; padding-top:25px;">
        <div class="container" style="margin-bottom:15px; margin-right:5px; margin-left:5px; max-width:7000px;">
          <div class="row">
            <div class="col-auto" style="padding-top:7px;">
              <i class="cil-apps handle"></i>
            </div>
            <div class="col" style="display:flex;">
            <span style="padding-top:7px; padding-right:10px;">Collection</span> 
            ${collectionDropdown} </div>
            <div class="col-auto" style="font-size: 0.7rem;">
              <label class="text-center">I<span class="d-none d-lg-inline">nsert</span>
                <input ${disabled} class="insert-check" type="checkbox" style="width:100%;">
              </label>
            </div>
            <div class="col-auto" style="font-size: 0.7rem;">
              <label class="text-center">U<span class="d-none d-lg-inline">pdate</span>
                <input ${disabled} class="update-check" type="checkbox" style="width:100%;">
              </label>
            </div>
            <div class="col-auto" style="font-size: 0.7rem;">
              <label class="text-center">M<span class="d-none d-lg-inline">ultiple</span>
                <input ${disabled} class="multiple-check" type="checkbox" style="width:100%;">
              </label>
            </div>
            <div class="col-auto align-self-center">
              <a ${hide} href="#" class="insert-event-field"><i class="cil-plus  float-right" data-toggle="tooltip" data-placement="bottom" title="Insert Field" style="margin-left:7px;"></i></a>
            </div>
            <div class="col-auto align-self-center">
              <a ${hide} href="#"><i class="cil-trash js-remove float-right" data-toggle="tooltip" data-placement="bottom" title="Remove Collection Group"></i></a>
            </div>
          </div>
        </div>
        <div class="container field-container" style="margin-right:0px; margin-left:0px; max-width:7000px;"> 
        </div>  
      </div>  
    </div>`);
  $(`#event-schema-${projectID}`).append(newRow);
  createSortable(newRow[0], projectID, type, 'collection');

  if (newField) {
    //insertNewField
    newRow.find('.insert-event-field').trigger('click');
  }

  return newRow;
};

const insertNewAPIRow = (projectID, type, newField) => {
  let hide = '';
  let disabled = '';

  if (type == 'disabled') {
    hide = `style="display:none;"`;
    disabled = `disabled`;
  }

  const counter = $s.collectionCounter;
  $s.collectionCounter++;
  const collectionDropdown = getCollDropdown(projectID, type, counter);
  const newRow = $(`
    <div class="list-group"  style="padding-right:0px;">
              </label>
            </div>
            <div class="col-auto" style="font-size: 0.7rem;">
              <label class="text-center">M<span class="d-none d-lg-inline">ultiple</span>
                <input ${disabled} class="multiple-check" type="checkbox" style="width:100%;">
              </label>
            </div>
            <div class="col-auto align-self-center">
              <a ${hide} href="#" class="insert-event-field"><i class="cil-plus  float-right" data-toggle="tooltip" data-placement="bottom" title="Insert Field" style="margin-left:7px;"></i></a>
            </div>
            <div class="col-auto align-self-center">
              <a ${hide} href="#"><i class="cil-trash js-remove float-right" data-toggle="tooltip" data-placement="bottom" title="Remove Collection Group"></i></a>
            </div>
          </div>
        </div>
        <div class="container field-container" style="margin-right:0px; margin-left:0px; max-width:7000px;"> 
        </div>  
      </div>  
    </div>`);
  $(`#api-schema-${projectID}`).append(newRow);
  createSortable(newRow[0], projectID, type, 'collection');

  if (newField) {
    //insertNewField
    newRow.find('.insert-api-field').trigger('click');
  }

  return newRow;
};

const fillCollectionFields = (dropdown, collID) => {
  if (!$s.collections) return;
  const col = $s.collections.filter(c => c._id == collID);
  const fields = $s.fields.filter(f => f.collectionID == collID);
  dropdown.empty();
  dropdown.append($('<option>', {
    value: '',
    text: '-- Select Field --'
  }));
  $.each(fields, function (i, item) {
    const required = item.required ? 'required' : '';
    const ref = item.ref ? 'ref.' : '';
    let extra = '';
    if (required || ref) extra = `${required}${ref}`;
    if (extra) extra = `(${extra.trim()})`;
    dropdown.append($('<option>', {
      value: item._id,
      text: `${item.label} ${extra}`
    }));
  });
};

const showHideButtons = (el, hideClasses, showClasses) => {
  if (el) $(el).css('display', 'none');

  for (let i = 0; i < hideClasses.length; i++) {
    $(el).siblings(`button.${hideClasses[i]}`).css('display', 'none');
  }

  for (let i = 0; i < showClasses.length; i++) {
    $(el).siblings(`button.${showClasses[i]}`).css('display', 'inline-block');
  }
};

const getEventSchema = projectID => {
  let ret = [];
  const collectionGroups = $(`#event-schema-${projectID}`).find('.list-group-item.collection');

  for (let k = 0; k < collectionGroups.length; k++) {
    const collID = $(collectionGroups[k]).find('.select-collection').val();
    const insert = $(collectionGroups[k]).find('.insert-check').is(':checked');
    const update = $(collectionGroups[k]).find('.update-check').is(':checked');
    const multiple = $(collectionGroups[k]).find('.multiple-check').is(':checked');
    const fields = $(collectionGroups[k]).find('.select-field');

    if (fields.length > 0) {
      for (let f = 0; f < fields.length; f++) {
        let obj = {};
        let field = $(fields[f]).val();
        obj.collectionID = collID;
        obj.field = field;
        obj.insert = insert;
        obj.update = update;
        obj.multiple = multiple;
        ret.push(obj);
      }
    } else {
      let obj = {};
      obj.collectionID = collID;
      obj.field = '';
      obj.insert = insert;
      obj.update = update;
      obj.multiple = multiple;
      ret.push(obj);
    }
  }

  console.log(ret);
  return ret;
};

const getCollectionDropdown = (projectID, name, exclude, disable) => {
  let disabled = '';

  if (disable) {
    disabled = 'disabled';
  }

  let dropdown = `<select ${disabled} class="form-control" name="${name}">`;
  dropdown += `<option value="" >--- Select Collection ---</option>`;

  if ($s.collections) {
    const projectCollections = $s.collections.filter(e => e.projectID == projectID);
    projectCollections.forEach(i => {
      if (!exclude.includes(i._id)) {
        dropdown += `<option  value="${i._id}">${i.name}</option>`;
      }
    });
  }

  dropdown += `</select>`;
  return dropdown;
};

const getRefreshNamingPatternDiv = namingPatternData => {
  let ret = `<p > Please choose the field below to refresh all values of the selected field according to the naming pattern. </p>`;
  const dropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)(namingPatternData, {
    name: 'fieldID'
  });
  ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(dropdown, 'Field', {});
  return ret;
};

const getEditFieldDiv = projectID => {
  let ret = `<p> Please choose target collection and operation type to transfer your data of fields into target collection. </p>`;
  ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(getCollectionDropdown(projectID, 'targetCollection', [], false), 'Target Collection', {});
  const operationTypeDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([{
    _id: 'move-ref',
    name: 'Move and Keep Reference'
  }], {
    name: 'type'
  });
  ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(operationTypeDropdown, 'Operation Type', {});
  return ret;
};

const getInsertChildRefDiv = async (projectID, collID) => {
  let ret = `<p>Please choose a collection to be used for referencing. </p>`;
  const exclude = [collID];
  ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(getCollectionDropdown(projectID, 'childRefCollection', exclude, false), 'Parent Collection', {});
  const labelField = {
    name: 'label',
    label: 'Reference Label',
    type: 'String'
  };
  const labelDiv = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(labelField, getProjectData(projectID), $s);
  ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(labelDiv, labelField.label, labelField);
  return ret;
};

const bindEventHandlers = () => {
  // ================= API CONFIG =============
  $(document).on('change', `select.select-api`, async function (e) {
    const projectID = $(this).attr('projectID');
    const apiID = $(this).val();

    if (apiID) {
      await refreshAPIWorkflow(projectID, apiID, 'disabled');
    } else {
      $(`#api-workflow-${projectID}`).empty();
    }
  });
  $(document).on('click', `button.insert-api`, async function (e) {
    const projectID = $(this).attr('projectID');
    showHideButtons(this, ['insert-api', 'edit-api', 'delete-api', 'update-api'], ['cancel-api', 'save-api']);
    await refreshAPIWorkflow(projectID, '', 'new');
  });
  $(document).on('click', `button.save-api`, async function (e) {
    const projectID = $(this).attr('projectID');
    const formValues = $(`#api-workflow-${projectID}`).find('input,textarea,select');
    const [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, [], true, 'undefined');
    formObj.projectID = projectID;

    if (!(0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.IsJson5String)(formObj.config)) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please enter a valid JSON for config.');
    } else if (!stop) {
      formObj.config = JSON5.parse(formObj.config);

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'POST',
          url: 'api/v1/config/apis',
          data: formObj
        });

        if (res.data.status == 'success') {
          showHideButtons(this, ['cancel-api', 'save-api', 'update-api'], ['insert-api', 'edit-api', 'delete-api']);
          await getAjaxData('apis');
          console.log(res.data);
          const newApiId = res.data.data && res.data.data.data && res.data.data.data._id ? res.data.data.data._id : '';
          refreshCustomDropdown(projectID, newApiId, 'api');
        }
      } catch (err) {
        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }
    }
  });
  $(document).on('click', `button.cancel-api`, function (e) {
    const projectID = $(this).attr('projectID');
    $(`#select-api-${projectID}`).trigger('change');
    showHideButtons(this, ['cancel-api', 'save-api', 'update-api'], ['insert-api', 'edit-api', 'delete-api']);
  });
  $(document).on('click', `button.edit-api`, async function (e) {
    showHideButtons(this, ['insert-api', 'edit-api', 'delete-api', 'save-api'], ['cancel-api', 'update-api']);
    const projectID = $(this).attr('projectID');
    const apiID = $(`#select-api-${projectID}`).val();
    await refreshAPIWorkflow(projectID, apiID, 'new');
  });
  $(document).on('click', `button.update-api`, async function (e) {
    const projectID = $(this).attr('projectID');
    const apiID = $(`#select-api-${projectID}`).val();
    const formValues = $(`#api-workflow-${projectID}`).find('input,textarea,select');
    const [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, [], true, 'undefined');
    formObj.projectID = projectID;
    console.log(formObj);

    if (!(0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.IsJson5String)(formObj.config)) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please enter a valid JSON for config.');
    } else if (!stop) {
      formObj.config = JSON5.parse(formObj.config);

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'PATCH',
          url: `api/v1/config/apis/${apiID}`,
          data: formObj
        });

        if (res.data.status == 'success') {
          showHideButtons(this, ['cancel-api', 'save-api', 'update-api'], ['insert-api', 'edit-api', 'delete-api']);
          await getAjaxData('apis');
          refreshCustomDropdown(projectID, apiID, 'api');
        }
      } catch (err) {
        console.log(err);

        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }
    }
  });
  $(document).on('click', `button.delete-api`, function (e) {
    const projectID = $(this).attr('projectID');
    const apiID = $(`#select-api-${projectID}`).val();
    $('#crudModalError').empty();
    $('#crudModalTitle').text(`Remove API Config`);
    $('#crudModalYes').text('Remove');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(`<p>Are you sure you want to delete config?</p>`);
    $('#crudModal').off();
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'DELETE',
          url: `api/v1/config/apis/${apiID}`
        });

        if (res.data.status == 'success') {
          showHideButtons('', ['cancel-api', 'save-api', 'update-api'], ['insert-api', 'edit-api', 'delete-api']);
          await getAjaxData('apis');
          refreshCustomDropdown(projectID, '', 'api');
        }
      } catch (err) {
        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }

      $('#crudModal').modal('hide');
    });

    if (!apiID) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please select config to delete.');
    } else {
      $('#crudModal').modal('show');
    }
  }); // ================= API CONFIG ENDS  =======
  // ================= EVENTS  =================

  $(document).on('change', `select.select-event`, async function (e) {
    const projectID = $(this).attr('projectID');
    const eventID = $(this).val();

    if (eventID) {
      await refreshEventWorkflow(projectID, eventID, 'disabled');
    } else {
      $(`#event-workflow-${projectID}`).empty();
    }
  });
  $(document).on('change', `select.select-collection`, function (e) {
    const selectedCollID = $(this).val();
    const selectField = $(this).closest('.list-group-item').find('.select-field');
    fillCollectionFields(selectField, selectedCollID);
  });
  $(document).on('click', `a.insert-event-field`, function (e) {
    e.preventDefault();
    const divToAppend = $(this).closest('.list-group-item').find('.field-container');
    const projectID = $(this).attr('projectID');
    const counter = $(this).closest('.list-group-item').find('.select-collection').attr('counter');
    const isInsertFieldVisible = $(this).css('display') !== 'none';

    if (isInsertFieldVisible) {
      insertNewField(projectID, divToAppend, 'new', counter);
    } else {
      insertNewField(projectID, divToAppend, 'disabled', counter);
    }
  });
  $(document).on('click', `button.insert-event-row`, function (e) {
    e.preventDefault();
    const projectID = $(this).attr('projectID');
    insertNewEventRow(projectID, 'new', true);
  });
  $(document).on('click', `button.save-event`, async function (e) {
    const projectID = $(this).attr('projectID');
    const name = $(`#event-name-${projectID}`).val();

    if (!name) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please enter event name before saving.');
    } else {
      const eventSchema = getEventSchema(projectID);
      let data = {};
      data.name = name;
      data.fields = eventSchema;
      data.projectID = projectID; // get perms data

      const formValues = $(`#event-perms-${projectID}`).find('input');
      const [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, [], true, 'undefined');
      data.perms = formObj.perms;

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'POST',
          url: 'api/v1/events',
          data
        });

        if (res.data.status == 'success') {
          showHideButtons(this, ['cancel-event', 'save-event', 'update-event'], ['insert-event', 'edit-event', 'delete-event']);
          await getAjaxData('events');
          console.log(res.data);
          const newEventId = res.data.data && res.data.data.data && res.data.data.data._id ? res.data.data.data._id : '';
          refreshEventDropdown(projectID, newEventId);
        }
      } catch (err) {
        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }
    }
  });
  $(document).on('click', `button.cancel-event`, function (e) {
    const projectID = $(this).attr('projectID');
    $(`#select-event-${projectID}`).trigger('change');
    showHideButtons(this, ['cancel-event', 'save-event', 'update-event'], ['insert-event', 'edit-event', 'delete-event']);
  });
  $(document).on('click', `button.insert-event`, async function (e) {
    const projectID = $(this).attr('projectID');
    showHideButtons(this, ['insert-event', 'edit-event', 'delete-event', 'update-event'], ['cancel-event', 'save-event']);
    await refreshEventWorkflow(projectID, '', 'new');
  });
  $(document).on('click', `button.edit-event`, async function (e) {
    showHideButtons(this, ['insert-event', 'edit-event', 'delete-event', 'save-event'], ['cancel-event', 'update-event']);
    const projectID = $(this).attr('projectID');
    const eventID = $(`#select-event-${projectID}`).val();
    await refreshEventWorkflow(projectID, eventID, 'new');
  });
  $(document).on('click', `button.update-event`, async function (e) {
    const projectID = $(this).attr('projectID');
    const eventID = $(`#select-event-${projectID}`).val();
    const name = $(`#event-name-${projectID}`).val();

    if (!name) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please enter event name before saving.');
    } else if (!eventID) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please choose event before editing.');
    } else {
      const eventSchema = getEventSchema(projectID);
      let data = {};
      data.name = name;
      data.fields = eventSchema;
      data.projectID = projectID; // get perms data

      const formValues = $(`#event-perms-${projectID}`).find('input');
      const [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, [], true, 'undefined');
      data.perms = formObj.perms;

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'PATCH',
          url: `api/v1/events/${eventID}`,
          data
        });

        if (res.data.status == 'success') {
          showHideButtons(this, ['cancel-event', 'save-event', 'update-event'], ['insert-event', 'edit-event', 'delete-event']);
          await getAjaxData('events');
          refreshEventDropdown(projectID, eventID);
        }
      } catch (err) {
        console.log(err);

        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }
    }
  });
  $(document).on('click', `button.delete-event`, function (e) {
    const projectID = $(this).attr('projectID');
    const eventID = $(`#select-event-${projectID}`).val();
    $('#crudModalError').empty();
    $('#crudModalTitle').text(`Remove Event`);
    $('#crudModalYes').text('Remove');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(`<p>Are you sure you want to delete event?</p>`);
    $('#crudModal').off();
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'DELETE',
          url: `api/v1/events/${eventID}`
        });

        if (res.data.status == 'success') {
          showHideButtons('', ['cancel-event', 'save-event', 'update-event'], ['insert-event', 'edit-event', 'delete-event']);
          await getAjaxData('events');
          refreshEventDropdown(projectID, '');
        }
      } catch (err) {
        if (err.response && err.response.data && err.response.data.message) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
        } else {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
        }
      }

      $('#crudModal').modal('hide');
    });

    if (!eventID) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please select event to delete.');
    } else {
      $('#crudModal').modal('show');
    }
  }); // ================= EVENTS ENDS  =================
  // insert child reference button

  $(document).on('click', `button.insert-child-ref`, async function (e) {
    const collID = $(this).attr('collID');
    const collName = $(this).attr('collName');
    const projectID = $(this).attr('projectID');
    const childRefDiv = await getInsertChildRefDiv(projectID, collID);
    const projectData = $s.projects.filter(p => p._id === projectID);
    const projectName = projectData[0].name;
    $('#crudModalYes').text('Save');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(childRefDiv);
    $('#crudModal').off();
    $('#crudModalTitle').text(`Insert Reference Field`);
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();
      $('#crudModalError').empty();
      const formValues = $('#crudModal').find('input,select');
      const requiredFields = ['label', 'childRefCollection'];
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, true);

      if (stop === false) {
        let newFormObj = {};
        const parentCollectionName = $('#crudModal').find('select[name*=childRefCollection] option:selected').text();
        newFormObj.collectionID = collID;
        newFormObj.ref = `${projectName}_${parentCollectionName}`;
        newFormObj.name = `${parentCollectionName}_id`;
        newFormObj.label = formObj.label;
        newFormObj.required = true;
        newFormObj.type = 'mongoose.Schema.ObjectId';
        console.log('newFormObj', newFormObj);

        try {
          const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
            method: 'POST',
            url: 'api/v1/fields',
            data: newFormObj
          });

          if (res.data.status == 'success') {
            console.log(res.data);
            refreshDataTables(collID, projectID);
            $('#crudModal').modal('hide');
          }
        } catch (err) {
          if (err.response && err.response.data && err.response.data.message) {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
          } else {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
          }
        }
      }
    });
    $('#crudModal').modal('show');
  }); //Refresh Identifier Data

  $(document).on('click', `button.refresh-namingPattern-data`, async function (e) {
    const collID = $(this).attr('collID');
    const collName = $(this).attr('collName');
    const namingPatternData = $s.fields.filter(f => f.namingPattern && f.collectionID == collID);
    let div = await getRefreshNamingPatternDiv(namingPatternData);
    $('#crudModalYes').text('Refresh');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(div);
    $('#crudModal').off();
    $('#crudModalTitle').text(`Refresh Naming Patterns`);
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();
      $('#crudModalError').empty();
      const formValues = $('#crudModal').find('input,select');
      const requiredFields = ['fieldID'];
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, true);

      if (stop === false) {
        console.log('formObj', formObj);

        try {
          const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
            method: 'POST',
            url: 'api/v1/fields/refreshIdentifier',
            data: formObj
          });

          if (res.data.status == 'success') {
            console.log(res.data);
            $('#crudModal').modal('hide');
          }
        } catch (err) {
          if (err.response && err.response.data && err.response.data.message) {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
          } else {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
          }
        }
      }
    });
    $('#crudModal').modal('show');
  }); //Transfer Fields Data button

  $(document).on('click', `button.edit-field-data`, async function (e) {
    const collID = $(this).attr('collID');
    const collName = $(this).attr('collName');
    const projectID = $(this).attr('projectID');
    const editFieldDiv = await getEditFieldDiv(projectID);
    $('#crudModalYes').text('Transfer');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(editFieldDiv);
    $('#crudModal').off();
    $('#crudModalTitle').text(`Transfer Field Data`);
    const table = $(`#${collID}`).DataTable();
    const tableData = table.rows().data();
    const rows_selected = table.column(0).checkboxes.selected();
    const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
    let sourceFields = [];

    for (let i = 0; i < selectedData.length; i++) {
      sourceFields.push(selectedData[i]._id);
    }

    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();
      $('#crudModalError').empty();
      const formValues = $('#crudModal').find('input,select');
      const requiredFields = ['type', 'targetCollection'];
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, true);

      if (stop === false) {
        formObj.sourceCollection = collID;
        formObj.sourceFields = sourceFields;
        console.log('formObj', formObj);

        try {
          const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
            method: 'POST',
            url: 'api/v1/fields/transfer',
            data: formObj
          });

          if (res.data.status == 'success') {
            console.log(res.data);
            $('#crudModal').modal('hide');
          }
        } catch (err) {
          if (err.response && err.response.data && err.response.data.message) {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(JSON.stringify(err.response.data.message));
          } else {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(err);
          }
        }
      }
    });

    if (rows_selected.length === 0) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please click checkboxes to transfer fields of data.');
    } else if (rows_selected.length > 0) {
      $('#crudModal').modal('show');
    }
  }); // ================= EDIT BUTTON =================

  $(document).on('click', `button.edit-data`, async function (e) {
    const collID = $(this).attr('collID');
    const collLabel = $(this).attr('collLabel');
    const collName = $(this).attr('collName');
    const projectID = $(this).attr('projectID');
    let targetUrl = '';
    let collectionFields = '';

    if (collID == `all_collections_${projectID}`) {
      collectionFields = await getFieldsOfCollectionDiv(collName, projectID);
      $('#crudModalTitle').text(`Edit Collection`);
      targetUrl = 'collections';
    } else if (collID == 'all_projects') {
      collectionFields = await getFieldsOfProjectDiv();
      $('#crudModalTitle').text(`Edit Project`);
      targetUrl = 'projects';
    } else {
      collectionFields = await getFieldsOfFieldsDiv(collName, projectID);
      $('#crudModalTitle').text(`Edit Field`);
      targetUrl = 'fields';
    }

    $('#crudModalYes').text('Save');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(collectionFields);
    $('#crudModal').off();
    const table = $(`#${collID}`).DataTable();
    const tableData = table.rows().data();
    const rows_selected = table.column(0).checkboxes.selected();
    const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
    $('#crudModal').on('show.coreui.modal', async function (e) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.fillFormByName)('#crudModal', 'input, select', selectedData[0], true);
      await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__.prepDataPerms)('#crudModal', selectedData[0]);
      await (0,_formModules_dataRestrictTo__WEBPACK_IMPORTED_MODULE_6__.prepDataRestrictTo)('#crudModal', selectedData[0]);

      if (rows_selected.length > 1) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.prepareMultiUpdateModal)('#crudModal', '#crudModalBody', 'input, select');
      } else {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.prepareClickToActivateModal)('#crudModal', '#crudModalBody', 'input, select', selectedData[0]);
      }
    });
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();
      $('#crudModalError').empty();
      const formValues = $('#crudModal').find('input,select');
      const requiredValues = formValues.filter('[required]');
      const requiredFields = $.map(requiredValues, function (el) {
        return $(el).attr('name');
      });
      let formObj, stop;

      if (rows_selected.length > 1) {
        [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, true);
      } else {
        [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, 'undefined');
      }

      formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.convertFormObj)(formObj); // get only updated fields:

      if (rows_selected.length === 1) {
        formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getUpdatedFields)(selectedData[0], formObj);
      }

      if (stop === false && collName) {
        for (var i = 0; i < selectedData.length; i++) {
          const success = await (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.crudAjaxRequest)(targetUrl, 'PATCH', selectedData[i]._id, projectID, collName, formObj, formValues, '#crudModalError');

          if (!success) {
            updateNavbarTables(collID, projectID);
            break;
          }

          if (success && selectedData.length - 1 === i) {
            updateNavbarTables(collID, projectID);
            $('#crudModal').modal('hide');
          }
        }
      }
    });

    if (rows_selected.length === 0) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please click checkboxes to edit items.');
    } else if (rows_selected.length > 0) {
      $('#crudModal').modal('show');
    }
  }); // ================= INSERT BUTTON =================

  $(document).on('click', `button.insert-data`, async function (e) {
    $('#crudModalError').empty();
    const collID = $(this).attr('collID');
    const collLabel = $(this).attr('collLabel');
    const collName = $(this).attr('collName');
    const projectID = $(this).attr('projectID');
    let collectionFields;
    let targetUrl;

    if (collID == `all_collections_${projectID}`) {
      collectionFields = await getFieldsOfCollectionDiv(collName, projectID);
      $('#crudModalTitle').text(`Insert Collection`);
      targetUrl = 'collections';
    } else if (collID == 'all_projects') {
      collectionFields = await getFieldsOfProjectDiv();
      $('#crudModalTitle').text(`Insert Project`);
      targetUrl = 'projects';
    } else {
      collectionFields = await getFieldsOfFieldsDiv(collName, projectID);
      $('#crudModalTitle').text(`Insert Field`);
      targetUrl = 'fields';
    }

    $('#crudModalYes').text('Save');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(collectionFields);
    $('#crudModal').off();
    await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_5__.prepDataPerms)('#crudModal', {});
    await (0,_formModules_dataRestrictTo__WEBPACK_IMPORTED_MODULE_6__.prepDataRestrictTo)('#crudModal', {});
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.prepareClickToActivateModal)('#crudModal', '#crudModalBody', 'input, select', {});
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();
      const formValues = $('#crudModal').find('input,select');
      const requiredValues = formValues.filter('[required]');
      const requiredFields = $.map(requiredValues, function (el) {
        return $(el).attr('name');
      });
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true, true);
      formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.convertFormObj)(formObj);

      if (stop === false && collName) {
        const success = await (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.crudAjaxRequest)(targetUrl, 'POST', '', projectID, collName, formObj, formValues, '#crudModalError');

        if (success) {
          // create default identifier field on collection insert
          if (targetUrl == 'collections') {
            const identifierField = {
              collectionID: success,
              identifier: true,
              label: 'ID',
              name: 'id',
              namingPattern: formObj.name.charAt(0).toUpperCase() + '-${AUTOINCREMENT}',
              required: true,
              type: 'String',
              unique: true
            };
            await (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.crudAjaxRequest)('fields', 'POST', '', projectID, collName, identifierField, formValues, '#crudModalError');
          }

          await updateNavbarTables(collID, projectID);
          $('#crudModal').modal('hide');
        }
      }
    });
    $('#crudModal').modal('show');
  }); // ================= DELETE BUTTON =================

  $(document).on('click', `button.delete-data`, async function (e) {
    $('#crudModalError').empty();
    const collID = $(this).attr('collID');
    const collLabel = $(this).attr('collLabel');
    const collName = $(this).attr('collName');
    const projectID = $(this).attr('projectID');
    const table = $(`#${collID}`).DataTable();
    const tableData = table.rows().data();
    const rows_selected = table.column(0).checkboxes.selected();
    const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
    const items = selectedData.length === 1 ? `the item?` : `${selectedData.length} items?`;
    let targetUrl = '';

    if (collID == `all_collections_${projectID}`) {
      $('#crudModalTitle').text(`Remove Collection`);
      targetUrl = 'collections';
    } else if (collID == 'all_projects') {
      $('#crudModalTitle').text(`Remove Project`);
      targetUrl = 'projects';
    } else {
      $('#crudModalTitle').text(`Remove Field`);
      targetUrl = 'fields';
    }

    $('#crudModalYes').text('Remove');
    $('#crudModalBody').empty();
    $('#crudModalBody').append(getErrorDiv());
    $('#crudModalBody').append(`<p>Are you sure you want to delete ${items}</p>`);
    $('#crudModal').off();
    $('#crudModal').on('click', '#crudModalYes', async function (e) {
      e.preventDefault();

      for (var i = 0; i < selectedData.length; i++) {
        const success = await (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.crudAjaxRequest)(targetUrl, 'DELETE', selectedData[i]._id, projectID, collName, {}, {}, '#crudModalError');

        if (!success) {
          updateNavbarTables(collID, projectID);
          break;
        }

        if (success && selectedData.length - 1 === i) {
          updateNavbarTables(collID, projectID);
          $('#crudModal').modal('hide');
        }
      }
    });

    if (selectedData.length === 0) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please click checkboxes to delete items.');
    } else if (selectedData.length > 0) {
      $('#crudModal').modal('show');
    }
  });
};

const refreshCustomDropdown = (projectID, selectId, type) => {
  let dropdownID = '';

  if (type == 'api') {
    dropdownID = `#select-api-${projectID}`;
  } else if (type == 'event') {
    dropdownID = `#select-event-${projectID}`;
  }

  let dropdown = $(dropdownID);
  const newDropdown = getCustomDropdown(projectID, type);
  dropdown.replaceWith(newDropdown);
  dropdown = $(dropdownID);

  if (selectId) {
    dropdown.val(selectId);
  }

  dropdown.trigger('change');
};

const refreshEventDropdown = (projectID, selectId) => {
  const dropdown = $(`#select-event-${projectID}`);
  const events = $s.events.filter(f => f.projectID == projectID);
  dropdown.empty();
  dropdown.append($('<option>', {
    value: '',
    text: '-- Select Event --'
  }));
  $.each(events, function (i, item) {
    dropdown.append($('<option>', {
      value: item._id,
      text: item.name
    }));
  });

  if (selectId) {
    dropdown.val(selectId);
  }

  dropdown.trigger('change');
};

const getCustomDropdown = (projectID, type) => {
  const projectData = $s.projects.filter(p => p._id === projectID);
  const projectName = projectData[0].name;
  let idPart = '';
  let label = '';
  let data = '';

  if (type === 'event') {
    idPart = 'select-event';
    label = 'Select Event';
    data = $s.events;
  } else if (type === 'api') {
    idPart = 'select-api';
    label = 'Select Route';
    data = $s.apis;
  }

  const idText = projectID ? `id="${idPart}-${projectID}"` : '';
  let dropdown = `<select class="form-control ${idPart}" projectID="${projectID}" ${idText}>`;
  dropdown += `<option value="" >--- ${label} ---</option>`;

  if (data) {
    const subData = data.filter(e => e.projectID == projectID);
    subData.forEach(i => {
      if (type == 'event') {
        dropdown += `<option  value="${i._id}">${i.name}</option>`;
      } else if (type == 'api') {
        ///api/v1/projects/vitiligo/data/sample/summary
        let collectionName = '';

        if ($s.collections) {
          const collData = $s.collections.filter(c => c._id === i.collectionID);
          if (collData[0]) collectionName = collData[0].name;
        }

        dropdown += `<option  value="${i._id}">/api/v1/projects/${projectName}/data/${collectionName}/format/${i.route}</option>`;
      }
    });
  }

  dropdown += `</select>`;
  return dropdown;
};

const getAPITab = projectID => {
  const dropdown = getCustomDropdown(projectID, 'api');
  const ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-10">
      ${dropdown}
    </div>
    <div class="col-sm-2">
      <button class="btn btn-primary insert-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Insert" projectID="${projectID}">
        <i class="cil-plus"> </i>
      </button>
      <button class="btn btn-primary edit-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Edit" projectID="${projectID}">
        <i class="cil-pencil"> </i>
      </button>
      <button class="btn btn-primary delete-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Delete" projectID="${projectID}">
        <i class="cil-trash"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary cancel-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Cancel" projectID="${projectID}">
        <i class="cil-reload"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary save-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Save API config" projectID="${projectID}">
        <i class="cil-save"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary update-api" type="button" data-toggle="tooltip" data-placement="bottom" title="Update API Config" projectID="${projectID}">
        <i class="cil-save"> </i>
      </button>
    </div>
  </div>
  <div class="row" style="margin-top: 20px;" id="api-workflow-${projectID}">
  </div>
  `;
  return ret;
};

const getTreeTab = projectID => {
  //style="border: 1px black solid; max-width: 900px;"
  const ret = `<section id="d3-tree-${projectID}" style="height: 500px; max-width:100%;"></section>`;
  return ret;
};

const getEventTab = projectID => {
  const dropdown = getCustomDropdown(projectID, 'event');
  const ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-10">
      ${dropdown}
    </div>
    <div class="col-sm-2">
      <button class="btn btn-primary insert-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Insert" projectID="${projectID}">
        <i class="cil-plus"> </i>
      </button>
      <button class="btn btn-primary edit-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Edit" projectID="${projectID}">
        <i class="cil-pencil"> </i>
      </button>
      <button class="btn btn-primary delete-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Delete" projectID="${projectID}">
        <i class="cil-trash"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary cancel-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Cancel" projectID="${projectID}">
        <i class="cil-reload"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary save-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Save Event" projectID="${projectID}">
        <i class="cil-save"> </i>
      </button>
      <button style="display:none;" class="btn btn-primary update-event" type="button" data-toggle="tooltip" data-placement="bottom" title="Update Event" projectID="${projectID}">
        <i class="cil-save"> </i>
      </button>
    </div>
  </div>
  <div class="row" style="margin-top: 20px;" id="event-workflow-${projectID}">
  </div>
  `;
  return ret;
};

const refreshCollectionNavbar = async (projectId, type) => {
  console.log('refreshCollectionNavbar');
  const projectTabID = 'projectTab_' + (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getCleanDivId)(projectId);
  const isNavbarExist = $(`#${projectTabID}`).html();

  if (isNavbarExist) {
    await getAjaxData();
    await getAjaxData('events');
    await getAjaxData('apis');
  }

  let header = '<ul class="nav nav-tabs" role="tablist" style="margin-top: 10px;">';
  let content = '<div class="tab-content">';
  let tabs = [];
  tabs.push({
    name: 'all_collections',
    label: 'All Collections',
    id: `all_collections_${projectId}`
  }, {
    name: 'all_events',
    label: 'All Events',
    id: `all_events_${projectId}`
  }, {
    name: 'tree_view',
    label: 'Tree View',
    id: `tree_view_${projectId}`
  }, {
    name: 'all_apis',
    label: 'API Config',
    id: `all_apis_${projectId}`
  });
  tabs = tabs.concat($s.collections);
  let k = 0;

  for (var i = 0; i < tabs.length; i++) {
    const collectionProjectID = tabs[i].projectID;

    if (projectId && collectionProjectID == projectId || !projectId && !collectionProjectID || tabs[i].id == `all_collections_${projectId}` || tabs[i].id == `all_events_${projectId}` || tabs[i].id == `all_apis_${projectId}` || tabs[i].id == `tree_view_${projectId}`) {
      k++;
      const collectionName = tabs[i].name;
      const collectionLabel = tabs[i].label;
      const collectionId = tabs[i].id;
      const id = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getCleanDivId)(collectionId);
      const collTabID = 'collTab_' + id;
      const active = k === 1 ? 'active' : '';
      const headerLi = `
      <li class="nav-item">
          <a class="nav-link ${active} collection" data-toggle="tab" tableID="${collectionId}" collectionId="${collectionId}" projectID="${projectId}" href="#${collTabID}" aria-expanded="true">${collectionLabel}</a>
      </li>`;
      header += headerLi;
      let colNavbar = '';
      let crudButtons = '';

      if (tabs[i].id == `all_events_${projectId}`) {
        colNavbar = getEventTab(projectId);
      } else if (tabs[i].id == `all_apis_${projectId}`) {
        colNavbar = getAPITab(projectId);
      } else if (tabs[i].id == `tree_view_${projectId}`) {
        colNavbar = getTreeTab(projectId);
      } else {
        let dbEditor = true;
        let refreshIdentifier = true;
        let childRef = true;
        let delBtn = false;

        if (tabs[i].id == `all_collections_${projectId}`) {
          refreshIdentifier = false;
          dbEditor = false;
          childRef = false;
          delBtn = true;
        }

        colNavbar = getCollectionTable(collectionId, projectId);
        crudButtons = (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.getCrudButtons)(collectionId, collectionLabel, collectionName, projectId, {
          excel: false,
          refreshIdentifier: refreshIdentifier,
          dbEditor: dbEditor,
          childRef: childRef,
          delBtn: delBtn
        });
      }

      const contentDiv = `
      <div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${collTabID}">
          ${crudButtons}
          ${colNavbar}
        </div>`;
      content += contentDiv;
    }
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div role="tabpanel">';
  ret += header;
  ret += content;
  ret += '</div>';

  if (isNavbarExist && type == 'refresh') {
    $(`#${projectTabID}`).html('');
    $(`#${projectTabID}`).append(ret);
    $('a.collection[data-toggle="tab"]').trigger('show.coreui.tab');
    return;
  } else {
    return ret;
  }
};

const getAjaxData = async type => {
  if (type == 'events') {
    let [events] = await Promise.all([ajaxCall('GET', '/api/v1/events')]);
    $s.events = events;
  } else if (type == 'apis') {
    let [apis] = await Promise.all([ajaxCall('GET', '/api/v1/config/apis')]);
    $s.apis = apis;
  } else {
    let [collections, fields, projects] = await Promise.all([ajaxCall('GET', '/api/v1/collections'), ajaxCall('GET', '/api/v1/fields'), ajaxCall('GET', '/api/v1/projects')]);
    $s.collections = collections;
    $s.fields = fields;
    $s.projects = projects;
  }
};

const refreshAdminProjectNavbar = async () => {
  console.log('refreshAdminProjectNavbar');
  const isNavbarExist = $('#admin-allProjectNav').html();

  if (!isNavbarExist) {
    showTableTabs();
    bindEventHandlers();
  }

  await getAjaxData();
  await getAjaxData('events');
  await getAjaxData('apis');
  let tabs = [];
  tabs.push({
    name: 'all_projects',
    label: 'All Projects',
    id: 'all_projects'
  });
  if ($s.projects.length) tabs = tabs.concat($s.projects);
  let header = '<ul class="nav nav-tabs" role="tablist">';
  let content = '<div class="tab-content">';

  for (var i = 0; i < tabs.length; i++) {
    const projectId = tabs[i].id;
    const projectLabel = tabs[i].label;
    const projectName = tabs[i].name;
    const id = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getCleanDivId)(projectId);
    const projectTabID = 'projectTab_' + id;
    const active = i === 0 ? 'active' : '';
    const headerLi = `
    <li class="nav-item">
        <a class="nav-link ${active} collection" data-toggle="tab" tableID="${projectId}" projectID="${projectId}" href="#${projectTabID}" aria-expanded="true">${projectLabel}</a>
    </li>`;
    header += headerLi;
    let colNavbar = '';
    let crudButtons = '';

    if (tabs[i].id == 'all_projects') {
      colNavbar = getCollectionTable(projectId, projectId);
      crudButtons = (0,_dashboard__WEBPACK_IMPORTED_MODULE_3__.getCrudButtons)(projectId, projectLabel, projectName, projectId, {
        excel: false,
        delBtn: true
      });
    } else {
      colNavbar = await refreshCollectionNavbar(projectId, 'return');
    }

    const contentDiv = `
    <div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${projectTabID}">
        ${crudButtons}
        ${colNavbar}
      </div>`;
    content += contentDiv;
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div role="tabpanel">';
  ret += header;
  ret += content;
  ret += '</div>';

  if (isNavbarExist && ret) {
    $('#admin-allProjectNav').html('');
    $('#admin-allProjectNav').append(ret);
    $('a.collection[data-toggle="tab"]').trigger('show.coreui.tab');
    return;
  } else {
    return ret;
  }
};

const getProjectData = projectID => {
  if (!projectID) return '';
  const projectData = $s.projects.filter(field => field._id === projectID);
  if (projectData && projectData[0]) return projectData[0];
  return '';
};

const getFieldsOfFieldsDiv = async (collName, projectID) => {
  let ret = '';
  const fields = Object.keys(fieldsOfFieldsModel);

  for (var k = 0; k < fields.length; k++) {
    const name = fields[k];

    if (name == 'collectionID') {
      fieldsOfFieldsModel[name].default = collName;
    }

    const label = fieldsOfFieldsModel[name].label;
    const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(fieldsOfFieldsModel[name], getProjectData(projectID), $s);
    ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(element, label, fieldsOfFieldsModel[name]);
  }

  return ret;
};

const getFieldsOfCollectionDiv = async (collName, projectID) => {
  let ret = '';
  const fields = Object.keys(fieldsOfCollectionsModel);

  for (var k = 0; k < fields.length; k++) {
    const name = fields[k];

    if (name == 'projectID') {
      fieldsOfCollectionsModel[name].default = projectID;
    }

    const label = fieldsOfCollectionsModel[name].label;
    const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(fieldsOfCollectionsModel[name], getProjectData(projectID), $s);
    ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(element, label, fieldsOfCollectionsModel[name]);
  }

  return ret;
};

const getFieldsOfProjectDiv = async () => {
  let ret = '';
  const fields = Object.keys(fieldsOfProjectModel);

  for (var k = 0; k < fields.length; k++) {
    const name = fields[k];
    const label = fieldsOfProjectModel[name].label;
    const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormElement)(fieldsOfProjectModel[name], '', $s);
    ret += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_4__.getFormRow)(element, label, fieldsOfProjectModel[name]);
  }

  return ret;
};

/***/ }),

/***/ "./public/js/dashboard.js":
/*!********************************!*\
  !*** ./public/js/dashboard.js ***!
  \********************************/
/*! namespace exports */
/*! export crudAjaxRequest [provided] [no usage info] [missing usage info prevents renaming] */
/*! export deleteDataModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export editDataModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCollectionByName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCollectionTable [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCrudButtons [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getProjectNavbar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export insertDataModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadAllTabContent [provided] [no usage info] [missing usage info prevents renaming] */
/*! export refreshDataTables [provided] [no usage info] [missing usage info prevents renaming] */
/*! export showInfoInDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "showInfoInDiv": () => /* binding */ showInfoInDiv,
/* harmony export */   "deleteDataModal": () => /* binding */ deleteDataModal,
/* harmony export */   "insertDataModal": () => /* binding */ insertDataModal,
/* harmony export */   "editDataModal": () => /* binding */ editDataModal,
/* harmony export */   "getCrudButtons": () => /* binding */ getCrudButtons,
/* harmony export */   "getCollectionTable": () => /* binding */ getCollectionTable,
/* harmony export */   "getCollectionByName": () => /* binding */ getCollectionByName,
/* harmony export */   "crudAjaxRequest": () => /* binding */ crudAjaxRequest,
/* harmony export */   "refreshDataTables": () => /* binding */ refreshDataTables,
/* harmony export */   "loadAllTabContent": () => /* binding */ loadAllTabContent,
/* harmony export */   "getProjectNavbar": () => /* binding */ getProjectNavbar
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xlsx */ "./node_modules/xlsx/xlsx.js");
/* harmony import */ var xlsx__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xlsx__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _formModules_crudData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formModules/crudData */ "./public/js/formModules/crudData.js");
/* harmony import */ var _formModules_fileForm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formModules/fileForm */ "./public/js/formModules/fileForm.js");
/* harmony import */ var _formModules_dataPerms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./formModules/dataPerms */ "./public/js/formModules/dataPerms.js");
/* harmony import */ var _treeView__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./treeView */ "./public/js/treeView.js");
/* harmony import */ var handsontable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! handsontable */ "./node_modules/handsontable/dist/handsontable.js");
/* harmony import */ var handsontable__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(handsontable__WEBPACK_IMPORTED_MODULE_9__);
/* eslint-disable */
;



const JSON5 = __webpack_require__(/*! json5 */ "./node_modules/json5/dist/index.js");







 // GLOBAL SCOPE

let $s = {
  data: {},
  tableData: {},
  handsontables: {},
  compare: {},
  dropzone: '',
  formNum: 0
};

const ajaxCall = async (method, url) => {
  console.log(method, url);

  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    return res.data.data.data;
  } catch (err) {
    //console.log(err);
    return '';
  }
};

const getTableHeaders = collID => {
  let ret = '';
  ret += `<th></th>`; // for checkboxes
  // ret += `<th>DID</th>`;

  for (var i = 0; i < $s.fields.length; i++) {
    if ($s.fields[i].collectionID == collID && $s.fields[i].label && $s.fields[i].hidden !== true) ret += `<th>${$s.fields[i].label}</th>`;
  } // ret += `<th>ID</th>`;


  ret += `<th>Permission</th>`;
  return ret;
};

const showInfoInDiv = (textID, text) => {
  //true if modal is open
  const oldText = $(textID).html();
  let newText = '';

  if (oldText.length) {
    newText = oldText + '<br/>' + text;
  } else {
    newText = text;
  }

  $(textID).html(newText);
};

const getErrorDiv = () => {
  return '<p style="background-color:#e211112b;" id="crudModalError"></p>';
};

const getProjectDataObj = projectID => {
  if (!projectID) return '';
  const projectData = $s.projects.filter(field => field._id === projectID);
  if (projectData && projectData[0]) return projectData[0];
  return '';
};

const makeReadOnlyUpdate = hot => {
  const data = hot.getData();

  for (let n = 0; n < data.length; n++) {
    hot.setCellMeta(n, 0, 'readOnly', true);
    hot.setCellMeta(n, 1, 'readOnly', true);
  }
};

const getExcelColumns = collid => {
  const datatable = $(`#${collid}`).DataTable();
  let columnsObj = datatable.init().columns;
  let selColumns = [];

  for (let i = 0; i < columnsObj.length; i++) {
    if (i === 0 && columnsObj[i].mData == '_id') continue; // skip first column for checkboxes

    if (columnsObj[i].mData == 'perms') continue;
    selColumns.push(columnsObj[i].mData);
  }

  return selColumns;
}; // highlight imported and updated table data


const makeUpdatedTableData = (tableID, projectid) => {
  let identifierName = '';
  let identifierIndex = '';
  let collName = '';
  let collid = '';
  const hot = $s.handsontables[tableID];
  const data = hot.getData(); // 1. get header and detect indentifier column

  const header = hot.getColHeader();

  for (let k = 0; k < header.length; k++) {
    if (k == 0 || k == 1) continue; // Skip Update status and update log columns

    const headerSplit = header[k].split('.');

    if (headerSplit[0] && headerSplit[1]) {
      collName = headerSplit[0];
      const collData = $s.collections.filter(c => c.name == collName && c.projectID == projectid);

      if (collData && collData[0] && collData[0]._id) {
        collid = collData[0]._id;
        const identifierData = $s.fields.filter(f => f.collectionID == collid && f.identifier);

        if (identifierData && identifierData[0] && identifierData[0].name) {
          identifierName = identifierData[0].name;
          identifierIndex = k;
          break;
        }
      }
    }
  }

  if (!identifierName) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)('Identifier Column Not Found.');
    return;
  }

  const fields = $s.fields.filter(f => f.collectionID === collid);
  const fieldsArr = fields.map(f => f.name);
  const excelData = prepExcelData(projectid, collid, fieldsArr, collName, 'object', 'short');

  for (let r = 0; r < data.length; r++) {
    let existingDataFound = false;
    const rowData = data[r];
    const identifierValue = rowData[identifierIndex]; // 2. based on identifier column check existing data

    if (identifierValue && excelData) {
      const existingData = excelData.filter(d => d[identifierName] == identifierValue);

      if (existingData && existingData[0]) {
        existingDataFound = true;

        for (let c = 0; c < header.length; c++) {
          if (c == 0 || c == 1 || c == identifierIndex) continue;
          const key = header[c].replace(`${collName}.`, '');
          let value = rowData[c];

          if (rowData[c] === null) {
            value = '';
          }

          if (value === '' && existingData[0][key] === undefined) continue;
          if (value === '' && existingData[0][key] === null) continue;
          if (existingData[0][key] == value) continue;
          hot.setCellMeta(r, c, 'className', 'bg-yellow');
        }
      } // if existingDataFound not found, then heightlight all of them


      if (!existingDataFound) {
        for (let c = 0; c < rowData.length; c++) {
          if (c === 0 || c === 1) continue;
          hot.setCellMeta(r, c, 'className', 'bg-yellow');
        }
      }
    }
  }

  hot.render();
};

const createHandsonTable = (tableID, header, statusExcelData) => {
  $(`#${tableID}`).css('display', 'block');
  const isHandsonTableInit = $(`#${tableID}`).hasClass('handsontable');

  if (!isHandsonTableInit) {
    const container = document.getElementById(tableID);
    const hot = new (handsontable__WEBPACK_IMPORTED_MODULE_9___default())(container, {
      data: statusExcelData,
      colHeaders: header,
      width: '100%',
      height: 500,
      rowHeaders: true,
      stretchH: 'all',
      contextMenu: true,
      columnSorting: {
        indicator: true,
        headerAction: true
      },
      afterChange: changes => {
        if (changes) {
          changes.forEach(([row, prop, oldValue, newValue]) => {
            if (oldValue === null) oldValue = '';

            if (oldValue != newValue) {
              hot.setCellMeta(row, prop, 'className', 'bg-yellow');
              hot.render();
            }
          });
        }
      },
      afterCreateCol: () => {
        hot.render();
      },
      afterCreateRow: () => {
        makeReadOnlyUpdate(hot, statusExcelData);
        hot.render();
      },
      afterRemoveRow: () => {
        hot.render();
      },
      afterRemoveCol: () => {
        hot.render();
      }
    }); // hot.alter('insert_col', 0, 2);
    // hot.setDataAtCell(0, 0, 'Update Status');
    // cellProperties.readOnly;
    //cellPropertiesID = $("#example1grid").handsontable('getCellMeta',i,j);
    //cellPropertiesID.readOnly = value;

    makeReadOnlyUpdate(hot, statusExcelData);
    hot.render();
    $s.handsontables[tableID] = hot;
  }
};

const getExcelNavbar = (collId, tabs) => {
  let header = '<ul class="nav nav-tabs" role="tablist" style="margin-top: 10px;">';
  let content = '<div class="tab-content">';
  let k = 0;

  for (var i = 0; i < tabs.length; i++) {
    k++;
    const cleanTabName = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getCleanDivId)(`${collId}_${tabs[i]}`);
    const tabID = 'excelTab_' + cleanTabName;
    const active = k === 1 ? 'active' : '';
    const excelId = `import-spreadsheet-${collId}-${i}`;
    const headerLi = `
      <li class="nav-item">
          <a class="nav-link ${active} excel-tabs" excelId="${excelId}" data-toggle="tab" href="#${tabID}" aria-expanded="true">${tabs[i]}</a>
      </li>`;
    header += headerLi;
    const excelTable = getExcelTable(excelId);
    const contentDiv = `
      <div role="tabpanel" class="tab-pane ${active}" excelId="${excelId}" searchtab="true" id="${tabID}">
          ${excelTable}
        </div>`;
    content += contentDiv;
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div>';
  ret += header;
  ret += content;
  ret += '</div>';
  return ret;
};

const getRefCollIdentifiers = (projectID, collid) => {
  let projectName = '';
  const projectData = $s.projects.filter(p => p._id == projectID);
  if (projectData && projectData[0] && projectData[0].name) projectName = projectData[0].name;
  const collFields = getFieldsOfCollection(collid);
  let refFields = []; // ref field names

  let refCollectionIDs = []; // extract from ref data

  let refCollIdentifiers = []; // use  from ref data

  for (let i = 0; i < collFields.length; i++) {
    if (collFields[i].ref) {
      let refCollectionID = '';
      let refFieldIdent = '';
      refFields.push(collFields[i].name);

      if (collFields[i].ref.startsWith(projectName + '_')) {
        const refColName = collFields[i].ref.replace(new RegExp('^' + projectName + '_'), '');

        if (refColName) {
          const refCoData = $s.collections.filter(c => c.name == refColName);

          if (refCoData && refCoData[0] && refCoData[0]._id) {
            refCollectionID = refCoData[0]._id;
            const refFieldIdenData = $s.fields.filter(f => f.collectionID == refCollectionID && f.identifier);

            if (refFieldIdenData && refFieldIdenData[0] && refFieldIdenData[0].name) {
              refFieldIdent = refFieldIdenData[0].name;
            }
          }
        }

        refCollectionIDs.push(refCollectionID);
        refCollIdentifiers.push(refFieldIdent);
      }
    }
  }

  return {
    refFields,
    refCollectionIDs,
    refCollIdentifiers
  };
};

const getKeyValueExcel = (cleanHeader, rowData, refFields, refCollectionIDs, refCollIdentifiers) => {
  let key = '';
  let value = ''; // find reference columns and get their ids

  console.log('refFields', refFields);
  console.log('refCollectionIDs', refCollectionIDs);
  console.log('refCollIdentifiers', refCollIdentifiers);

  if (refFields.indexOf(cleanHeader) > -1) {
    const refIndex = refFields.indexOf(cleanHeader);
    const refCollectionID = refCollectionIDs[refIndex];
    const refCollIdentifier = refCollIdentifiers[refIndex];
    key = cleanHeader;
    value = rowData;
    console.log('key', key);
    console.log('value', value); // get _id info

    if (refCollectionID) {
      const collData = $s.data[refCollectionID];
      console.log('collData', collData);
      const selData = collData.filter(d => d[refCollIdentifier] == rowData);

      if (selData && selData[0] && selData[0]._id) {
        key = cleanHeader;
        value = selData[0]._id;
      }
    }
  } else {
    key = cleanHeader;

    if (rowData === null) {
      value = '';
    } else {
      value = rowData;
    }
  }

  return {
    key,
    value
  };
};

const syncTableData = async (tableID, collid, collName, projectid) => {
  const hot = $s.handsontables[tableID];
  const data = hot.getData();
  const header = hot.getColHeader();
  const {
    projectPart
  } = getProjectData(projectid); // identifierAndNamingPatterns

  const updateOnInsert = $s.fields.filter(f => (f.identifier || f.namingPattern) && f.collectionID == collid);
  const {
    refFields,
    refCollectionIDs,
    refCollIdentifiers
  } = getRefCollIdentifiers(projectid, collid);

  for (let i = 0; i < data.length; i++) {
    let updatedObj = {};
    let insertObj = {};
    const rowData = data[i];
    let updtCheck = false;

    for (let k = 0; k < header.length; k++) {
      if (k == 0 || k == 1) continue; // Skip Update status and update log columns

      const rowProperties = hot.getCellMeta(i, k);

      if (rowProperties.className && rowProperties.className == 'bg-yellow') {
        updtCheck = true;
      }
    }

    if (updtCheck) {
      for (let k = 0; k < header.length; k++) {
        if (k == 0 || k == 1) continue; // Skip Update status and update log columns

        const rowProperties = hot.getCellMeta(i, k);
        const cleanHeader = header[k].replace(`${collName}.`, '');
        const {
          key,
          value
        } = getKeyValueExcel(cleanHeader, rowData[k], refFields, refCollectionIDs, refCollIdentifiers);
        if (key != '_id' && key != 'DID' && value) insertObj[key] = value;

        if (key != '_id' && key != 'DID' && rowProperties.className && rowProperties.className == 'bg-yellow') {
          updatedObj[key] = value;
        }
      }

      console.log('updtCheck', i, updtCheck, updatedObj, insertObj);

      try {
        if (!$.isEmptyObject(updatedObj)) {
          const rowID = getExcelRowID(collid, collName, header, rowData); // update document

          let res;

          if (rowID) {
            res = await excelCrudCall('PATCH', `/api/v1/${projectPart}data/${collName}/${rowID}`, updatedObj, collid, i); // insert new document
          } else {
            res = await excelCrudCall('POST', `/api/v1/${projectPart}data/${collName}`, insertObj, collid, i);
          } // update _id and DID, perms columns


          console.log(res);
          const newID = res._id;
          const newDID = res.DID;
          const newPerms = res.perms;
          const indexID = header.indexOf(`${collName}._id`);
          const indexDID = header.indexOf(`${collName}.DID`);
          const indexPerms = header.indexOf(`${collName}.perms`);
          if (indexID != -1 && newID) hot.setDataAtCell(i, indexID, newID);
          if (indexDID != -1 && newDID) hot.setDataAtCell(i, indexDID, newDID);

          if (indexPerms != -1 && newPerms) {
            if (typeof newPerms === 'object' && newPerms !== null) {
              hot.setDataAtCell(i, indexPerms, JSON.stringify(newPerms));
            } else {
              hot.setDataAtCell(i, indexPerms, newPerms);
            }
          } // update identifier and namingpattern columns


          for (let m = 0; m < updateOnInsert.length; m++) {
            let fieldName = updateOnInsert[m].name;

            if (fieldName && res[fieldName]) {
              const newData = res[fieldName];
              const indexData = header.indexOf(`${collName}.${fieldName}`);

              if (indexData != -1 && newData) {
                hot.setDataAtCell(i, indexData, newData);
              }
            }
          }
        }
      } catch (err) {
        console.log(err);
      } finally {
        const status = $s.compare[collid][i].status;
        const log = $s.compare[collid][i].log;
        hot.setDataAtCell(i, 0, status);
        hot.setDataAtCell(i, 1, log);

        if (status == 'updated' || status == 'inserted') {
          for (let n = 0; n < header.length; n++) {
            hot.setCellMeta(i, n, 'className', '');
          }
        } else {
          hot.setCellMeta(i, 0, 'className', '');
          hot.setCellMeta(i, 1, 'className', '');
        }

        hot.render();
      }
    }
  }
};

const addStatusColumns = data => {
  let ret = [];

  for (let i = 0; i < data.length; i++) {
    let newArr = [];

    if (i == 0) {
      newArr.push('Update Status', 'Update Log');
    } else {
      newArr.push('', '');
    }

    newArr = newArr.concat(data[i]);
    ret.push(newArr);
  }

  return ret;
};

const addEmptyRows = (data, numRows) => {
  const numOfColumns = data[0].length;

  if (numOfColumns) {
    let emptyRow = [];

    for (let i = 0; i < numOfColumns; i++) {
      emptyRow.push('');
    }

    for (let i = 0; i < numRows; i++) {
      data.push(emptyRow);
    }
  }

  return data;
};

const createDropzone = (id, buttonID, destroy) => {
  if (destroy) {
    $(`#${id}`)[0].dropzone.destroy();
    $(`#${id}`).off();
  }

  if (!$(`#${id}`)[0].dropzone) {
    $(`#${id}`).dropzone({
      paramName: 'file',
      // The name that will be used to transfer the file
      maxFilesize: 30,
      // MB
      // maxFiles: 1,
      createImageThumbnails: false,
      dictDefaultMessage: 'Drop your Excel file here or <button type="button" style="margin-left:4px;" class="btn btn-light" >Select File </button>',
      accept: function (file, done) {
        $s.dropzone = file.name;
        done();
      },
      init: function () {
        this.on('complete', function (file) {
          if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
            $(`#${buttonID}`).css('display', 'inline-block');
          }
        });
      }
    });
  }
};

const getExcelRowID = (collid, collName, header, rowData) => {
  let id = '';
  let idField = ''; // search for ${collName}_id, or ${collName}.DID
  // get identifier field of collection

  const identifierField = $s.fields.filter(f => f.collectionID == collid && f.identifier);

  if (identifierField && identifierField[0] && identifierField[0].name) {
    idField = identifierField[0].name;
    const idFieldIndex = header.indexOf(`${collName}.${idField}`);

    if (idFieldIndex != -1 && rowData[idFieldIndex]) {
      const data = $s.data[collid];
      const selData = data.filter(d => d[idField] == rowData[idFieldIndex]);
      if (selData && selData[0] && selData[0]._id) return selData[0]._id;
    }
  }

  return id;
};

const excelCrudCall = async (method, url, data, tableID, rowIdx) => {
  if (!$s.compare[tableID]) $s.compare[tableID] = {};

  if (!$s.compare[tableID][rowIdx]) {
    $s.compare[tableID][rowIdx] = {
      req: '',
      res: '',
      log: '',
      status: ''
    };
  }

  try {
    Object.keys(data).forEach(key => {
      if (data[key] && $.type(data[key]) === 'string' && (data[key].charAt(0) == '{' || data[key].charAt(0) == '[')) {
        data[key] = JSON5.parse(data[key]);
      }
    });
  } catch {
    console.log('Format error', data);
    $s.compare[tableID][rowIdx].log = 'Format error in json data.';
    $s.compare[tableID][rowIdx].status = 'error';
    return '';
  }

  try {
    $s.compare[tableID][rowIdx].req = data;
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url,
      data
    });
    $s.compare[tableID][rowIdx].res = res.data.data.data;

    if (method == 'POST' && res.data.status == 'success') {
      $s.compare[tableID][rowIdx].status = 'inserted';
    } else if (method == 'PATCH' && res.data.status == 'success') {
      $s.compare[tableID][rowIdx].status = 'updated';
    } else {
      $s.compare[tableID][rowIdx].status = res.data.status;
    }

    $s.compare[tableID][rowIdx].log = '';
    return res.data.data.data;
  } catch (err) {
    $s.compare[tableID][rowIdx].log = err;

    if (err.response && err.response.data && err.response.data.message) {
      $s.compare[tableID][rowIdx].log = err.response.data.message;
    }

    $s.compare[tableID][rowIdx].status = 'error';
    console.log(err);
    return '';
  }
};

const getCollDropdown = (projectID, projectName, collectionID, collectionName, insert, update) => {
  const collRef = projectName ? `${projectName}_${collectionName}` : collectionName;
  let skip = '';
  if (!insert && !update) skip = `skip="skip"`;
  let collDropdown = `<select ${skip} class="form-control form-event-collection data-reference" projectID="${projectID}" collectionID="${collectionID}" collectionName="${collectionName}" ref="${collRef}">`;

  if (insert || update) {
    collDropdown += `<option value="" >  --- Choose to Update Item ---  </option>`;
  } else {
    collDropdown += `<option value="" >  --- Select ---  </option>`;
  }

  collDropdown += `</select>`;
  return {
    collDropdown,
    collRef
  };
};

const activateAllForm = (formId, find) => {
  const formValues = $(formId).find(find);

  for (var i = 0; i < formValues.length; i++) {
    if ($(formValues[i]).siblings('.multi-value').length) {
      $(formValues[i]).siblings('.multi-value').trigger('click');
    }
  }
};

const getEventFormGroupDiv = (formID, collLabel, collDropdown, showCollectionDropdown, multiple, fieldCheck) => {
  let ret = '';
  let multipleButton = '';
  let fieldsetClass = 'scheduler-border';
  let legendMargin = 'margin-bottom:30px;';

  if (!fieldCheck) {
    fieldsetClass = 'scheduler-border-top';
    legendMargin = '';
  }

  if (multiple) {
    multipleButton = `<button style="margin-left:5px;" class="btn btn-sm btn-pill btn-primary multiple-event-form" type="button">
    <i class="cil-plus"> </i>
    </button>`;
  }

  if (showCollectionDropdown) {
    ret = `
      <form class="form-horizontal" id="${formID}">
        <fieldset class="${fieldsetClass}">
          <legend class="scheduler-border" style="width:70%; ${legendMargin}">  
          <div class="row">
            <label class="col-md-4 col-form-label">${collLabel}</label>
            <div class="col-md-8">
              ${collDropdown}
            </div>
          </div>
        </legend>`;
  } else {
    ret = `
      <form class="form-horizontal" id="${formID}">
        <fieldset class="${fieldsetClass}">
          <legend class="scheduler-border" style="width:auto; ${legendMargin}">  
          <div>
            ${collLabel}
            <div style="display:none;" class="col-md-8">
              ${collDropdown}
            </div>
            ${multipleButton}
          </div>
        </legend>`;
  }

  return ret;
};

const refreshEventForm = async (projectID, eventID) => {
  $(`#event-form-div-${projectID}`).css('display', 'block');
  $(`#event-form-${projectID}`).empty();
  let allDataRefs = [];
  const projectData = $s.projects.filter(p => p._id === projectID);
  const eventData = $s.events.filter(e => e._id === eventID);

  if (projectData[0] && eventData[0] && eventData[0].fields) {
    const rawFields = eventData[0].fields;
    const groupByCollection = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.groupArrayOfObj)('collectionID');
    const groupedFields = groupByCollection(rawFields);
    const keys = Object.keys(groupedFields);

    for (let k = 0; k < keys.length; k++) {
      let div = '';
      const collectionID = keys[k];
      const group = groupedFields[collectionID];
      const col = $s.collections.filter(p => p._id === collectionID);
      const collLabel = col[0].label;
      const collectionName = col[0].name;
      const projectName = projectData[0].name ? projectData[0].name : '';
      let insert = false;
      let update = false;
      let multiple = false;
      let fieldCheck = false;
      if (group[0].insert) insert = true;
      if (group[0].update) update = true;
      if (group[0].multiple) multiple = true;
      if (group[0].field) fieldCheck = true;
      const {
        collDropdown,
        collRef
      } = getCollDropdown(projectID, projectName, collectionID, collectionName, insert, update);
      const formID = `form-event-${projectID}-${collectionID}-${k}`;
      const errorDiv = `<p style="background-color:#e211112b;" class="crudError" id="crudModalError-${projectID}-${collectionID}"></p>`;
      let showCollectionDropdown = update || !insert && !update;
      if (allDataRefs.includes(collRef)) showCollectionDropdown = false;
      allDataRefs.push(collRef);
      div += getEventFormGroupDiv(formID, collLabel, collDropdown, showCollectionDropdown, multiple, fieldCheck);

      for (let i = 0; i < group.length; i++) {
        let field = {};
        let label = '';
        const fieldId = group[i].field;

        if (fieldId) {
          const fieldData = $s.fields.filter(f => f._id === fieldId);
          field = fieldData[0];
          if (field) label = field.label;

          if (field && label) {
            const element = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.getFormElement)(field, projectData[0], $s);
            const refField = $(element).attr('ref');
            let copiedField = $.extend(true, {}, field);
            if (allDataRefs.includes(refField)) copiedField.hide = true;
            if (refField) allDataRefs.push(refField);
            div += (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.getFormRow)(element, label, copiedField);
          }
        }
      }

      div += `</fieldset></form>`;
      $(`#event-form-${projectID}`).append(errorDiv);
      $(`#event-form-${projectID}`).append(div);
      const dropdownElement = $(`#${formID}`).find('.form-event-collection')[0];
      const fieldsOfCollection = $s.fields.filter(f => f.collectionID === collectionID);
      (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.createSelectizeMultiField)(dropdownElement, $s.data[collectionID], fieldsOfCollection);
      (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepOntologyDropdown)(`#${formID}`, {}, $s);
      (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepReferenceDropdown)(`#${formID}`, $s);
      if (collectionName == 'run') (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepRunForm)(`#${formID}`, {}, $s, projectID);
      if (collectionName == 'file') (0,_formModules_fileForm__WEBPACK_IMPORTED_MODULE_6__.prepFileForm)(`#${formID}`, {}, $s, projectID);
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.prepareClickToActivateModal)(`#${formID}`, '', 'input, select', {});
      activateAllForm(`#${formID}`, 'input, select');
    }
  }
};

const convertRunFormObj = formObj => {
  if (formObj.out) {
    const outputs = formObj.out;
    Object.keys(outputs).forEach((k, i) => {
      if (outputs[k]) {
        outputs[k] = {};
      } else {
        delete outputs[k];
      }
    });
  }

  return formObj;
};

const saveDataEventForm = async (type, formID, collID, collName, projectID, oldData) => {
  const formValues = $(formID).find('input,select');
  const requiredValues = formValues.filter('[required]');
  const requiredFields = $.map(requiredValues, function (el) {
    return $(el).attr('name');
  });
  let formObj, stop, method, id;

  if (type === 'update') {
    method = 'PATCH';
    id = oldData._id;
    [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.createFormObj)(formValues, requiredFields, true, 'undefined');
    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.convertFormObj)(formObj);
    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getUpdatedFields)(oldData, formObj); // get only updated fields:
  } else if (type === 'insert') {
    method = 'POST';
    id = '';
    [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.createFormObj)(formValues, requiredFields, true, false);
    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.convertFormObj)(formObj);
    if (stop === false && collName == 'run') formObj = convertRunFormObj(formObj); // convertFileFormObjL converts object to array

    if (stop === false && collName == 'file') formObj = (0,_formModules_fileForm__WEBPACK_IMPORTED_MODULE_6__.convertFileFormObj)(formObj);
  }

  if (stop === false && collName) {
    let success;

    if (Array.isArray(formObj)) {
      for (let i = 0; i < formObj.length; i++) {
        success = await crudAjaxRequest('data', method, id, projectID, collName, formObj[i], formValues, `#crudModalError-${projectID}-${collID}`);

        if (!success) {
          refreshDataTables(collID, collID, collName, projectID);
          break;
        }

        if (success && formObj.length - 1 === i) {
          refreshDataTables(collID, collID, collName, projectID);
        }
      }
    } else {
      success = await crudAjaxRequest('data', method, id, projectID, collName, formObj, formValues, `#crudModalError-${projectID}-${collID}`);

      if (success) {
        refreshDataTables(collID, collID, collName, projectID);
      }
    }
  }

  return success;
};

const refreshCollectionDiv = async (projectID, collectionID, dry) => {
  const collectionData = $s.collections.filter(c => c._id === collectionID);

  if (collectionData && collectionData[0]) {
    const collectionLabel = collectionData[0]['label'];
    const collectionName = collectionData[0]['name'];
    const tableID = collectionID;
    const colTable = getCollectionTable(collectionID, 'default');
    const colExcelTable = getExcelTable(`spreadsheet-${collectionID}`);
    const colDropzone = getDropzoneTable(collectionID, projectID);
    const crudButtons = getCrudButtons(collectionID, collectionLabel, collectionName, projectID, {
      excel: true,
      delBtn: true
    });
    const outerDiv = `#collection-outerdiv-${collectionID}-${projectID}`;
    const isEmptyDiv = $(outerDiv).html() === '';

    if (isEmptyDiv) {
      $(outerDiv).append(`${crudButtons}${colTable}${colExcelTable}${colDropzone}`);
      await refreshDataTables(tableID, tableID, collectionName, projectID);
    }

    if (!dry) {
      $(`.collection-outerdiv[projectID="${projectID}"]`).css('display', 'none');
      $(outerDiv).css('display', 'inline');
    }

    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
  }
};

const refreshCollDataDropdown = (projectID, collectionID) => {
  const collectionData = $s.collections.filter(c => c._id === collectionID);
  const projectData = $s.projects.filter(p => p._id === projectID);

  if (collectionData && collectionData[0] && projectData && projectData[0]) {
    const collectionName = collectionData[0]['name'];
    const projectName = projectData[0]['name'];
    const collRef = `${projectName}_${collectionName}`;
    let dataDropdown = `<select class="form-control tree-view-data" projectID="${projectID}" collectionID="${collectionID}" collectionName="${collectionName}" ref="${collRef}">
    <option value="" >  --- Select ---  </option></select>`;
    $(`#tree-view-data-${projectID}`).empty().append(dataDropdown);
  }

  const dropdownElement = $(`#tree-view-data-${projectID}`).find('select')[0];
  const fieldsOfCollection = $s.fields.filter(f => f.collectionID === collectionID);
  (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.createSelectizeMultiField)(dropdownElement, $s.data[collectionID], fieldsOfCollection);
};

const deleteDataModal = async (button, selectedRows, callback) => {
  $('#crudModalError').empty();
  const collID = $(button).attr('collID');
  const collLabel = $(button).attr('collLabel');
  const collName = $(button).attr('collName');
  const projectID = $(button).attr('projectID');
  const table = $(`#${collID}`).DataTable();
  const tableData = table.rows().data();
  let rows_selected = [];

  if (selectedRows) {
    rows_selected = selectedRows;
  } else {
    rows_selected = table.column(0).checkboxes.selected();
  }

  const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
  const items = selectedData.length === 1 ? `the item?` : `${selectedData.length} items?`;
  $('#crudModalTitle').text(`Remove ${collLabel}`);
  $('#crudModalYes').text('Remove');
  $('#crudModalBody').empty();
  $('#crudModalBody').append(getErrorDiv());
  $('#crudModalBody').append(`<p>Are you sure you want to delete ${items}</p>`);
  $('#crudModal').off();
  $('#crudModal').on('click', '#crudModalYes', async function (e) {
    e.preventDefault();

    for (var i = 0; i < selectedData.length; i++) {
      const success = await crudAjaxRequest('data', 'DELETE', selectedData[i]._id, projectID, collName, {}, {}, '#crudModalError');

      if (!success) {
        refreshDataTables(collID, collID, collName, projectID);
        break;
      }

      if (success && selectedData.length - 1 === i) {
        await refreshDataTables(collID, collID, collName, projectID);
        if (callback) callback($s);
        $('#crudModal').modal('hide');
      }
    }
  });

  if (selectedData.length === 0) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)('Please click checkboxes to delete items.');
  } else if (selectedData.length > 0) {
    $('#crudModal').modal('show');
  }
};
const insertDataModal = async (button, clickToActivateModal, callbackOnSuccess) => {
  $('#crudModalError').empty();
  const collID = $(button).attr('collID');
  const collLabel = $(button).attr('collLabel');
  const collName = $(button).attr('collName');
  const projectID = $(button).attr('projectID');
  const collectionFields = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.getFieldsDiv)(collID, getProjectDataObj(projectID));
  $('#crudModalTitle').text(`Insert ${collLabel}`);
  $('#crudModalYes').text('Save');
  $('#crudModalBody').empty();
  $('#crudModalBody').append(getErrorDiv());
  $('#crudModalBody').append(collectionFields);
  $('#crudModal').off();
  if (collName == 'run') (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepRunForm)('#crudModal', {}, $s, projectID);
  if (collName == 'file') (0,_formModules_fileForm__WEBPACK_IMPORTED_MODULE_6__.prepFileForm)('#crudModal', {}, $s, projectID);
  (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepReferenceDropdown)('#crudModal', $s);
  (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepOntologyDropdown)('#crudModal', {}, $s);
  await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_7__.prepDataPerms)('#crudModal', {});

  if (clickToActivateModal) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.prepareClickToActivateModal)('#crudModal', '#crudModalBody', 'input, select', {});
  }

  $('#crudModal').on('click', '#crudModalYes', async function (e) {
    e.preventDefault();
    $('#crudModalError').empty();
    const formValues = $('#crudModal').find('input,select');
    const requiredValues = formValues.filter('[required]');
    const requiredFields = $.map(requiredValues, function (el) {
      return $(el).attr('name');
    });
    let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.createFormObj)(formValues, requiredFields, true, true);
    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.convertFormObj)(formObj);
    if (stop === false && collName == 'run') formObj = convertRunFormObj(formObj);
    if (stop === false && collName == 'file') formObj = (0,_formModules_fileForm__WEBPACK_IMPORTED_MODULE_6__.convertFileFormObj)(formObj);

    if (stop === false && collName) {
      let success;

      if (Array.isArray(formObj)) {
        for (let i = 0; i < formObj.length; i++) {
          success = await crudAjaxRequest('data', 'POST', '', projectID, collName, formObj[i], formValues, '#crudModalError');

          if (!success) {
            refreshDataTables(collID, collID, collName, projectID);
            break;
          }

          if (success && formObj.length - 1 === i) {
            await refreshDataTables(collID, collID, collName, projectID);
            if (callbackOnSuccess) callbackOnSuccess($s, collID, success);
            $('#crudModal').modal('hide');
          }
        }
      } else {
        success = await crudAjaxRequest('data', 'POST', '', projectID, collName, formObj, formValues, '#crudModalError');

        if (success) {
          console.log(success);
          await refreshDataTables(collID, collID, collName, projectID);
          if (callbackOnSuccess) callbackOnSuccess($s, collID, success);
          $('#crudModal').modal('hide');
        }
      }
    }
  });
  $('#crudModal').modal('show');
};
const editDataModal = async (button, selectedRows, callback) => {
  const collID = $(button).attr('collID');
  const collLabel = $(button).attr('collLabel');
  const collName = $(button).attr('collName');
  const projectID = $(button).attr('projectID');
  const collectionFields = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.getFieldsDiv)(collID, getProjectDataObj(projectID));
  $('#crudModalTitle').text(`Edit ${collLabel}`);
  $('#crudModalYes').text('Save');
  $('#crudModalBody').empty();
  $('#crudModalBody').append(getErrorDiv());
  $('#crudModalBody').append(collectionFields);
  $('#crudModal').off();
  const table = $(`#${collID}`).DataTable();
  const tableData = table.rows().data();
  let rows_selected = [];

  if (selectedRows) {
    rows_selected = selectedRows;
  } else {
    rows_selected = table.column(0).checkboxes.selected();
  }

  const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
  console.log('selectedData', selectedData);
  $('#crudModal').on('show.coreui.modal', async function (e) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.fillFormByName)('#crudModal', 'input, select', selectedData[0], true);
    (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepReferenceDropdown)('#crudModal', $s); // if (collName == 'run') prepRunForm('#crudModal', selectedData[0], $s, projectID);

    (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepOntologyDropdown)('#crudModal', selectedData[0], $s);
    await (0,_formModules_dataPerms__WEBPACK_IMPORTED_MODULE_7__.prepDataPerms)('#crudModal', selectedData[0]);

    if (rows_selected.length > 1) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.prepareMultiUpdateModal)('#crudModal', '#crudModalBody', 'input, select');
    } else {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.prepareClickToActivateModal)('#crudModal', '#crudModalBody', 'input, select', selectedData[0]);
    }
  });
  $('#crudModal').on('click', '#crudModalYes', async function (e) {
    e.preventDefault();
    $('#crudModalError').empty();
    const formValues = $('#crudModal').find('input,select');
    const requiredValues = formValues.filter('[required]');
    const requiredFields = $.map(requiredValues, function (el) {
      return $(el).attr('name');
    });
    let formObj, stop;

    if (rows_selected.length > 1) {
      [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.createFormObj)(formValues, requiredFields, true, true);
    } else {
      [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.createFormObj)(formValues, requiredFields, true, 'undefined');
    }

    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.convertFormObj)(formObj); // get only updated fields:

    if (rows_selected.length === 1) {
      formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getUpdatedFields)(selectedData[0], formObj);
    }

    if (stop === false && collName) {
      for (var i = 0; i < selectedData.length; i++) {
        const success = await crudAjaxRequest('data', 'PATCH', selectedData[i]._id, projectID, collName, formObj, formValues, '#crudModalError');

        if (!success) {
          refreshDataTables(collID, collID, collName, projectID);
          break;
        }

        if (success && selectedData.length - 1 === i) {
          await refreshDataTables(collID, collID, collName, projectID);
          if (callback) callback($s);
          $('#crudModal').modal('hide');
        }
      }
    }
  });

  if (rows_selected.length === 0) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)('Please click checkboxes to edit items.');
  } else if (rows_selected.length > 0) {
    $('#crudModal').modal('show');
  }
};

const prepExcelData = (projectID, collid, selColumns, collName, format, fieldType) => {
  let reOrderedData = [];
  const {
    refFields,
    refCollectionIDs,
    refCollIdentifiers
  } = getRefCollIdentifiers(projectID, collid);
  const data = $s.data[collid];
  const collFields = getFieldsOfCollection(collid);
  let dateFields = []; // date field names

  for (var i = 0; i < collFields.length; i++) {
    if (collFields[i].type == 'Date') dateFields.push(collFields[i].name);
  }

  for (let i = 0; i < data.length; i++) {
    let newObj = {};

    for (let k = 0; k < selColumns.length; k++) {
      const col = selColumns[k];
      let fields = '';

      if (fieldType == 'short') {
        fields = col;
      } else if (fieldType == 'long') {
        fields = `${collName}.${col}`;
      }

      if (refFields.includes(col)) {
        newObj[fields] = '';
        const refIndex = refFields.indexOf(col);
        const refCollectionID = refCollectionIDs[refIndex];
        const refCollIdentifier = refCollIdentifiers[refIndex];

        if (data[i][col] && data[i][col]._id && $s.data[refCollectionID]) {
          const refData = $s.data[refCollectionID].filter(d => d._id == data[i][col]._id);

          if (refData && refData[0] && refData[0][refCollIdentifier]) {
            newObj[fields] = refData[0][refCollIdentifier];
          }
        }
      } else if (dateFields.includes(col) && data[i][col]) {
        const timestamp = Date.parse(data[i][col]);

        if (isNaN(timestamp) == false) {
          newObj[fields] = moment__WEBPACK_IMPORTED_MODULE_2___default()(data[i][col]).utc().format('YYYY-MM-DD');
        } else {
          console.log('not valid timestamp', data[i][col]);
          newObj[fields] = data[i][col];
        }
      } else if (typeof data[i][col] === 'object' && data[i][col] !== null || Array.isArray(data[i][col])) {
        newObj[fields] = JSON.stringify(data[i][col]);
      } else {
        newObj[fields] = data[i][col];
      }
    }

    reOrderedData.push(newObj);
  }

  if (format === 'array') {
    let arrayData = [];
    const header = Object.keys(reOrderedData[0]);
    arrayData.push(header);

    for (let i = 0; i < reOrderedData.length; i++) {
      let newArr = [];

      for (let h = 0; h < header.length; h++) {
        newArr.push(reOrderedData[i][header[h]]);
      }

      arrayData.push(newArr);
    }

    reOrderedData = arrayData;
  }

  return reOrderedData;
};

const bindEventHandlers = () => {
  //================= TREE VIEW TAB =================
  $(document).on('change', `select.tree-view-collection`, function (e) {
    const projectID = $(this).attr('projectID');
    const collectionID = $(this).val();

    if (collectionID) {
      refreshCollDataDropdown(projectID, collectionID);
    }
  });
  $(document).on('change', `select.tree-view-data`, function (e) {
    const projectID = $(this).attr('projectID');
    const collectionID = $(`#tree-view-collection-${projectID}`).val();
    const dataID = $(this).val();

    if (collectionID && dataID) {
      (0,_treeView__WEBPACK_IMPORTED_MODULE_8__.refreshTreeView)(projectID, $s, true, {
        collectionID,
        dataID
      });
    }
  }); //================= COLLECTIONS TAB  =============

  $(document).on('change', `select.select-collection`, async function (e) {
    const projectID = $(this).attr('projectID');
    const collectionID = $(this).val();

    if (collectionID) {
      await refreshCollectionDiv(projectID, collectionID, false);
    }
  }); // ================= EVENTS  =================

  $(document).on('click', 'button.multiple-event-form', function (e) {
    const form = $(this).closest('form');
    const formID = form.attr('id');
    $s.formNum++;
    const newFormNum = $s.formNum;
    const restForm = formID.substring(0, formID.lastIndexOf('-') + 1);
    const newFormId = `${restForm}${newFormNum}`;
    form.clone().prop('id', newFormId).insertAfter(form);
  }); // sync .data-reference dropdowns on change for event forms

  $(document).on('change', 'select.data-reference', function (e) {
    const ref = $(this).attr('ref');
    const projectID = $(this).attr('projectID');
    const collectionName = $(this).attr('collectionName');
    const collectionID = $(this).attr('collectionID');
    const selValue = this.value;
    console.log(`changed to ${this.value}`, this);
    const allDataRefs = $(`select.data-reference[ref="${ref}"]`).not(this).val(selValue);

    for (let i = 0; i < allDataRefs.length; i++) {
      if ($(allDataRefs[i]).hasClass('selectized')) $(allDataRefs[i])[0].selectize.setValue(selValue, true);
      if ($(allDataRefs[i]).hasClass('form-event-collection')) $(allDataRefs[i]).trigger('change');
    } // filter data-reference rows based in child relationships.
    // Later get data from api/v1/tree/${project}


    console.log(collectionID);

    if (collectionID) {
      const projectName = $s.projects.filter(p => p._id === projectID)[0].name;
      let childCollections = [];
      const refFields = $s.fields.filter(f => f.ref == `${projectName}_${collectionName}`);

      for (let i = 0; i < refFields.length; i++) {
        childCollections.push({
          _id: refFields[i].collectionID
        });
      }

      console.log(`childCollections for ${collectionID}`, childCollections);
      console.log(`refFields for ${collectionID}`, refFields);

      for (let i = 0; i < childCollections.length; i++) {
        const childCollectionID = childCollections[i]._id;
        console.log(`ref:${ref} childCollectionID:${childCollectionID}`);
        const allChildDataRefs = $(`select.data-reference[collectionID="${childCollectionID}"]`);
        console.log(allChildDataRefs);
        const oldData = $s.data[childCollectionID];

        if (oldData) {
          const newData = oldData.filter(o => o[`${collectionName}_id`] && o[`${collectionName}_id`]['_id'] == selValue);
          console.log(oldData);
          console.log(newData);

          for (let k = 0; k < allChildDataRefs.length; k++) {
            console.log('allChildDataRefs', allChildDataRefs[k]);

            if (allChildDataRefs[k].selectize) {
              var selectize = allChildDataRefs[k].selectize;
              var oldSelectizeVal = selectize.getValue();
              selectize.clear();
              selectize.clearOptions();
              selectize.load(function (callback) {
                callback(newData);
              });
              selectize.setValue(oldSelectizeVal, true);
            }
          }
        }
      }
    }
  });
  $(document).on('change', `select.form-event-collection`, async function (e) {
    const collectionID = $(this).attr('collectionID');
    const projectID = $(this).attr('projectID');
    const formID = `#${$(this).closest('form').attr('id')}`;
    const selItem = $(this).val();

    if (selItem) {
      const data = $s.tableData[collectionID].filter(i => i._id == selItem);

      if (data && data[0]) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.fillFormByName)(formID, 'input, select', data[0], true);
        (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepReferenceDropdown)(formID, $s); // prepRunForm(formID, data[0], $s, projectID);

        (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_5__.prepOntologyDropdown)(formID, data[0], $s); // trigger change of filled .data-reference dropdowns

        const allDataRefs = $(formID).find('select.data-reference');

        for (let i = 0; i < allDataRefs.length; i++) {
          const nameAttr = $(allDataRefs[i]).attr('name');
          if (nameAttr && data[0][nameAttr]) $(allDataRefs[i]).trigger('change');
        }
      }
    }
  });
  $(document).on('click', `button.event-reset-btn`, async function (e) {
    const projectID = $(this).attr('projectID');
    const allForms = $(`#event-form-${projectID}`).find('form');

    for (let i = 0; i < allForms.length; i++) {
      const collDropdown = $(allForms[i]).find('select.form-event-collection');
      const collID = collDropdown.attr('collectionID');
      $(`#crudModalError-${projectID}-${collID}`).empty();
      const isFormSuccess = $(allForms[i]).find('fieldset.scheduler-border').hasClass('success');
      const isFormErr = $(allForms[i]).find('fieldset.scheduler-border').hasClass('error');
      if (isFormSuccess) $(allForms[i]).find('fieldset.scheduler-border').removeClass('success');
      if (isFormErr) $(allForms[i]).find('fieldset.scheduler-border').removeClass('error');
      const formValues = $(allForms[i]).find('select, input');
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.hideFormError)(formValues);
    }
  });
  $(document).on('click', `button.event-new-btn`, async function (e) {
    $(this).css('display', 'none');
    $(this).siblings('button.event-save-btn').css('display', 'block');
    $(this).siblings('button.event-reset-btn').trigger('click');
  });
  $(document).on('click', `button.event-save-btn`, async function (e) {
    console.log('save');
    spinnerButton(this, 'loading');
    const projectID = $(this).attr('projectID');
    const allForms = $(`#event-form-${projectID}`).find('form');
    let errorExist = false;

    for (let i = 0; i < allForms.length; i++) {
      const isFormSuccess = $(allForms[i]).find('fieldset.scheduler-border').hasClass('success');
      if (isFormSuccess) continue;
      const formID = $(allForms[i]).attr('id');
      const collDropdown = $(allForms[i]).find('select.form-event-collection');
      const selData = collDropdown.val();
      const skip = collDropdown.attr('skip');
      if (skip) continue;
      const collID = collDropdown.attr('collectionID');
      const collName = collDropdown.attr('collectionName');
      $(`#crudModalError-${projectID}-${collID}`).empty();
      let type = '';
      let oldData = '';

      if (selData) {
        type = 'update';
        oldData = $s.tableData[collID].filter(i => i._id == selData)[0];
      } else {
        type = 'insert';
      }

      const success = await saveDataEventForm(type, `#${formID}`, collID, collName, projectID, oldData);
      console.log('ret', success);

      if (success) {
        $(allForms[i]).find('fieldset.scheduler-border').removeClass('error').addClass('success');
      } else {
        errorExist = true;
        $(allForms[i]).find('fieldset.scheduler-border').addClass('error');
      }
    }

    spinnerButton(this, 'reset');

    if (!errorExist) {
      $(this).css('display', 'none');
      $(this).siblings('button.event-new-btn').css('display', 'block');
    }
  });
  $(document).on('change', `select.select-event`, async function (e) {
    const projectID = $(this).attr('projectID');
    const eventID = $(this).val();

    if (eventID) {
      await refreshEventForm(projectID, eventID);
    } else {
      $(`#event-form-div-${projectID}`).css('display', 'none');
    }
  }); // ================= EDIT BUTTON =================

  $(document).on('shown.coreui.tab', `.excel-tabs[data-toggle="tab"]`, async function (e) {
    const excelId = $(this).attr('excelId');
    const hot = $s.handsontables[excelId];
    hot.render();
  });
  $(document).on('click', `button.edit-data`, async function (e) {
    await editDataModal(this);
  });
  $(document).on('click', `button.export-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const colllabel = $(this).attr('colllabel');
    const collName = $(this).attr('collname');
    const projectID = $(this).attr('projectID');
    const rowData = datatable.rows({
      order: 'applied'
    }).data().toArray();
    const selColumns = getExcelColumns(collid);
    const excelData = prepExcelData(projectID, collid, selColumns, collName, 'object', 'long');

    if (excelData && excelData[0]) {
      const wb = xlsx__WEBPACK_IMPORTED_MODULE_1___default().utils.book_new();
      wb.SheetNames.push(colllabel);
      let ws;
      let headers;

      if (headers) {
        rowData.unshift(headers);
        ws = xlsx__WEBPACK_IMPORTED_MODULE_1___default().utils.json_to_sheet(excelData, {
          skipHeader: true
        });
      } else {
        ws = xlsx__WEBPACK_IMPORTED_MODULE_1___default().utils.json_to_sheet(excelData);
      }

      ws['!cols'] = [];

      for (let i = 0; i < Object.keys(excelData[0]).length; i++) {
        ws['!cols'].push({
          width: 25
        });
      }

      wb.Sheets[colllabel] = ws;
      const wbout = xlsx__WEBPACK_IMPORTED_MODULE_1___default().write(wb, {
        bookType: 'xlsx',
        type: 'binary'
      });

      function s2ab(s) {
        var buf = new ArrayBuffer(s.length);
        var view = new Uint8Array(buf);

        for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff;

        return buf;
      }

      (0,file_saver__WEBPACK_IMPORTED_MODULE_3__.saveAs)(new Blob([s2ab(wbout)], {
        type: 'application/octet-stream'
      }), `${colllabel}.xlsx`);
    }
  }); // ================= Edit-excel-data =================

  $(document).on('click', `button.reset-import-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const importTableID = `import-spreadsheet-div-${collid}`;
    const importTableButID = `load-excel-table-${collid}`;
    $(`#${importTableID}`).empty();
    $(`#${importTableButID}`).css('display', 'inline-block');
    const dropzoneId = `excelUpload-${collid}`;
    $(`#${dropzoneId}`).css('display', 'block');
    createDropzone(dropzoneId, importTableButID, true);
  });
  $(document).on('click', `button.cancel-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const tableID = `spreadsheet-${collid}`;
    const importTableID = `import-spreadsheet-div-${collid}`;
    const importTableButID = `load-excel-table-${collid}`;
    $(`#${tableID}`).css('display', 'none');
    $(`#${importTableID}`).css('display', 'none');
    $(`#${importTableButID}`).css('display', 'none');
    $(this).closest('.collection-outerdiv').find('.dropzone').css('display', 'none');
    $(this).siblings('button.edit-excel-data').css('display', 'inline-block');
    $(this).siblings('button.save-excel-data').css('display', 'none');
    $(this).siblings('button.save-import-excel-data').css('display', 'none');
    $(this).siblings('button.reset-import-excel-data').css('display', 'none');
    $(this).siblings('button.export-excel-data').css('display', 'inline-block');
    $(this).siblings('button.import-excel-data').css('display', 'inline-block');
    $(this).siblings('button.insert-data').css('display', 'inline-block');
    $(this).siblings('button.edit-data').css('display', 'inline-block');
    $(this).siblings('button.delete-data').css('display', 'inline-block');
    $(this).css('display', 'none');
    $(this).closest('.collection-outerdiv').find('.table-responsive').css('display', 'block');
    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
  }); // ================= Save-excel-data =================

  $(document).on('click', `button.save-import-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const projectID = $(this).attr('projectID');
    const importedDiv = `#import-spreadsheet-div-${collid}`; // find active tab

    const activeTab = $(`${importedDiv} ul.nav-tabs li a.active.excel-tabs`);
    const tableID = activeTab.attr('excelid');

    if (!tableID || !$s.handsontables[tableID]) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)('Please load excel file to import data.');
    } else {
      const hot = $s.handsontables[tableID];
      const header = hot.getColHeader();

      if (header) {
        // skip first two columns
        const columnName = header[2];
        const splitted = columnName.split('.');

        if (splitted.length !== 2) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)('Header format is not recognized. Collection name and field name should separated with dot symbol. e.g. exp.name, series.name');
        } else {
          const collName = splitted[0];
          const coll = getCollectionByName(collName, projectID);

          if (!coll || !coll[0] || !coll[0]._id) {
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showInfoModal)(`Collection (${collectionName}) not found.`);
          } else {
            const collectionID = coll[0]._id;
            const projectid = coll[0].projectID;
            await syncTableData(tableID, collectionID, collName, projectid);
            refreshDataTables(collid, collid, collName, projectid);
          }
        }
      }
    }
  });
  $(document).on('click', `button.save-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const collName = $(this).attr('collname');
    const projectid = $(this).attr('projectid');
    const tableID = `spreadsheet-${collid}`; // format checker -> only one collection should be defined.

    await syncTableData(tableID, collid, collName, projectid);
    refreshDataTables(collid, collid, collName, projectid);
  });
  $(document).on('click', `button.import-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    $(`#import-spreadsheet-div-${collid}`).css('display', 'block');
    $(this).closest('.collection-outerdiv').find('.table-responsive').css('display', 'none');
    $(this).closest('.collection-outerdiv').find('.dropzone').css('display', 'block');
    $(this).css('display', 'none');
    $(this).siblings('button.insert-data').css('display', 'none');
    $(this).siblings('button.export-excel-data').css('display', 'none');
    $(this).siblings('button.edit-excel-data').css('display', 'none');
    $(this).siblings('button.cancel-excel-data').css('display', 'inline-block');
    $(this).siblings('button.save-excel-data').css('display', 'none');
    $(this).siblings('button.save-import-excel-data').css('display', 'inline-block');
    $(this).siblings('button.reset-import-excel-data').css('display', 'inline-block');
    $(this).siblings('button.edit-data').css('display', 'none');
    $(this).siblings('button.delete-data').css('display', 'none');
    const dropzoneId = `excelUpload-${collid}`;
    const buttonID = `load-excel-table-${collid}`;
    const isTableLoaded = $(`#import-spreadsheet-div-${collid}`).html();

    if (!$(`#${dropzoneId}`)[0].dropzone) {
      createDropzone(dropzoneId, buttonID, false);
    } else if (isTableLoaded) {
      $(`#${dropzoneId}`).css('display', 'none');
    } else {
      $(`#${buttonID}`).css('display', 'inline-block');
    }
  });
  $(document).on('click', `button.load-excel-table`, async function (e) {
    const collid = $(this).attr('collid');
    const projectid = $(this).attr('projectid');
    const dropzoneId = `excelUpload-${collid}`;
    const buttonID = `load-excel-table-${collid}`;
    $(`#${dropzoneId}`).css('display', 'none');

    if ($s.dropzone) {
      $(`#${buttonID}`).css('display', 'none'); // 1. get excel data

      const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
        method: 'POST',
        url: '/api/v1/misc/readExcelUpload',
        data: {
          filename: $s.dropzone
        }
      });
      console.log(res);

      if (res && res.data && res.data.data) {
        // 2. create tabs
        const tabData = res.data.data;
        const tabs = Object.keys(tabData);
        const excelNavbar = getExcelNavbar(collid, tabs); // 3. insert excel tables

        $(`#import-spreadsheet-div-${collid}`).empty();
        $(`#import-spreadsheet-div-${collid}`).append(excelNavbar); // 4. load excel tables

        for (let i = 0; i < tabs.length; i++) {
          const statusExcelData = addStatusColumns(tabData[tabs[i]]);
          let header = statusExcelData.shift();
          const tableID = `import-spreadsheet-${collid}-${i}`;
          createHandsonTable(tableID, header, statusExcelData);
          makeUpdatedTableData(tableID, projectid);
        }
      }
    }
  });
  $(document).on('click', `button.edit-excel-data`, async function (e) {
    const collid = $(this).attr('collid');
    const collName = $(this).attr('collname');
    const projectID = $(this).attr('projectID');
    const selColumns = getExcelColumns(collid);
    const excelData = prepExcelData(projectID, collid, selColumns, collName, 'array', 'long');
    const statExcelData = addStatusColumns(excelData);
    const statusExcelData = addEmptyRows(statExcelData, 100);
    console.log(statExcelData);
    console.log(statusExcelData);
    let header = statusExcelData.shift();
    $(this).closest('.collection-outerdiv').find('.table-responsive').css('display', 'none');
    $(this).closest('.collection-outerdiv').find('.dropzone').css('display', 'none');
    $(this).css('display', 'none');
    $(this).siblings('button.insert-data').css('display', 'none');
    $(this).siblings('button.export-excel-data').css('display', 'none');
    $(this).siblings('button.import-excel-data').css('display', 'none');
    $(this).siblings('button.cancel-excel-data').css('display', 'inline-block');
    $(this).siblings('button.save-excel-data').css('display', 'inline-block');
    $(this).siblings('button.save-import-excel-data').css('display', 'none');
    $(this).siblings('button.reset-import-excel-data').css('display', 'none');
    $(this).siblings('button.edit-data').css('display', 'none');
    $(this).siblings('button.delete-data').css('display', 'none');
    const tableID = `spreadsheet-${collid}`;
    createHandsonTable(tableID, header, statusExcelData);
  }); // ================= INSERT BUTTON =================

  $(document).on('click', `button.insert-data`, async function (e) {
    await insertDataModal(this, true);
  }); // ================= DELETE BUTTON =================

  $(document).on('click', `button.delete-data`, async function (e) {
    await deleteDataModal(this);
  });
};

const getCrudButtons = (collID, collLabel, collName, projectID, settings) => {
  const data = `collLabel="${collLabel}" collID="${collID}" projectID="${projectID}" collName="${collName}"`;
  let tableBut = '';
  let dbEditorBut = '';
  let childRefBut = '';
  let delBtn = '';
  let refreshIdentifierBut = '';

  if (settings.refreshIdentifier) {
    refreshIdentifierBut = `
    <button class="btn btn-primary refresh-namingPattern-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Refresh Naming Patterns" ${data}>
      <i class="cil-badge"> </i>
    </button>`;
  }

  if (settings.dbEditor) {
    dbEditorBut = `
    <button class="btn btn-primary edit-field-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Transfer Fields Data" ${data}>
      <i class="cil-cut"> </i>
    </button>`;
  }

  if (settings.childRef) {
    childRefBut = `
    <button class="btn btn-primary insert-child-ref" type="button" data-toggle="tooltip" data-placement="bottom" title="Insert Reference Field" ${data}><i class="cil-sitemap"> </i></button>`;
  }

  if (settings.excel) {
    tableBut = `
    <button class="btn btn-primary edit-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Edit in Spreadsheet" ${data}>
      <i class="cil-view-module"> </i>
    </button>
    <button style="display:none;" class="btn btn-primary cancel-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Show Table Format" ${data}>
      <i class="cil-arrow-thick-left"> </i>
    </button>
    <button style="display:none;" class="btn btn-primary save-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Save Changes in Spreadsheet Format" ${data}>
      <i class="cil-save"> </i>
    </button>
    <button class="btn btn-primary export-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Download as Excel File" ${data}>
      <i class="cil-arrow-circle-bottom"> </i>
    </button>
    <button class="btn btn-primary import-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Import as Excel File" ${data}>
      <i class="cil-arrow-thick-to-left"> </i>
    </button>
    <button style="display:none;" class="btn btn-primary save-import-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Save Imported Excel Data" ${data}>
      <i class="cil-save"> </i>
    </button>
    <button style="display:none;" class="btn btn-primary reset-import-excel-data" type="button" data-toggle="tooltip" data-placement="bottom" title="New Import (Reset)" ${data}>
      <i class="cil-x-circle"> </i>
    </button>
    `;
  }

  if (settings.delBtn) {
    delBtn = `<button class="btn btn-primary delete-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Delete" ${data}>
  <i class="cil-trash"> </i>
</button>`;
  }

  const ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-12">
      <button class="btn btn-primary insert-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Insert" ${data}>
        <i class="cil-plus"> </i>
      </button>
      <button class="btn btn-primary edit-data" type="button" data-toggle="tooltip" data-placement="bottom" title="Edit" ${data}>
        <i class="cil-pencil"> </i>
      </button>
      ${delBtn}
      ${tableBut}
      ${childRefBut}
      ${dbEditorBut}
      ${refreshIdentifierBut}
    </div>
  </div>`;
  return ret;
};

const getDropzoneTable = (collID, projectID) => {
  const ret = `
  <form id="excelUpload-${collID}" action="/api/v1/misc/fileUpload" method="post" enctype="multipart/form-data" class="dropzone" style="display:none;">
    <div class="fallback ">
      <input name="file" type="file" />
    </div>
  </form>
  <button style="margin-top:5px; float:right; display:none;" id="load-excel-table-${collID}" class="btn btn-primary load-excel-table" projectid="${projectID}" collID="${collID}" type="button"> Load Table </button>
  <div id="import-spreadsheet-div-${collID}"></div>`;
  return ret;
};

const getExcelTable = id => {
  const ret = `
  <div style="height:100%; overflow:hidden; margin-top:10px;">
    <div id="${id}">
    </div>
  </div>`;
  return ret;
};

const getCollectionTable = (collID, type) => {
  const headers = getTableHeaders(collID);
  let tableID = collID;
  if (type == 'modal') tableID = `modal-${collID}`;
  const ret = `
  <div class="table-responsive" style="overflow-x:auto; width:100%; ">
    <table id="${tableID}" class="table table-striped" style='white-space: nowrap; width:100%;' cellspacing="0" >
        <thead>
            <tr>
            ${headers}
            </tr>
        <tbody>
        </tbody>
    </thead>
    </table>
  </div>`;
  return ret;
};

const getFieldsOfCollection = collectionID => {
  return $s.fields.filter(field => field.collectionID === collectionID && field.hidden !== true);
};

const getCollectionByName = (collectionName, projectID) => {
  if (projectID) {
    return $s.collections.filter(col => col.name === collectionName && col.projectID === projectID);
  } else {
    return $s.collections.filter(col => col.name === collectionName && !col.projectID);
  }
};

const getProjectData = projectID => {
  const project = $s.projects.filter(item => item.id === projectID);
  const projectName = project[0] && project[0].name ? project[0].name : '';
  const projectPart = projectName ? `projects/${projectName}/` : '';
  return {
    projectName,
    projectPart
  };
};

const crudAjaxRequest = async (targetCollection, method, id, projectID, collName, formObj, formValues, errorDiv) => {
  let url = '';
  const idsPart = id ? `/${id}` : '';

  if (targetCollection == 'data') {
    const {
      projectPart
    } = getProjectData(projectID);
    url = `/api/v1/${projectPart}data/${collName}${idsPart}`;
  } else {
    url = `/api/v1/${targetCollection}${idsPart}`;
  }

  try {
    console.log('formObj', formObj);
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method: method,
      url: url,
      data: formObj
    });

    if (res && res.data && res.data.status === 'success') {
      console.log(res.data.data);
      if (res.data.data && res.data.data.data && res.data.data.data._id) return res.data.data.data._id;
      return true;
    }

    return false;
  } catch (e) {
    console.log(e);
    let err = '';

    if (e.response && e.response.data) {
      console.log(e.response.data);

      if (e.response.data.error && e.response.data.error.errors) {
        const success = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.showFormError)(formValues, e.response.data.error.errors, true);

        if (!success) {
          if (e.response.data.message) err += JSON.stringify(e.response.data.message);
          if (err) showInfoInDiv(errorDiv, err);
        }

        return;
      }

      if (e.response.data.message) err += JSON.stringify(e.response.data.message);
    }

    if (!err) err = JSON.stringify(e);
    if (err) showInfoInDiv(errorDiv, err);
    return false;
  }
};

const prepareDataForSingleColumn = async (collName, projectID, collectionID, collFields) => {
  let ret = [];
  if (!collName) return ret;
  let refFields = [];
  let dateFields = [];

  for (var i = 0; i < collFields.length; i++) {
    if (collFields[i].ref) refFields.push(collFields[i].name);
    if (collFields[i].type == 'Date') dateFields.push(collFields[i].name);
  }

  const {
    projectPart,
    projectName
  } = getProjectData(projectID);
  const data = await ajaxCall('GET', `/api/v1/${projectPart}data/${collName}/populated`);

  if (data) {
    $s.data[collectionID] = data;
    const dataCopy = data.slice();
    ret = dataCopy.map(el => {
      let newObj = {};
      $.each(el, function (k) {
        if (refFields.includes(k) && el[k]) {
          let refCollID = '';
          const collNameRef = k.replace(/_id$/, '');
          const refCollData = getCollectionByName(collNameRef, projectID);
          if (refCollData && refCollData[0] && refCollData[0]._id) refCollID = refCollData[0]._id;
          let fieldsOfCollection = [];

          if (refCollID) {
            fieldsOfCollection = $s.fields.filter(f => f.collectionID === refCollID);
          }

          const showFields = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getDropdownFields)(el[k], fieldsOfCollection);

          if (el[k] && showFields[0]) {
            newObj[k] = el[k][showFields[0]];
          } else {
            newObj[k] = el[k]._id;
          }
        } else if (dateFields.includes(k) && el[k]) {
          const timestamp = Date.parse(el[k]);

          if (isNaN(timestamp) == false) {
            newObj[k] = moment__WEBPACK_IMPORTED_MODULE_2___default()(el[k]).utc().format('YYYY-MM-DD');
          } else {
            console.log('not valid timestamp', el[k]);
            newObj[k] = el[k];
          }
        } else if (typeof el[k] === 'object' && el[k] !== null || Array.isArray(el[k]) || typeof el[k] === 'boolean') {
          newObj[k] = JSON.stringify(el[k]);
        } else {
          newObj[k] = el[k];
        }
      });
      return newObj;
    });
  }

  $s.tableData[collectionID] = ret;
  return ret;
};

const refreshDataTables = async (TableID, collectionID, collName, projectID) => {
  const collFields = getFieldsOfCollection(collectionID);
  const data = await prepareDataForSingleColumn(collName, projectID, collectionID, collFields);

  if (!$.fn.DataTable.isDataTable(`#${TableID}`)) {
    let columns = [];
    columns.push({
      data: '_id'
    }); // for checkboxes
    // columns.push({ data: 'DID' }); // dolphin id

    for (var i = 0; i < collFields.length; i++) {
      columns.push({
        data: collFields[i].name
      });
    } // columns.push({ data: '_id' });


    columns.push({
      data: 'perms'
    });
    var dataTableObj = {
      columns: columns,
      columnDefs: [{
        defaultContent: '',
        targets: '_all'
      }, //hides undefined error,
      {
        targets: 0,
        checkboxes: {
          selectRow: true
        }
      }],
      lengthMenu: [[10, 25, 50, -1], [10, 25, 50, 'All']],
      select: {
        style: 'multiple'
      }
    };
    dataTableObj.dom = '<"pull-left"f>lrt<"pull-left"i><"bottom"p><"clear">';
    dataTableObj.destroy = true;
    dataTableObj.pageLength = 10;
    dataTableObj.data = data;
    dataTableObj.hover = true; // speed up the table loading

    dataTableObj.deferRender = true;
    dataTableObj.scroller = true;
    dataTableObj.scrollCollapse = true;
    dataTableObj.colReorder = true;
    dataTableObj.sScrollX = true;
    $s.TableID = $(`#${TableID}`).DataTable(dataTableObj);
  } else {
    $(`#${TableID}`).DataTable().clear().rows.add(data).draw();
  }
};

const createSelectize = id => {
  if (!$(id)[0].selectize) $(id).selectize({});
};

const showTableTabs = () => {
  $(document).on('show.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    const collName = $(e.target).attr('collName');
    const tableID = $(e.target).attr('tableID');
    const projectID = $(e.target).attr('projectID');

    if (collName == 'all_events') {
      createSelectize(`#select-event-${projectID}`);
    } else if (collName == 'all_collections') {
      createSelectize(`#select-collection-${projectID}`);
    } else if (tableID == `tree_view_${projectID}`) {// refreshTreeView(projectID, $s, false);
    } else {
      refreshDataTables(tableID, tableID, collName, projectID);
    }
  });
  $(document).on('shown.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
  });
};

const getMainDropdown = (projectID, type) => {
  let classText = '';
  let defOption = '';
  let data = '';
  let dataLabel = '';

  if (type == 'event') {
    classText = 'select-event';
    defOption = 'Select Event';
    data = $s.events;
    dataLabel = 'name';
  } else if (type == 'collection') {
    classText = 'select-collection';
    defOption = 'Select Collection';
    data = $s.collections;
    dataLabel = 'label';
  } else if (type == 'tree-view-collection') {
    classText = 'tree-view-collection';
    defOption = 'Select Collection';
    data = $s.collections;
    dataLabel = 'label';
  }

  const idText = projectID ? `id="${classText}-${projectID}"` : '';
  let dropdown = `<select class="form-control ${classText}" projectID="${projectID}" ${idText}>`;
  dropdown += `<option value="" >--- ${defOption} ---</option>`;

  if (data) {
    const projectEvents = data.filter(e => e.projectID == projectID);
    projectEvents.forEach(i => {
      dropdown += `<option  value="${i._id}">${i[dataLabel]}</option>`;
    });
  }

  dropdown += `</select>`;
  return dropdown;
};

const getEventTab = projectID => {
  const dropdown = getMainDropdown(projectID, 'event');
  const ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-8">${dropdown}</div>
    <div class="col-sm-8"></div>
  </div>
  <div id="event-form-div-${projectID}" style="display:none; margin-top: 40px;">
    <div class="col-sm-8">
      <div id="event-form-${projectID}">
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary event-reset-btn" projectID="${projectID}" type="button" >Reset</button>
        <button class="btn btn-primary event-save-btn" projectID="${projectID}" type="button">Save</button>
        <button style="display:none;" class="btn btn-success event-new-btn" projectID="${projectID}" type="button">New Data</button>
      </div>
    </div>
  </div>
  `;
  return ret;
};

const getCollectionTab = projectID => {
  const dropdown = getMainDropdown(projectID, 'collection');
  let ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-8">${dropdown}</div>
    <div class="col-sm-8"></div>
  </div>`;

  for (var i = 0; i < $s.collections.length; i++) {
    const collID = $s.collections[i]['_id'];
    ret += `<div class="collection-outerdiv" projectID="${projectID}" id="collection-outerdiv-${collID}-${projectID}" style="display:none; margin-top:40px;"></div>`;
  }

  return ret;
};

const spinnerButton = (button, mode) => {
  if (mode == 'loading') {
    $(button).prop('disabled', true);
    $(button).prepend(`<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> `);
  } else if (mode == 'reset') {
    $(button).prop('disabled', false);
    $(button).find('span').remove();
  }
};

const getTreeViewTab = projectID => {
  const dropdown = getMainDropdown(projectID, 'tree-view-collection');
  let ret = `
  <div class="row" style="margin-top: 20px;">
    <div class="col-sm-8">${dropdown}</div>
    <div id="tree-view-data-${projectID}" projectID="${projectID}" class="col-sm-8" style="margin-top:10px;"></div>
  </div>
  <section id="d3-tree-${projectID}" style="height: 500px; max-width:100%;"></section>
  
  `;
  return ret;
};

const getCollectionNavbar = async projectId => {
  // await getCollectionFieldData();
  let header = '<ul class="nav nav-tabs" role="tablist" style="margin-top: 10px;">';
  let content = '<div class="tab-content">';

  if ($s.collections.length == 0) {
    content = '';
    header += '<p> No document found.</p>';
  }

  let tabs = [];
  tabs.push({
    name: 'all_events',
    label: 'Events',
    id: `all_events_${projectId}`,
    projectID: projectId
  }, {
    name: 'tree_view',
    label: 'Tree View',
    id: `tree_view_${projectId}`,
    projectID: projectId
  }, {
    name: 'all_collections',
    label: 'Collections',
    id: `all_collections_${projectId}`,
    projectID: projectId
  });
  let k = 0;

  for (var i = 0; i < tabs.length; i++) {
    const collectionProjectID = tabs[i].projectID;

    if (projectId && collectionProjectID == projectId || !projectId && !collectionProjectID) {
      k++;
      const collectionName = tabs[i].name;
      const collectionLabel = tabs[i].label;
      const collectionId = tabs[i].id;
      const id = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getCleanDivId)(collectionId);
      const collTabID = 'collTab_' + id;
      const active = k === 1 ? 'active' : '';
      const headerLi = `
      <li class="nav-item">
          <a class="nav-link ${active} collection" data-toggle="tab" collName="${collectionName}" tableID="${collectionId}" projectID="${projectId}" href="#${collTabID}" aria-expanded="true">${collectionLabel}</a>
      </li>`;
      header += headerLi;
      let colTable = '';
      let colExcelTable = '';
      let colDropzone = '';
      let crudButtons = '';

      if (collectionId == `all_events_${projectId}`) {
        colTable = getEventTab(projectId);
      } else if (collectionId == `all_collections_${projectId}`) {
        colTable = getCollectionTab(projectId);
      } else if (collectionId == `tree_view_${projectId}`) {
        colTable = getTreeViewTab(projectId);
      } else {
        colTable = getCollectionTable(collectionId, 'default');
        colExcelTable = getExcelTable(`spreadsheet-${collectionId}`);
        colDropzone = getDropzoneTable(collectionId, projectId);
        crudButtons = getCrudButtons(collectionId, collectionLabel, collectionName, projectId, {
          excel: true,
          delBtn: true
        });
      }

      const contentDiv = `
          <div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${collTabID}">
          ${crudButtons}
          ${colTable}
          ${colExcelTable}
          ${colDropzone}
        </div>`;
      content += contentDiv;
    }
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div role="tabpanel">';
  ret += header;
  ret += content;
  ret += '</div>';
  return ret;
};

const loadAllTabContent = () => {
  for (var i = 0; i < $s.collections.length; i++) {
    const projectID = $s.collections[i].projectID;
    const collectionID = $s.collections[i]._id;
    if (projectID && collectionID) refreshCollectionDiv(projectID, collectionID, true);
  }
};
const getProjectNavbar = async () => {
  showTableTabs();
  bindEventHandlers();
  let [projects, collections, fields, events] = await Promise.all([ajaxCall('GET', '/api/v1/projects'), ajaxCall('GET', '/api/v1/collections'), ajaxCall('GET', '/api/v1/fields'), ajaxCall('GET', '/api/v1/events')]);
  $s.collections = collections;
  $s.fields = fields;
  $s.projects = projects;
  $s.events = events;
  let tabs = []; // tabs.push({ label: 'Public', id: '', name: 'public' });

  if ($s.projects) tabs = tabs.concat($s.projects);
  let header = '<ul class="nav nav-tabs" role="tablist">';
  let content = '<div class="tab-content">';

  if ($s.projects.length == 0) {
    content = '';
    header = '<p> No document found.</p>';
  }

  for (var i = 0; i < tabs.length; i++) {
    const projectId = tabs[i].id;
    const projectLabel = tabs[i].label;
    const projectName = tabs[i].name;
    const id = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_4__.getCleanDivId)(projectName);
    const projectTabID = 'projectTab_' + id;
    const active = i === 0 ? 'active' : '';
    const headerLi = `
    <li class="nav-item">
        <a class="nav-link ${active} collection" data-toggle="tab" href="#${projectTabID}" aria-expanded="true">${projectLabel}</a>
    </li>`;
    header += headerLi;
    const colNavbar = await getCollectionNavbar(projectId);
    const contentDiv = `
    <div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${projectTabID}">
        ${colNavbar}
      </div>`;
    content += contentDiv;
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div role="tabpanel">';
  ret += header;
  ret += content;
  ret += '</div>';
  return ret;
};

/***/ }),

/***/ "./public/js/event.js":
/*!****************************!*\
  !*** ./public/js/event.js ***!
  \****************************/
/*! namespace exports */
/*! export getEventNavbar [provided] [no usage info] [missing usage info prevents renaming] */
/*! export loadEventContent [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loadEventContent": () => /* binding */ loadEventContent,
/* harmony export */   "getEventNavbar": () => /* binding */ getEventNavbar
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsfuncs */ "./public/js/jsfuncs.js");
/* eslint-disable */
;

 // GLOBAL SCOPE

let $s = {
  events: {}
};

const ajaxCall = async (method, url) => {
  console.log(method, url);

  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    return res.data.data.data;
  } catch (err) {
    //console.log(err);
    return '';
  }
};

const refreshEventTable = async (id, data) => {
  const TableID = `table-${id}`;
  if (!data) data = [];
  let fomatted_data = [];

  if (data.length) {
    fomatted_data = data.map(i => {
      i.creationDate = moment__WEBPACK_IMPORTED_MODULE_1___default()(i.creationDate).utc().format('YYYY-MM-DD hh:mm:ss');
      i.req = JSON.stringify(i.req);
      return i;
    });
  }

  if ($.fn.DataTable.isDataTable(`#${TableID}`)) {
    $(`#${TableID}`).DataTable().destroy();
  }

  if (!$.fn.DataTable.isDataTable(`#${TableID}`)) {
    let columns = [];
    let dataTableObj = {};

    if (id == 'events') {
      columns.push({
        data: 'doc_id'
      });
      columns.push({
        data: 'project.name'
      });
      columns.push({
        data: 'coll.name'
      });
      columns.push({
        data: 'type'
      });
      columns.push({
        data: 'creationDate'
      });
      columns.push({
        data: 'owner.username'
      });
      columns.push({
        data: 'req'
      });
      dataTableObj.order = [[4, 'desc']];
    } else {
      columns.push({
        data: 'doc_id'
      });
      columns.push({
        data: 'target'
      });
      columns.push({
        data: 'project.name'
      });
      columns.push({
        data: 'coll.name'
      });
      columns.push({
        data: 'field.name'
      });
      columns.push({
        data: 'type'
      });
      columns.push({
        data: 'creationDate'
      });
      columns.push({
        data: 'owner.username'
      });
      columns.push({
        data: 'req'
      });
      dataTableObj.order = [[6, 'desc']];
    }

    dataTableObj.columns = columns;
    dataTableObj.columnDefs = [{
      defaultContent: '',
      targets: '_all'
    } //hides undefined error,
    ];
    dataTableObj.dom = '<"pull-left"f>lrt<"pull-left"i><"bottom"p><"clear">';
    dataTableObj.destroy = true;
    dataTableObj.pageLength = 10;
    dataTableObj.data = fomatted_data;
    dataTableObj.hover = true; // speed up the table loading

    dataTableObj.deferRender = true;
    dataTableObj.scroller = true;
    dataTableObj.scrollCollapse = true; // dataTableObj.sScrollX = true; // dropdown remains under the datatable div

    $s.TableID = $(`#${TableID}`).DataTable(dataTableObj);
  }
};

const getTableHeaders = labels => {
  let ret = '';

  for (var i = 0; i < labels.length; i++) {
    ret += `<th>${labels[i]}</th>`;
  }

  return ret;
};

const getEventDiv = id => {
  let headers;
  let title;

  if (id == 'events') {
    title = 'Event History';
    headers = getTableHeaders(['Doc', 'Project', 'Collection', 'Type', 'Date', 'Performed By', 'Request']);
  } else if (id == 'adminevents') {
    title = 'Admin Event History';
    headers = getTableHeaders(['Doc', 'Target', 'Project', 'Collection', 'Field', 'Type', 'Date', 'Performed By', 'Request']);
  }

  const tableID = `table-${id}`;
  const table = `
  <div class="table-responsive" style="overflow-x:auto; width:100%; ">
    <table id="${tableID}" class="table table-striped" style='white-space: nowrap; width:100%;' cellspacing="0" >
        <thead>
            <tr>
            ${headers}
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
  </div>`;
  const div = `
  <div style="margin-top:10px;" class="row">
    <div class="col-sm-12">
      <div class="card">
        <div class="card-header"> 
          <span style="font-size:large; font-weight:600;"><i class="cil-history"> </i> ${title}</span>
        </div>
        <div class="card-body">
          ${table}
        </div>
      </div>
    </div>
  </div>`;
  return div;
};

const loadEventContent = async userRole => {
  try {
    let [projects, collections, eventlogs] = await Promise.all([ajaxCall('GET', '/api/v1/projects'), ajaxCall('GET', '/api/v1/collections'), ajaxCall('GET', '/api/v1/eventlogs')]);
    $s.collections = collections;
    $s.projects = projects;
    $s.eventlogs = eventlogs;

    if (userRole == 'admin') {
      let [admineventlogs] = await Promise.all([ajaxCall('GET', '/api/v1/eventlogs/admin')]);
      $s.admineventlogs = admineventlogs;
      console.log($s.admineventlogs);
    }
  } catch {
    $s.eventlogs = [];
    $s.admineventlogs = [];
  }

  await refreshEventTable('events', $s.eventlogs);

  if (userRole == 'admin') {
    await refreshEventTable('adminevents', $s.admineventlogs);
  }
};
const getEventNavbar = async id => {
  const eventDiv = getEventDiv(id);
  return eventDiv;
};

/***/ }),

/***/ "./public/js/formModules/crudData.js":
/*!*******************************************!*\
  !*** ./public/js/formModules/crudData.js ***!
  \*******************************************/
/*! namespace exports */
/*! export createSelectizeMultiField [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCollectionFieldData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFieldsDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFormElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getFormRow [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getInsertDataDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepOntologyDropdown [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepReferenceDropdown [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepRunForm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getCollectionFieldData": () => /* binding */ getCollectionFieldData,
/* harmony export */   "getFormRow": () => /* binding */ getFormRow,
/* harmony export */   "getFormElement": () => /* binding */ getFormElement,
/* harmony export */   "createSelectizeMultiField": () => /* binding */ createSelectizeMultiField,
/* harmony export */   "prepRunForm": () => /* binding */ prepRunForm,
/* harmony export */   "prepReferenceDropdown": () => /* binding */ prepReferenceDropdown,
/* harmony export */   "prepOntologyDropdown": () => /* binding */ prepOntologyDropdown,
/* harmony export */   "getFieldsDiv": () => /* binding */ getFieldsDiv,
/* harmony export */   "getInsertDataDiv": () => /* binding */ getInsertDataDiv
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _dynamicFields__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamicFields */ "./public/js/formModules/dynamicFields.js");
/* eslint-disable */
;

 // GLOBAL SCOPE

let $s = {
  data: {},
  collections: {},
  fields: {},
  projects: {},
  server: {}
};

const ajaxCall = async (method, url) => {
  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    console.log(res.data.data.data);
    return res.data.data.data;
  } catch (err) {
    console.log(err);
    return '';
  }
};

const getCollectionFieldData = async () => {
  let [collections, fields, projects] = await Promise.all([ajaxCall('GET', '/api/v1/collections'), ajaxCall('GET', '/api/v1/fields'), ajaxCall('GET', '/api/v1/projects')]);
  $s.collections = collections;
  $s.fields = fields;
  $s.projects = projects;
};

const getDataDropdown = (id, el_class, el_name, data, def, required, fieldID, attr, dataField) => {
  const idText = id ? `id="${id}"` : '';
  const attrText = attr ? attr : '';
  const fieldIDText = fieldID ? `fieldID="${fieldID}"` : '';
  let dropdown = `<select ${required} ${attrText} class="form-control ${el_class}" ${fieldIDText} ${idText} name="${el_name}">`;
  dropdown += `<option value="" >--- Select ---</option>`;
  data.forEach(i => {
    if (dataField) {
      const selected = def == i[dataField] && def != '' ? 'selected' : '';
      dropdown += `<option ${selected} value="${i._id}">${i[dataField]}</option>`;
    } else {
      const selected = def == i.id || def == i.name ? 'selected' : '';
      dropdown += `<option ${selected} value="${i._id}">${i.name}</option>`;
    }
  });
  dropdown += `</select>`;
  return dropdown;
};

const getFormRow = (element, label, settings) => {
  let required = '';
  let description = '';
  let hide = '';

  if (settings && settings.required) {
    required = '<span style="color:red";>*</span>';
  }

  if (settings && settings.hidden) return '';
  if (settings && settings.hide) hide = `style="display:none;"`;
  let ret = `
    <div class="form-group row" ${hide}>
        <label class="col-md-3 col-form-label text-right">${label}${required}</label>
        <div class="col-md-9">
            ${element}
        </div>
    </div>`;
  return ret;
};

const getFieldsOfCollection = collectionID => {
  return $s.fields.filter(field => field.collectionID === collectionID);
};

const getRefFieldDropdown = async (ref, name, required, def, projectData, $scope) => {
  try {
    let collectionID = '';
    let collName = '';
    let projectID = projectData && projectData._id ? projectData._id : '';
    let refData = [];
    let rawRefData = [];
    var re = projectData.name ? new RegExp(projectData.name + '_(.*)') : '';

    if (re && ref.match(re)) {
      collName = ref.match(re)[1];
      refData = await ajaxCall('GET', `/api/v1/projects/${projectData.name}/data/${collName}`);

      if ($scope.collections && $scope.collections[0]) {
        const collection = $scope.collections.filter(c => c.name == collName && c.projectID == projectID);
        if (collection && collection[0] && collection[0]._id) collectionID = collection[0]._id;
      }
    } else {
      rawRefData = await ajaxCall('GET', `/api/v1/${ref}`);

      for (var k = 0; k < rawRefData.length; k++) {
        // take only one project for ref== 'projects'
        if (ref == 'projects' && projectData && projectData.id && rawRefData[k].id !== projectData.id) {
          continue; // filter data if it has projectID field.
        } else if (ref !== 'projects' && projectData && projectData.id && rawRefData[k].projectID && rawRefData[k].projectID !== projectData.id) {
          continue;
        }

        refData.push(rawRefData[k]);
      }
    }

    let dataField = '';

    if ($scope.fields.length) {
      const fieldsOfCollection = $scope.fields.filter(f => f.collectionID === collectionID);
      const showFields = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getDropdownFields)(refData[0], fieldsOfCollection);
      dataField = showFields && showFields[0] ? showFields[0] : '';
    }

    console.log(dataField);
    const collDropdown = getDataDropdown('', 'ref-control select-text-opt data-reference', name, refData, def, required, '', `ref="${ref}" collectionID="${collectionID}" projectID="${projectID}" collectionName="${collName}"`, dataField);
    return collDropdown;
  } catch (err) {
    console.log(err);
    return '';
  }
};

const getFormElement = async (field, projectData, $scope) => {
  let ret = '';
  const type = field.type;
  const required = field.required ? 'required' : '';
  const dbType = type ? `dbType="${type}"` : '';
  const def = field.default ? field.default : '';
  const fieldID = field._id;

  if (type == 'String' || type == 'Number') {
    if (field.enum) {
      const options = field.enum.map(i => {
        if (i == 'mongoose.Schema.ObjectId') {
          return {
            _id: 'mongoose.Schema.ObjectId',
            name: 'ObjectId'
          };
        }

        return {
          _id: i,
          name: i
        };
      });
      ret = getDataDropdown('', '', field.name, options, def, required, fieldID, '', '');
    } else if (field.ontology) {
      ret = getDataDropdown('', 'ontology', field.name, [], def, required, fieldID, '', '');
    } else {
      ret = `<input ${dbType} class="form-control" type="text" name="${field.name}" ${required} value="${def}"></input>`;
    }
  } else if (type == 'Date') {
    ret = `<input ${dbType} class="form-control" type="date" name="${field.name}" ${required}></input>`;
  } else if (type == 'Mixed' || type == 'Array') {
    let className = '';
    if (field.name == 'perms') className = 'data-perms';
    if (field.name == 'restrictTo') className = 'data-restrictTo';
    ret = `<input ${dbType} class="form-control ${className}" type="text" name="${field.name}" ${required} value="${def}"></input>`;
  } else if (type == 'mongoose.Schema.ObjectId') {
    if (field.ref) {
      ret = await getRefFieldDropdown(field.ref, field.name, required, def, projectData, $scope);
    }
  } else if (type == 'Boolean' || type == 'boolean') {
    const checked = def == true ? 'checked' : '';
    ret = `<input ${dbType} style="margin-left:0rem; margin-top:0.70rem;" type="checkbox" name="${field.name}" ${required} ${checked}></input>`;
  }

  return ret;
};
const createSelectizeMultiField = (el, data, fieldsOfCollection) => {
  if (data && data[0]) {
    const showFields = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getDropdownFields)(data[0], fieldsOfCollection);
    const showFieldsSum = showFields.slice(0, 3);
    const isRequired = $(el).attr('required');
    $(el).selectize({
      create: true,
      valueField: '_id',
      searchField: showFieldsSum,
      options: data,
      render: {
        option: function (data, escape) {
          let ret = `<div class="option">`;
          showFields.forEach((i, idx) => {
            if (idx < 3 && data[i]) {
              if (i == 'name') {
                ret += `<span class="title"> ${escape(data[i])} </span>`;
              } else {
                ret += `<span class="url"> ${i}: ${escape(data[i])} </span>`;
              }
            }
          });
          ret += `</div>`;
          return ret;
        },
        item: function (data, escape) {
          let ret = `<div class="item" data-value="${escape(data._id)} ">`;
          ret += `<i>`;
          showFields.forEach((i, idx) => {
            if (idx < 1) ret += `${escape(data[i])}`;
          });
          ret += `</i>`;
          ret += `</div>`;
          return ret;
        }
      }
    });

    if (isRequired) {
      $(el).prop('required', true);
    }
  }
};

const selectizeRunTemplate = (el, data, dynamicInputEl, dynamicOutputEl) => {
  $(el).selectize({
    create: function (input) {
      console.log('input', input);
      return {
        _id: input,
        name: input
      };
    },
    placeholder: 'Type or Choose Run ID',
    valueField: '_id',
    searchField: ['_id', 'name'],
    options: data,
    onChange: function (value) {
      const runID = value;

      if (runID && $s.server) {
        const url_server = $s.server.url_server;
        console.log('url_server', url_server);
        let body = {};
        const method = 'GET'; // method for Dnext query

        const url = `${url_server}/api/service.php?data=getRun&id=${runID}`;
        axios__WEBPACK_IMPORTED_MODULE_0___default().post('/api/v1/misc/getDnextData', {
          body,
          method,
          url
        }).then(res => {
          console.log(res);

          if (res && res.data && res.data.data && res.data.data.data && res.data.data.data.dmetaOutput) {
            const dmetaOutputs = res.data.data.data.dmetaOutput;
            const inputs = res.data.data.data.inputs;
            const uniqueOutputs = [...new Set(dmetaOutputs.map(item => item.target))];
            let outData = [];

            for (var k = 0; k < uniqueOutputs.length; k++) {
              let outDataObj = {};
              outDataObj.key = uniqueOutputs[k];
              outDataObj.value = false;
              outDataObj.valueType = 'checkbox';
              outData.push(outDataObj);
            }

            const filteredInputs = inputs.filter(i => i.type == 'collection' || i.name == 'mate');
            let inData = [];

            for (var k = 0; k < filteredInputs.length; k++) {
              let dataObj = {};

              if (filteredInputs[k].type == 'collection') {
                dataObj.key = filteredInputs[k].name;
                dataObj.value = '';
                dataObj.valueType = 'collection';
              } else {
                dataObj.key = filteredInputs[k].name;
                dataObj.value = filteredInputs[k].val;
                dataObj.valueType = 'input';
              }

              dataObj.valueEdit = true;
              inData.push(dataObj);
            }

            (0,_dynamicFields__WEBPACK_IMPORTED_MODULE_2__.insertDynamicFields)(dynamicOutputEl, {
              clean: true,
              data: outData
            });
            (0,_dynamicFields__WEBPACK_IMPORTED_MODULE_2__.insertDynamicFields)(dynamicInputEl, {
              clean: true,
              data: inData
            });
          } //

        });
      }
    },
    render: {
      option: function (data, escape) {
        let ret = `<div class="option">`;

        if (data['name'] && data['name'] != data['_id']) {
          ret += `<span class="title"> ${escape(data['name'])} </span>`;
        }

        ret += `<span class="url"> RUN ID: ${escape(data['_id'])} </span>`;
        ret += `</div>`;
        return ret;
      },
      item: function (data, escape) {
        let ret = `<div class="item" data-value="${escape(data._id)} ">`;
        ret += `<i>`;
        ret += `${escape(data['_id'])}`;
        ret += `</i>`;
        ret += `</div>`;
        return ret;
      }
    }
  });
};

const updateSelectizeOptions = (el, data) => {
  for (var k = 0; k < data.length; k++) {
    if (data[k]['_id'] && data[k]['name']) {
      let opt = {
        _id: data[k]['_id'],
        name: data[k]['name']
      };
      el[0].selectize.addOption([opt]);
    }
  }
};

const updateDropdownOptions = (dropdown, data) => {
  dropdown.empty();

  for (var k = 0; k < data.length; k++) {
    if (data[k]['_id'] && data[k]['name']) {
      dropdown.append($('<option></option>').val(data[k]['_id']).html(data[k]['name']));
    }
  }
};

const prepRunForm = (formId, data, $scope, projectID) => {
  console.log('prepRunForm');
  const serverIDField = $(formId).find(`[name*='server_id']`);
  const runEnvField = $(formId).find(`[name*='run_env']`);
  const templateRunField = $(formId).find(`[name*='tmplt_id']`);
  const inputField = $(formId).find(`[name*='in']`);
  const outputField = $(formId).find(`[name*='out']`);
  let runEnvDropdownEl = '';
  let templateRunDropdownEl = '';
  let dynamicOutputEl = '';
  let dynamicInputEl = '';

  if (serverIDField[0]) {
    if (runEnvField[0]) {
      if (!$(runEnvField[0]).hasClass('customize')) {
        // remove actual runEnvField
        const runEnvDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([], {
          name: 'run_env',
          class: 'customize'
        });
        runEnvDropdownEl = $(runEnvDropdown);
        $(runEnvField[0]).after(runEnvDropdownEl);
        $(runEnvField[0]).remove();
      }
    }

    if (outputField[0]) {
      if (!$(outputField[0]).hasClass('customized')) {
        dynamicOutputEl = (0,_dynamicFields__WEBPACK_IMPORTED_MODULE_2__.createDynamicFields)(outputField[0], {
          name: 'out',
          class: 'customize',
          insert: false,
          delete: false,
          projectID: projectID
        });
      }
    }

    if (inputField[0]) {
      if (!$(inputField[0]).hasClass('customized')) {
        dynamicInputEl = (0,_dynamicFields__WEBPACK_IMPORTED_MODULE_2__.createDynamicFields)(inputField[0], {
          name: 'in',
          class: 'customize',
          insert: true,
          delete: true,
          projectID: projectID
        });
      }
    }

    if (templateRunField[0]) {
      if (!$(templateRunField[0]).hasClass('customize')) {
        // hide actual runEnvField
        const templateRunDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([], {
          name: 'tmplt_id',
          class: 'customize'
        });
        templateRunDropdownEl = $(templateRunDropdown);
        $(templateRunField[0]).after(templateRunDropdownEl); // 3. make template run_id selectize and on change update inputs/outputs dropdown

        selectizeRunTemplate(templateRunDropdownEl, [], dynamicInputEl, dynamicOutputEl);
        $(templateRunField[0]).remove();
      }
    } // 1. get all run environments of user from dnext on change of serverid


    $(serverIDField[0]).on('change', async function (e) {
      const serverId = $(this).val();
      console.log(serverId);

      if (serverId) {
        try {
          const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
            method: 'GET',
            url: `/api/v1/server/${serverId}`
          });
          console.log(res);

          if (res && res.data && res.data.status === 'success' && res.data.data && res.data.data.data && res.data.data.data[0]) {
            $s.server = res.data.data.data[0];
            const url_server = res.data.data.data[0].url_server;
            console.log(url_server, 'url_server');

            if (url_server && runEnvDropdownEl) {
              let body = {};
              const method = 'GET'; // method for Dnext query

              const url = `${url_server}/api/service.php?data=getRunEnv`;
              const runEnvData = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
                method: 'POST',
                url: `/api/v1/misc/getDnextData`,
                data: {
                  body,
                  method,
                  url
                }
              });
              console.log('runEnvData', runEnvData);

              if (runEnvData && runEnvData.data && runEnvData.data.data) {
                updateDropdownOptions(runEnvDropdownEl, runEnvData.data.data.data);
              }
            }

            if (url_server && templateRunDropdownEl) {
              let body = {};
              const method = 'GET'; // method for Dnext query

              const url = `${url_server}/api/service.php?data=getRuns`;
              const runsData = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
                method: 'POST',
                url: `/api/v1/misc/getDnextData`,
                data: {
                  body,
                  method,
                  url
                }
              });
              console.log('runsData', runsData);

              if (runsData && runsData.data && runsData.data.data) {
                updateSelectizeOptions(templateRunDropdownEl, runsData.data.data.data);
              }
            }
          }
        } catch (err) {
          console.log(err);
        }
      } else {
        // empty dropdowns
        updateDropdownOptions(runEnvDropdownEl, []);
      }
    });

    if (!data || !data.server_id) {
      $(serverIDField[0]).prop('selectedIndex', 1).trigger('change');
    }
  } // 3. add extra dropdown for mode: [single,batch]
  // if batch mode is selected: use name and work directory as prefix

};
const prepReferenceDropdown = (formId, $scope) => {
  const formValues = $(formId).find('select.ref-control');

  for (var k = 0; k < formValues.length; k++) {
    const collectionID = $(formValues[k]).attr('collectionID');

    if (collectionID && $scope.data && $scope.data[collectionID]) {
      const fieldsOfCollection = $scope.fields.filter(f => f.collectionID === collectionID);
      createSelectizeMultiField($(formValues[k])[0], $scope.data[collectionID], fieldsOfCollection);
    }
  }
};
const prepOntologyDropdown = (formId, data, $scope) => {
  const formValues = $(formId).find('select.ontology');

  for (var k = 0; k < formValues.length; k++) {
    const fieldID = $(formValues[k]).attr('fieldID');
    const nameAttr = $(formValues[k]).attr('name');
    const ontologyField = $scope.fields.filter(field => field._id === fieldID);
    const settings = ontologyField[0] && ontologyField[0].ontology ? ontologyField[0].ontology : '';
    console.log('settings', settings);
    if (!settings) continue;
    let url;
    let authorization = '';
    let include = [];
    let exclude = [];
    let filter = '';
    let create; // --- NCBO bioportal Example ---
    // { "url":"http://data.bioontology.org/search/?q=",
    //  "filter":"&ontologies=EFO&suggest=true"
    //  "authorization":"apikey token=39a74770-b709-4c1c-a69d-45d8e117e87a",
    //  "include":["extra-keyword1","extra-keyword2"],
    //  "exclude":["keyword-to-exclude"],
    //  "field":"collection.prefLabel",
    //  "create":true
    // }
    // url-> url for selected APIs
    // filter (optional)-> filtration parameters for results
    // authorization (optional) -> if API requires token to access, you can set it here.
    // include(optional)-> extra keywords to include in results
    // exclude(optional)-> some keywords to exclude in results
    // field-> location of the selected field in returned json data
    // create(optional)-> allow addition of new keywords by the user. By default, it is false.
    //
    // ontologies: https://bioportal.bioontology.org/ontologies
    // EFO:Experimental Factor Ontology
    // BAO:BioAssay Ontology
    // e.g. filter = '&ontologies=EFO&suggest=true';
    // e.g. filter = '&roots_only=true&ontologies=BAO&suggest=true';
    // --- GITHUB API Example ---
    // { "url":"https://api.github.com/legacy/repos/search/", "field":"repositories.name" }
    // e.g. for collection.prefLabel => valueField:prefLabel, treeField:collection

    let valueField = '';
    let treeField = '';
    url = settings.url ? settings.url : '';
    authorization = settings.authorization ? settings.authorization : '';
    create = settings.create ? settings.create : false;
    filter = settings.filter ? settings.filter : '';
    exclude = settings.exclude ? settings.exclude : [];
    include = settings.include ? settings.include : [];

    if (settings.field) {
      if (settings.field.match(/\./)) {
        valueField = settings.field.substr(settings.field.lastIndexOf('.') + 1);
        treeField = settings.field.substr(0, settings.field.lastIndexOf('.'));
      } else {
        valueField = settings.field;
        treeField = '';
      }
    }

    console.log('valueField', valueField);
    console.log('treeField', treeField);
    let options;

    if (!url) {
      options = {
        create: create,
        onInitialize: function () {
          var selectize = this; // include extra options on start

          if (include && include.length) {
            for (var t = 0; t < include.length; t++) {
              let opt = {
                value: include[t],
                text: include[t]
              };
              selectize.addOption([opt]);
            }
          }

          if (data[nameAttr]) {
            let opt = {
              value: data[nameAttr],
              text: data[nameAttr]
            };
            selectize.addOption([opt]);
            selectize.setValue([data[nameAttr]]);
          }
        }
      };
    } else {
      options = {
        valueField: valueField,
        labelField: valueField,
        searchField: valueField,
        preload: true,
        create: create,
        load: function (query, callback) {
          if (!query.length) return callback();

          try {
            axios__WEBPACK_IMPORTED_MODULE_0___default().post('/api/v1/misc/remoteData', {
              url: url + encodeURIComponent(query) + filter,
              authorization: authorization
            }).then(res => {
              console.log(res);
              let prepedData = [];
              let selData = [];

              if (treeField && res.data.data[treeField]) {
                selData = res.data.data[treeField];
              } else {
                selData = res.data.data;
              }

              for (var n = 0; n < selData.length; n++) {
                if (selData[n][valueField] && !exclude.includes(selData[n][valueField])) {
                  let obj = {};
                  obj[valueField] = selData[n][valueField];
                  prepedData.push(obj);
                }
              }

              console.log(prepedData);

              if (prepedData.length) {
                callback(prepedData);
              } else {
                callback();
              }
            });
          } catch (err) {
            console.log(err);
            callback();
          }
        },
        onInitialize: function () {
          var selectize = this; // include extra options on start

          if (include && include.length) {
            for (var t = 0; t < include.length; t++) {
              let opt = {};
              opt[valueField] = include[t];
              selectize.addOption([opt]);
            }
          }

          if (data[nameAttr]) {
            let opt = {};
            opt[valueField] = data[nameAttr];
            selectize.addOption([opt]);
            selectize.setValue([data[nameAttr]]);
          }
        }
      };
    } // selectize already initialized then add option to select


    if ($(formValues[k])[0].selectize) {
      if (!url) {
        if (data[nameAttr]) {
          let opt = {
            value: data[nameAttr],
            text: data[nameAttr]
          };
          $(formValues[k])[0].selectize.addOption([opt]);
          $(formValues[k])[0].selectize.setValue([data[nameAttr]]);
        }
      } else {
        if (data[nameAttr]) {
          let opt = {};
          opt[valueField] = data[nameAttr];
          $(formValues[k])[0].selectize.addOption([opt]);
          $(formValues[k])[0].selectize.setValue([data[nameAttr]]);
        }
      }
    } else {
      $(formValues[k]).selectize(options);
    }
  }
}; // get all form fields of selected data collection

const getFieldsDiv = async (collectionID, projectData) => {
  await getCollectionFieldData();
  let ret = ''; // 2. get all fields of collection

  const fields = getFieldsOfCollection(collectionID);

  for (var k = 0; k < fields.length; k++) {
    if (fields[k].namingPattern) continue;
    const label = fields[k].label;
    const element = await getFormElement(fields[k], projectData, $s);
    ret += getFormRow(element, label, fields[k]);
  } // 3. Additional fields: e.g. perms


  const label = 'Permissions';
  const permsField = {
    name: 'perms',
    label: 'Permissions',
    type: 'Mixed'
  };
  const element = await getFormElement(permsField, projectData, $s);
  ret += getFormRow(element, label, permsField);
  return ret;
}; // NEEDS TO UPDATE: run tab in import page

const bindEventHandlers = () => {
  // update form fields based on selected data collection
  $(document).on('change', `select.collection-control`, async function (e) {
    const collectionID = $(this).val();
    const projectData = {
      name: 'vitiligo'
    }; // NEEDS UPDATE!!

    const fieldsDiv = await getFieldsDiv(collectionID, projectData);
    $('#fieldsOfColl').empty();
    $('#fieldsOfColl').append(fieldsDiv); // clean log section

    $('#insert-data-coll-body').parent().css('display', 'none');
    $('#insert-data-coll-log').html('');
  });
  $(document).on('click', `.insert-data-coll`, async function (e) {
    e.preventDefault();
    const formValues = $(this).closest('form').find('input,select');
    const requiredFields = [];
    let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createFormObj)(formValues, requiredFields, true);
    console.log(formObj);
    const collectionName = $('#allcollections option:selected').text();
    let body = '';
    body += '<h4 style="text-align: center; margin-bottom:10px;">Request</h4>';
    body += '<table class="table" style="width:100%"><tbody>';
    Object.keys(formObj).forEach(key => {
      body += `<tr><td>${key}</td><td>${formObj[key]}</td></tr>`;
    });
    formObj = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.convertFormObj)(formObj);
    console.log(formObj);
    body += '</tbody></table>';
    $('#insert-data-coll-body').parent().css('display', 'block');
    $('#insert-data-coll-body').empty();
    $('#insert-data-coll-body').append(body);
    const projectName = 'vitiligo';

    if (stop === false && collectionName) {
      const projectPart = projectName ? `projects/${projectName}/` : '';

      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
          method: 'POST',
          url: `/api/v1/${projectPart}data/${collectionName}`,
          data: formObj
        });
        console.log(res);

        if (res && res.data && res.data.status === 'success') {
          console.log('success');
          $('#insert-data-coll-log').html('success');
        }
      } catch (e) {
        let err = '';

        if (e.response && e.response.data) {
          if (e.response.data.error) err += JSON.stringify(e.response.data.error);
          if (e.response.data.message) err += JSON.stringify(e.response.data.message);
        }

        if (!err) err = JSON.stringify(e);
        $('#insert-data-coll-log').html(err);
      }
    }
  });
}; // prepare all form fields for selected collection


const getInsertDataDiv = async () => {
  bindEventHandlers();
  await getCollectionFieldData();
  const collDropdown = getDataDropdown('allcollections', 'collection-control', 'collection', $s.collections, '', '', '', '');
  const collDropdownDiv = getFormRow(collDropdown, 'Collection', '');
  let ret = `
    <div class="col-sm-6" style="margin-top: 20px;">
        ${collDropdownDiv}
    </div>
  <form class="form-horizontal" >
    <div class="col-sm-6">
        <div id="fieldsOfColl">
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                <button class="btn insert-data-coll btn-primary float-right" type="button" >Insert Data</button>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                <div class="card" style="display:none;">
                  <div id="insert-data-coll-body" class="card-body summary_card" style="overflow:auto; ">
                  </div>
                </div>
                <p id="insert-data-coll-log"></p>
            </div>
        </div>
    </div>
  </form>`;
  return ret;
};

/***/ }),

/***/ "./public/js/formModules/dataPerms.js":
/*!********************************************!*\
  !*** ./public/js/formModules/dataPerms.js ***!
  \********************************************/
/*! namespace exports */
/*! export prepDataPerms [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prepDataPerms": () => /* binding */ prepDataPerms
/* harmony export */ });
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _crudData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crudData */ "./public/js/formModules/crudData.js");
/* eslint-disable */
;


const JSON5 = __webpack_require__(/*! json5 */ "./node_modules/json5/dist/index.js"); // GLOBAL SCOPE


let $s = {
  dataTableObj: {},
  globalEventBinders: false
};

const getTableHeaders = labels => {
  let ret = '';

  for (var i = 0; i < labels.length; i++) {
    ret += `<th>${labels[i]}</th>`;
  }

  return ret;
};

const getOptionsButton = tableID => {
  return `
    <div class="btn-group" role="group">
      <button class="btn btn-info dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Options</button>
      <div class="dropdown-menu" style="margin: 0px;">
          <a tableid="${tableID}" class="dropdown-item edit-data-perm" href="#">Edit</a>
          <a tableid="${tableID}" class="dropdown-item delete-data-perm" href="#">Delete</a></div>
    </div>`;
};

const getPermsTable = (id, labels) => {
  const headers = getTableHeaders(labels);
  const ret = `
  <div>
    <div class="float-right" style="padding:7px;">
        <button class="btn insert-data-perm btn-info" tableid="${id}" type="button">Share with ...</button>
    </div>
    <div class="table-responsive" style="overflow-x:visible; overflow-y:visible; width:100%; ">
      <table id="${id}" class="table table-striped" style='white-space: nowrap; width:100%;' cellspacing="0" >
          <thead>
              <tr>
              ${headers}
              </tr>
          <tbody>
          </tbody>
      </thead>
      </table>
    </div>
  </div>`;
  return ret;
};

const prepPermsData = async (groups, permsObj) => {
  // getUserGroups: GET: {{URL}}/api/v1/usergroups
  // getUserIDWithEmail: GET: {{URL}}/api/v1/users/useridwithemail/${encodeURIComponent(email)}
  // getEmailWithUserID" GET: {{URL}}/api/v1/users/emailwithuserid/$id
  // prepare permsData for dataTableObj
  // perm:["read","write"]
  // type:["user", "group","role"]
  // permsData format:
  // {"write":{"group":["5fb45793aa5adff6f407f2d2"]},"read":{"group":["5fb4575faa5adff6f407f2d1"]}}
  // permsDataArr format:
  // [{ id:"36g3..." name:"test@user.com", perm: "read", type:"user"},
  // { id:"4g3..."  name:"test_group", perm: "write", type:"group"},
  // { id:"admin"   name:"admin", perm: "write", type:"role"}]
  let permsData = [];
  const perms = Object.keys(permsObj);

  for (var p = 0; p < perms.length; p++) {
    const perm = perms[p];
    const types = Object.keys(permsObj[perm]);

    for (var t = 0; t < types.length; t++) {
      const type = types[t];

      for (var i = 0; i < permsObj[perm][type].length; i++) {
        const id = permsObj[perm][type][i];

        if (type == 'user') {
          if (id == 'everyone') {
            permsData.push({
              id: id,
              perm: perm,
              type: type,
              name: id
            });
          } else {
            try {
              const email = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', `/api/v1/users/emailwithuserid/${id}`);
              permsData.push({
                id: id,
                perm: perm,
                type: type,
                name: email
              });
            } catch (err) {
              console.log(err);
            }
          }
        } else if (type == 'group' && groups) {
          const groupData = groups.filter(f => f._id == id);

          if (groupData && groupData[0] && groupData[0].name) {
            permsData.push({
              id: id,
              perm: perm,
              type: type,
              name: groupData[0].name
            });
          }
        } else if (type == 'role') {
          permsData.push({
            id: id,
            perm: perm,
            type: type,
            name: id
          });
        }

        console.log(permsData);
      }
    }
  }

  console.log(permsData);
  return permsData;
};

const prepDataPerms = async (formId, data) => {
  if (!$s.globalEventBinders) {
    bindGlobalEventHandlers();
    $s.globalEventBinders = true;
  }

  const formValues = $(formId).find('input.data-perms');
  let groups;

  if (formValues.length > 0) {
    groups = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', '/api/v1/groups');
  }

  for (var k = 0; k < formValues.length; k++) {
    const nameAttr = $(formValues[k]).attr('name');
    let permsObj = {};

    try {
      if (data.perms) permsObj = JSON5.parse(data.perms);
    } catch (err) {
      console.log('format err', err, permsObj);
    }

    console.log('permsObj', permsObj); // prepare permsData for dataTableObj

    const permsData = await prepPermsData(groups, permsObj);
    console.log('permsData', permsData);
    const labels = ['User/Group/Role', 'Type', 'Permission', 'Actions'];
    const fieldList = ['name', 'type', 'perm'];
    const tableID = 'perms-table';
    const tableDiv = getPermsTable(tableID, labels);
    $(formValues[k]).css('display', 'none');
    $(formValues[k]).after(tableDiv);
    let columns = [];

    for (var i = 0; i < fieldList.length; i++) {
      columns.push({
        data: fieldList[i]
      });
    }

    columns.push({
      data: null,
      className: 'center',
      fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
        $(nTd).attr('align', 'center');
        $(nTd).html(getOptionsButton(tableID));
      }
    });
    var dataTableObj = {
      columns: columns,
      columnDefs: [{
        defaultContent: '',
        targets: '_all'
      } //hides undefined error,
      ],
      language: {
        emptyTable: 'No permission has defined.'
      }
    };
    dataTableObj.dom = '';
    dataTableObj.destroy = true;
    dataTableObj.data = permsData;
    dataTableObj.hover = true; // dataTableObj.scroller = true;
    // dataTableObj.colReorder = true;
    // dataTableObj.scrollX = '500';

    $s.dataTableObj[tableID] = $(`#${tableID}`).DataTable(dataTableObj);
  }
};

const getErrorDiv = id => {
  return `<p style="background-color:#e211112b;" id="${id}"></p>`;
};

const getDropdown = (el_name, data, required, dataType) => {
  const requiredText = required ? 'required' : '';
  let dropdown = `<select ${requiredText} class="form-control data-perm-${el_name}" name="${el_name}">`;
  if (!required) dropdown += `<option value="" >--- Select ---</option>`;

  if (data) {
    data.forEach(i => {
      if (dataType == 'Array') dropdown += `<option  value="${i}">${i}</option>`;
      if (dataType == 'usergroups') dropdown += `<option  value="${i.group_id}">${i.group_name}</option>`;
    });
  }

  dropdown += `</select>`;
  return dropdown;
}; //[{ id:"36g3..." name:"test@user.com", perm: "read", type:"user"},
// { id:"4g3..."  name:"test_group", perm: "write", type:"group"},
// { id:"admin"   name:"admin", perm: "write", type:"role"}]


const getPermDataDiv = async type => {
  const usergroups = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', '/api/v1/usergroups');
  let ret = '';
  const typeElement = getDropdown('type', ['user', 'group', 'everyone'], false, 'Array');
  const permElement = getDropdown('perm', ['read', 'write'], true, 'Array'); // const roleElement = getDropdown('role', ['admin', 'project-admin', 'user'], true, 'Array');

  const groupElement = getDropdown('group', usergroups, true, 'usergroups');
  const userElement = `<input class="form-control data-perm-user" type="text" name="user" required value=""></input>`;

  if (type == 'perm') {
    ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(permElement, 'Permission', {
      hide: true
    });
    return ret;
  }

  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(typeElement, 'Share with', '');
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(userElement, 'E-Mail of the User', {
    hide: true
  }); // ret += getFormRow(roleElement, 'Role', { hide: true });

  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(groupElement, 'Group', {
    hide: true
  });
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(permElement, 'Permission', {
    hide: true
  });
  return ret;
};

const convertPermData = async formObj => {
  let data = '';
  const type = formObj.type;
  const perm = formObj.perm;

  if (type == 'role') {
    return {
      id: formObj.role,
      name: formObj.role,
      type,
      perm
    };
  } else if (type == 'group') {
    const group_name = $('#crudModal2').find('.data-perm-group option:selected').text();
    return {
      id: formObj.group,
      name: group_name,
      type,
      perm
    };
  } else if (type == 'user') {
    try {
      if (formObj.user) {
        const userid = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', `/api/v1/users/useridwithemail/${formObj.user}`);

        if (!userid) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoInDiv)('#crudModalError2', 'User not found.');
          return data;
        }

        return {
          id: userid,
          name: formObj.user,
          type,
          perm
        };
      }
    } catch (e) {
      console.log(e);
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoInDiv)('#crudModalError2', 'User not found.');
    }
  } else if (type == 'everyone') {
    return {
      id: type,
      name: type,
      type: 'user',
      perm
    };
  }

  return data;
};

const bindGlobalEventHandlers = () => {
  //  permission type change will update visible form fields
  $(document).on('change', `select.data-perm-type`, async function (e) {
    const permType = $(this).val();
    const userDiv = $('#crudModal2').find('.data-perm-user').closest('.row');
    const groupDiv = $('#crudModal2').find('.data-perm-group').closest('.row');
    const roleDiv = $('#crudModal2').find('.data-perm-role').closest('.row');
    const permDiv = $('#crudModal2').find('.data-perm-perm').closest('.row');

    if (permType == 'user') {
      userDiv.css('display', 'flex');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'flex');
    } else if (permType == 'group') {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'flex');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'flex');
    } else if (permType == 'role') {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'flex');
      permDiv.css('display', 'flex');
    } else if (permType == 'everyone') {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'flex');
    } else {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'none');
    }
  }); // ================= INSERT BUTTON =================

  $(document).on('click', `button.insert-data-perm`, async function (e) {
    $('#crudModalError2').empty();
    const tableid = $(this).attr('tableid');
    let form = await getPermDataDiv();
    $('#crudModalTitle2').text(`Share with ...`);
    $('#crudModalYes2').text('Save');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(getErrorDiv('crudModalError2'));
    $('#crudModalBody2').append(form);
    $('#crudModal2').off();
    $('#crudModal2').on('click', '#crudModalYes2', async function (e) {
      e.preventDefault();
      $('#crudModalError2').empty();
      const formValues = $('#crudModal2').find('input,select');
      const requiredValues = formValues.filter('[required]');
      const requiredFields = $.map(requiredValues, function (el) {
        if ($(el).closest('.row').css('display') !== 'none') {
          return $(el).attr('name');
        } else {
          return;
        }
      });
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.createFormObj)(formValues, requiredFields, true, true);
      const data = await convertPermData(formObj);

      if (stop === false && data) {
        $(`#${tableid}`).DataTable().row.add(data).draw();
        $('#crudModal2').modal('hide');
      }
    });
    $('#crudModal2').modal('show');
  }); // ================= EDIT BUTTON =================

  $(document).on('click', `a.edit-data-perm`, async function (e) {
    $('#crudModalError2').empty();
    const tableid = $(this).attr('tableid');
    const table = $(`#${tableid}`).DataTable();
    const clickedRow = $(this).closest('tr');
    let rowData = table.row(clickedRow).data();
    let form = await getPermDataDiv('perm');
    $('#crudModalTitle2').text(`Edit Permission`);
    $('#crudModalYes2').text('Save');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(getErrorDiv('crudModalError2'));
    $('#crudModalBody2').append(form);
    $('#crudModal2').find('.data-perm-perm').closest('.row').css('display', 'flex');
    $('#crudModal2').off();
    $('#crudModal2').on('show.coreui.modal', async function (e) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.fillFormByName)('#crudModal2', 'input, select', rowData, false);
    });
    $('#crudModal2').on('click', '#crudModalYes2', async function (e) {
      e.preventDefault();
      $('#crudModalError2').empty();
      const formValues = $('#crudModal2').find('input,select');
      const requiredValues = formValues.filter('[required]');
      const requiredFields = $.map(requiredValues, function (el) {
        if ($(el).closest('.row').css('display') !== 'none') {
          return $(el).attr('name');
        } else {
          return;
        }
      });
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.createFormObj)(formValues, requiredFields, true, true);
      let updatedData = Object.assign({}, rowData);
      updatedData.perm = formObj.perm;

      if (stop === false && updatedData) {
        $(`#${tableid}`).DataTable().row(clickedRow).remove().row.add(updatedData).draw();
        $('#crudModal2').modal('hide');
      }
    });
    $('#crudModal2').modal('show');
  }); // ================= DELETE BUTTON =================

  $(document).on('click', `a.delete-data-perm`, async function (e) {
    $('#crudModalError2').empty();
    const tableid = $(this).attr('tableid');
    var clickedRow = $(this).closest('tr');
    $('#crudModalTitle2').text(`Remove Permission`);
    $('#crudModalYes2').text('Remove');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(getErrorDiv('crudModalError2'));
    $('#crudModalBody2').append(`<p>Are you sure you want to delete the permission?</p>`);
    $('#crudModal2').off();
    $('#crudModal2').on('click', '#crudModalYes2', async function (e) {
      e.preventDefault();
      $(`#${tableid}`).DataTable().row(clickedRow).remove().draw();
      $('#crudModal2').modal('hide');
    });
    $('#crudModal2').modal('show');
  });
};

/***/ }),

/***/ "./public/js/formModules/dataRestrictTo.js":
/*!*************************************************!*\
  !*** ./public/js/formModules/dataRestrictTo.js ***!
  \*************************************************/
/*! namespace exports */
/*! export prepDataRestrictTo [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prepDataRestrictTo": () => /* binding */ prepDataRestrictTo
/* harmony export */ });
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _crudData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./crudData */ "./public/js/formModules/crudData.js");
/* eslint-disable */
;


const JSON5 = __webpack_require__(/*! json5 */ "./node_modules/json5/dist/index.js"); // GLOBAL SCOPE


let $s = {
  dataTableObj: {},
  globalEventBinders: false
};

const getTableHeaders = labels => {
  let ret = '';

  for (var i = 0; i < labels.length; i++) {
    ret += `<th>${labels[i]}</th>`;
  }

  return ret;
};

const getOptionsButton = tableID => {
  return `
    <div class="btn-group" role="group">
      <button class="btn btn-info dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Options</button>
      <div class="dropdown-menu" style="margin: 0px;">
          <a tableid="${tableID}" class="dropdown-item delete-data-restrictTo" href="#">Delete</a></div>
    </div>`;
};

const getRestrictToTable = (id, labels) => {
  const headers = getTableHeaders(labels);
  const ret = `
  <div>
    <div class="float-right" style="padding:7px;">
        <button class="btn insert-data-restrictTo btn-info" tableid="${id}" type="button">Insert</button>
    </div>
    <div class="table-responsive" style="overflow-x:visible; overflow-y:visible; width:100%; ">
      <table id="${id}" class="table table-striped" style='white-space: nowrap; width:100%;' cellspacing="0" >
          <thead>
              <tr>
              ${headers}
              </tr>
          <tbody>
          </tbody>
      </thead>
      </table>
    </div>
  </div>`;
  return ret;
};

const prepRestrictToData = async (groups, permsObj) => {
  // getUserGroups: GET: {{URL}}/api/v1/usergroups
  // getUserIDWithEmail: GET: {{URL}}/api/v1/users/useridwithemail/${encodeURIComponent(email)
  // getEmailWithUserID" GET: {{URL}}/api/v1/users/emailwithuserid/$id
  // prepare permsData for dataTableObj
  // type:["user", "group","role"]
  // permsData format:
  // {"group":["5fb45793aa5adff6f407f2d2"],"user":["5fb4575faa5adff6f407f2d1"]}
  // permsDataArr format:
  // [{ id:"36g3..." name:"test@user.com", type:"user"},
  // { id:"4g3..."  name:"test_group", type:"group"},
  // { id:"admin"   name:"admin", type:"role"}]
  let permsData = [];
  const types = Object.keys(permsObj);

  for (var t = 0; t < types.length; t++) {
    const type = types[t];

    for (var i = 0; i < permsObj[type].length; i++) {
      const id = permsObj[type][i];

      if (type == 'user') {
        try {
          const email = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', `/api/v1/users/emailwithuserid/${id}`);
          permsData.push({
            id: id,
            type: type,
            name: email
          });
        } catch (err) {
          console.log(err);
        }
      } else if (type == 'group') {
        const groupData = groups.filter(f => f._id == id);
        console.log(groups);
        console.log(groupData);

        if (groupData && groupData[0] && groupData[0].name) {
          permsData.push({
            id: id,
            type: type,
            name: groupData[0].name
          });
        }
      } else if (type == 'role') {
        permsData.push({
          id: id,
          type: type,
          name: id
        });
      }

      console.log(permsData);
    }
  }

  console.log(permsData);
  return permsData;
};

const prepDataRestrictTo = async (formId, data) => {
  if (!$s.globalEventBinders) {
    bindGlobalEventHandlers();
    $s.globalEventBinders = true;
  }

  const formValues = $(formId).find('input.data-restrictTo');
  let groups;

  if (formValues.length > 0) {
    groups = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', '/api/v1/groups');
  }

  for (var k = 0; k < formValues.length; k++) {
    const nameAttr = $(formValues[k]).attr('name');
    console.log(data.restrictTo);
    let permsObj = {};

    try {
      if (data.restrictTo) permsObj = JSON5.parse(data.restrictTo);
    } catch (err) {
      console.log('format err', err, permsObj);
    }

    console.log('permsObj', permsObj); // prepare permsData for dataTableObj

    const permsData = await prepRestrictToData(groups, permsObj);
    console.log('permsData', permsData);
    const labels = ['User/Group/Role', 'Type', 'Actions'];
    const fieldList = ['name', 'type'];
    const tableID = 'restrictTo-table';
    const tableDiv = getRestrictToTable(tableID, labels);
    $(formValues[k]).css('display', 'none');
    $(formValues[k]).after(tableDiv);
    let columns = [];

    for (var i = 0; i < fieldList.length; i++) {
      columns.push({
        data: fieldList[i]
      });
    }

    columns.push({
      data: null,
      className: 'center',
      fnCreatedCell: function (nTd, sData, oData, iRow, iCol) {
        $(nTd).attr('align', 'center');
        $(nTd).html(getOptionsButton(tableID));
      }
    });
    var dataTableObj = {
      columns: columns,
      columnDefs: [{
        defaultContent: '',
        targets: '_all'
      } //hides undefined error,
      ],
      language: {
        emptyTable: 'No restriction for inserting new data.'
      }
    };
    dataTableObj.dom = '';
    dataTableObj.destroy = true;
    dataTableObj.data = permsData;
    dataTableObj.hover = true; // dataTableObj.scroller = true;
    // dataTableObj.colReorder = true;
    // dataTableObj.scrollX = '500';

    $s.dataTableObj[tableID] = $(`#${tableID}`).DataTable(dataTableObj);
  }
};

const getErrorDiv = id => {
  return `<p style="background-color:#e211112b;" id="${id}"></p>`;
};

const getDropdown = (el_name, data, required, dataType) => {
  const requiredText = required ? 'required' : '';
  let dropdown = `<select ${requiredText} class="form-control data-restrictTo-${el_name}" name="${el_name}">`;
  if (!required) dropdown += `<option value="" >--- Select ---</option>`;

  if (data) {
    data.forEach(i => {
      if (dataType == 'Array') dropdown += `<option  value="${i}">${i}</option>`;
      if (dataType == 'usergroups') dropdown += `<option  value="${i.group_id}">${i.group_name}</option>`;
    });
  }

  dropdown += `</select>`;
  return dropdown;
}; //[{ id:"36g3..." name:"test@user.com",  type:"user"},
// { id:"4g3..."  name:"test_group",  type:"group"},
// { id:"admin"   name:"admin", type:"role"}]


const getDataDiv = async () => {
  const usergroups = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', '/api/v1/usergroups');
  console.log(usergroups);
  let ret = '';
  const typeElement = getDropdown('type', ['user', 'group', 'role'], false, 'Array');
  const roleElement = getDropdown('role', ['admin', 'project-admin', 'user'], true, 'Array');
  const groupElement = getDropdown('group', usergroups, true, 'usergroups');
  const userElement = `<input class="form-control data-restrictTo-user" type="text" name="user" required value=""></input>`;
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(typeElement, 'Share with', '');
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(userElement, 'E-Mail of the User', {
    hide: true
  });
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(roleElement, 'Role', {
    hide: true
  });
  ret += (0,_crudData__WEBPACK_IMPORTED_MODULE_1__.getFormRow)(groupElement, 'Group', {
    hide: true
  });
  return ret;
};

const convertPermData = async formObj => {
  let data = '';
  const type = formObj.type;

  if (type == 'role') {
    return {
      id: formObj.role,
      name: formObj.role,
      type
    };
  } else if (type == 'group') {
    const group_name = $('#crudModal2').find('.data-restrictTo-group option:selected').text();
    return {
      id: formObj.group,
      name: group_name,
      type
    };
  } else if (type == 'user') {
    try {
      if (formObj.user) {
        const userid = await (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.ajaxCall)('GET', `/api/v1/users/useridwithemail/${formObj.user}`);

        if (!userid) {
          (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoInDiv)('#crudModalError2', 'User not found.');
          return data;
        }

        return {
          id: userid,
          name: formObj.user,
          type
        };
      }
    } catch (e) {
      console.log(e);
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoInDiv)('#crudModalError2', 'User not found.');
    }
  }

  return data;
};

const bindGlobalEventHandlers = () => {
  //  permission type change will update visible form fields
  $(document).on('change', `select.data-restrictTo-type`, async function (e) {
    const permType = $(this).val();
    const userDiv = $('#crudModal2').find('.data-restrictTo-user').closest('.row');
    const groupDiv = $('#crudModal2').find('.data-restrictTo-group').closest('.row');
    const roleDiv = $('#crudModal2').find('.data-restrictTo-role').closest('.row');
    const permDiv = $('#crudModal2').find('.data-restrictTo-perm').closest('.row');

    if (permType == 'user') {
      userDiv.css('display', 'flex');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'flex');
    } else if (permType == 'group') {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'flex');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'flex');
    } else if (permType == 'role') {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'flex');
      permDiv.css('display', 'flex');
    } else {
      userDiv.css('display', 'none');
      groupDiv.css('display', 'none');
      roleDiv.css('display', 'none');
      permDiv.css('display', 'none');
    }
  }); // ================= INSERT BUTTON =================

  $(document).on('click', `button.insert-data-restrictTo`, async function (e) {
    $('#crudModalError2').empty();
    const tableid = $(this).attr('tableid');
    let form = await getDataDiv();
    $('#crudModalTitle2').text(`Share with ...`);
    $('#crudModalYes2').text('Save');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(getErrorDiv('crudModalError2'));
    $('#crudModalBody2').append(form);
    $('#crudModal2').off();
    $('#crudModal2').on('click', '#crudModalYes2', async function (e) {
      e.preventDefault();
      $('#crudModalError2').empty();
      const formValues = $('#crudModal2').find('input,select');
      const requiredValues = formValues.filter('[required]');
      const requiredFields = $.map(requiredValues, function (el) {
        if ($(el).closest('.row').css('display') !== 'none') {
          return $(el).attr('name');
        } else {
          return;
        }
      });
      let [formObj, stop] = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.createFormObj)(formValues, requiredFields, true, true);
      const data = await convertPermData(formObj);

      if (stop === false && data) {
        $(`#${tableid}`).DataTable().row.add(data).draw();
        $('#crudModal2').modal('hide');
      }
    });
    $('#crudModal2').modal('show');
  }); // ================= DELETE BUTTON =================

  $(document).on('click', `a.delete-data-restrictTo`, async function (e) {
    $('#crudModalError2').empty();
    const tableid = $(this).attr('tableid');
    var clickedRow = $(this).closest('tr');
    $('#crudModalTitle2').text(`Remove Permission`);
    $('#crudModalYes2').text('Remove');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(getErrorDiv('crudModalError2'));
    $('#crudModalBody2').append(`<p>Are you sure you want to delete the permission?</p>`);
    $('#crudModal2').off();
    $('#crudModal2').on('click', '#crudModalYes2', async function (e) {
      e.preventDefault();
      $(`#${tableid}`).DataTable().row(clickedRow).remove().draw();
      $('#crudModal2').modal('hide');
    });
    $('#crudModal2').modal('show');
  });
};

/***/ }),

/***/ "./public/js/formModules/dynamicFields.js":
/*!************************************************!*\
  !*** ./public/js/formModules/dynamicFields.js ***!
  \************************************************/
/*! namespace exports */
/*! export createDynamicFields [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDynamicFieldsData [provided] [no usage info] [missing usage info prevents renaming] */
/*! export insertDynamicFields [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "insertDynamicFields": () => /* binding */ insertDynamicFields,
/* harmony export */   "createDynamicFields": () => /* binding */ createDynamicFields,
/* harmony export */   "getDynamicFieldsData": () => /* binding */ getDynamicFieldsData
/* harmony export */ });
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _dashboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../dashboard */ "./public/js/dashboard.js");
/* eslint-disable */
;
 // GLOBAL SCOPE

let $s = {
  init: false
}; //{ data: outData }
// const editableRow = {
//     key: '',
//     value: '',
//     keyType: 'input',
//     valueType: 'input',
//     keyEdit: true,
//     valueEdit: true
//   };

const insertDynamicFields = (el, settings) => {
  const mainDiv = $(el).closest('div.dynamicFields');
  const mainSettings = mainDiv.data('settings');

  if (settings.clean) {
    el.find('tbody').empty();
  }

  const data = settings.data;

  for (let k = 0; k < data.length; k++) {
    let keyType = data[k].keyType ? data[k].keyType : 'input';
    let valueType = data[k].valueType ? data[k].valueType : 'input';
    let newRow = $('<tr>');
    let keyField = ``;
    let valueField = ``;
    const confirmBtn = `<button class="btn btn-sm btn-secondary editable-click-save" type="button" ><i class="cil-check"> </i></button>`;
    const valueFieldEdit = `
    <div class="input-group mb-3" style="display:none;" >
        <div class="input-group-prepend">
            <button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <div class="dropdown-menu">
                <a class="dropdown-item editable-click-change-input" href="#">Text Box</a>
                <a class="dropdown-item editable-click-change-collection" href="#">Collection</a>
            </div>
        </div>
        <input class="form-control dynamicFields" type="text"></input>
        ${confirmBtn}
    </div>`;
    const keyFieldEdit = `
    <div class="input-group mb-3" style="display:none;" >
        <input class="form-control dynamicFields" type="text"></input>
        ${confirmBtn}
    </div>`;

    if (data[k].keyEdit) {
      if (keyType == 'input') {
        keyField = `<a href="#" class="dynamicFields editable-click-val editable-click-input">${data[k].key}</a>
      ${keyFieldEdit}`;
      }
    } else {
      keyField = `<span class="editable-click-val">${data[k].key}</span>`;
    }

    if (data[k].valueEdit) {
      if (valueType == 'checkbox') {
        valueField = `<input class="dynamicFields editable-click-val" style="margin-left:0rem; margin-top:0.70rem;" type="checkbox" >`;
      } else if (valueType == 'input') {
        valueField = `<a href="#" class="dynamicFields editable-click-val editable-click-input">${data[k].value}</a>
      ${valueFieldEdit}
      `;
      } else if (valueType == 'collection') {
        valueField = `<a href="#" class="dynamicFields editable-click-val editable-click-collection">Select File</a>
      `;
      }
    } else {
      if (valueType == 'checkbox') {
        valueField = `<input class="dynamicFields editable-click-val" style="margin-left:0rem; margin-top:0.70rem;" type="checkbox" >`;
      } else if (valueType == 'collection') {
        valueField = `<a href="#" class="dynamicFields editable-click-val editable-click-collection">Select File</a>
        
      `;
      } else {
        valueField = `<span class="editable-click-val">${data[k].value}</span>`;
      }
    }

    let cols = '';
    cols += `<td style="width: 35%">${keyField}</td>`;
    cols += `<td style="width: 60%">${valueField}</td>`;

    if (mainSettings.delete) {
      cols += `<td style="width: 5%"><button class="btn btn-sm btn-danger df-delete-row" type="button" ><i class="cil-trash"> </i></button></td>`;
    }

    newRow.append(cols);
    el.find('tbody').append(newRow);
  }
}; //{
//   name: 'out',
//   class: 'customize',
//   insert: false,
//   delete: false
// }

const getDynamicFields = settings => {
  let classText = settings.class ? settings.class : '';
  let name = settings.name ? settings.name : '';
  let addBtn = '';

  if (settings.insert) {
    addBtn = `<button class="btn btn-sm btn-info df-add-row" type="button" >Add</button>`;
  }

  let ret = `
    <div class="dynamicFields ${classText}" nameAttr="${name}">
      <table class="table" style="margin-bottom:0px;">
        <thead></thead>
        <tbody></tbody>
      </table>
      ${addBtn}
    </div>
    `;
  return ret;
};

const bindEventHandlers = () => {
  $(document).on('click', `button.df-add-row`, async function (e) {
    const mainDiv = $(this).closest('div.dynamicFields');
    const editableRow = {
      key: 'editable key',
      value: 'editable value',
      keyType: 'input',
      valueType: 'input',
      keyEdit: true,
      valueEdit: true
    };
    let data = [];
    data.push(editableRow);
    insertDynamicFields(mainDiv, {
      clean: false,
      data: data
    });
  });
  $(document).on('click', `button.df-delete-row`, async function (e) {
    $(this).closest('tr').remove();
  });
  $(document).on('click', `a.editable-click-input`, async function (e) {
    e.preventDefault();
    const val = $(this).text();
    $(this).css('display', 'none');
    $(this).next().find('input').val(val);
    $(this).next().css('display', 'flex');
  });
  $(document).on('click', `button.editable-click-save`, async function (e) {
    e.preventDefault();
    const valueDiv = $(this).prev();
    const val = valueDiv.val();

    if (val) {
      $(this).closest('.input-group').css('display', 'none');
      $(this).closest('td').find('a.dynamicFields').text(val).css('display', 'inline');
      valueDiv.val('');
    } else {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoModal)('Please enter a value.');
    }
  });
  $(document).on('click', `.editable-click-change-input`, function (e) {
    e.preventDefault();
    $(this).closest('td').find('a.dynamicFields').addClass('editable-click-input').removeClass('editable-click-collection');
  });
  $(document).on('click', `.editable-click-change-collection`, function (e) {
    e.preventDefault();
    $(this).closest('.input-group').find('input.dynamicFields').val('Select File');
    $(this).closest('td').find('a.dynamicFields').addClass('editable-click-collection').removeClass('editable-click-input');
  });
  $(document).on('click', `a.editable-click-collection`, async function (e) {
    e.preventDefault();
    const selectBtn = this;
    const oldSelectedFiles = $(selectBtn).data('selected');
    const mainDiv = $(this).closest('div.dynamicFields');
    const mainSettings = mainDiv.data('settings');
    const projectID = mainSettings.projectID;
    let fileCollID = '';
    const fileCollData = (0,_dashboard__WEBPACK_IMPORTED_MODULE_1__.getCollectionByName)('file', projectID);
    if (fileCollData && fileCollData[0] && fileCollData[0]._id) fileCollID = fileCollData[0]._id;

    if (!fileCollID) {
      (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoModal)('File collection is not available in the project.');
      return;
    }

    const collTable = (0,_dashboard__WEBPACK_IMPORTED_MODULE_1__.getCollectionTable)(fileCollID, 'modal');
    const tableID = `modal-${fileCollID}`;
    $('#crudModalTitle2').text(`Select Files`);
    $('#crudModalYes2').text('Select');
    $('#crudModalBody2').empty();
    $('#crudModalBody2').append(collTable);
    $('#crudModal2').off();
    await (0,_dashboard__WEBPACK_IMPORTED_MODULE_1__.refreshDataTables)(tableID, fileCollID, 'file', projectID);
    $('#crudModal2').on('show.coreui.modal', function (e) {
      const table = $(`#${tableID}`).DataTable();
      table.column(0).checkboxes.deselect();

      if (oldSelectedFiles && oldSelectedFiles.length) {
        const indexes = table.rows(function (idx, data, node) {
          return oldSelectedFiles.includes(data._id);
        }).indexes();
        table.cells(indexes, 0).checkboxes.select();
      }
    });
    $('#crudModal2').on('click', '#crudModalYes2', function (e) {
      e.preventDefault();
      const table = $(`#${tableID}`).DataTable();
      const tableData = table.rows().data();
      const rows_selected = table.column(0).checkboxes.selected();
      const selectedData = tableData.filter(f => rows_selected.indexOf(f._id) >= 0);
      let selectedFileIDs = [];

      for (let k = 0; k < selectedData.length; k++) {
        selectedFileIDs.push(selectedData[k]._id);
      }

      if (rows_selected.length === 0) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_0__.showInfoModal)('Please click checkboxes to select items.');
      } else if (rows_selected.length > 0) {
        if (rows_selected.length === 1) {
          $(selectBtn).text(`${rows_selected.length} file selected`);
        } else {
          $(selectBtn).text(`${rows_selected.length} files selected`);
        }

        $(selectBtn).data('selected', selectedFileIDs);
        $('#crudModal2').modal('hide');
      }
    });
    $('#crudModal2').modal('show');
  });
};

const createDynamicFields = (el, settings) => {
  // bind global event binders
  if (!$s.init) {
    bindEventHandlers();
    $s.init = true;
  }

  const dynamicDiv = getDynamicFields(settings);
  const dynamicDivEl = $(dynamicDiv);
  dynamicDivEl.data('settings', settings);
  $(el).after(dynamicDivEl);
  $(el).css('display', 'none');
  $(el).addClass('customized');
  return dynamicDivEl;
};
const getDynamicFieldsData = el => {
  const allRows = $(el).find('tr');
  let data = [];

  for (let k = 0; k < allRows.length; k++) {
    const inputEl = $(allRows[k]).find('.editable-click-val');
    let obj = {};

    for (let i = 0; i < inputEl.length; i++) {
      let val = '';

      if ($(inputEl[i]).is('a') || $(inputEl[i]).is('span')) {
        val = $(inputEl[i]).text();

        if ($(inputEl[i]).hasClass('editable-click-collection')) {
          const selectedFiles = $(inputEl[i]).data('selected');
          val = {};
          val['!file_id'] = selectedFiles;
        }
      } else if ($(inputEl[i]).is('input')) {
        const type = $(inputEl[i]).attr('type');
        if (type == 'input') val = $(inputEl[i]).val();

        if (type == 'checkbox') {
          if ($(inputEl[i]).is(':checked')) {
            val = true;
          } else {
            val = false;
          }
        }
      }

      if (i === 0) obj['key'] = val;
      if (i === 1) obj['value'] = val;
    }

    data.push(obj);
  }

  let res = {};

  for (let i = 0; i < data.length; i++) {
    res[data[i]['key']] = data[i]['value'];
  }

  console.log(res);
  return res;
};

/***/ }),

/***/ "./public/js/formModules/fileForm.js":
/*!*******************************************!*\
  !*** ./public/js/formModules/fileForm.js ***!
  \*******************************************/
/*! namespace exports */
/*! export convertFileFormObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepFileForm [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "convertFileFormObj": () => /* binding */ convertFileFormObj,
/* harmony export */   "prepFileForm": () => /* binding */ prepFileForm
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _formModules_crudData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../formModules/crudData */ "./public/js/formModules/crudData.js");
/* eslint-disable */
;


let $s = {
  datatables: {},
  data: {},
  collections: {},
  fields: {},
  projects: {},
  server: {}
};

const updateDropdownOptions = (dropdown, data) => {
  console.log(dropdown);
  console.log(data);
  dropdown.empty();

  for (var k = 0; k < data.length; k++) {
    if (data[k]['_id'] && data[k]['name']) {
      dropdown.append($('<option></option>').val(data[k]['_id']).html(data[k]['name']));
    }
  }
};

const getFilePatternDiv = () => {
  return `<div class="form-group row">
  <label class="col-md-3 col-form-label text-right">File Pattern</label>
  <div class="col-md-9">
      <div class="filePattern customize" style="display: block;">
      <div class="form-group row">
          <div class="col-sm-6 singlepatternDiv" style="display:none;">
            <div class="row">
              <p class="col-sm-5 col-form-label">Filename Extension <span><a data-toggle="tooltip" data-placement="bottom" title="Please enter end of the file name to filter files (eg. fastq or fq.gz). This pattern will be removed from the file names to fill 'Names' field in the table below."><i class='glyphicon glyphicon-info-sign'></i></a></span> </p>
              <div class="col-sm-7">
                  <input type="text" class="form-control no-hide" id="single_pattern" name="single_pattern" value="">
              </div>
            </div>
              <div style="margin-top:8px;">
                  <select id="singleList" type="select-multiple" multiple class="form-control" size="9"></select>
              </div>
          </div>
          <div class="col-sm-6 forwardpatternDiv" style="display:none;">
            <div class="row">
              <p class="col-sm-5 col-form-label text-right">R1 Pattern <span><a data-toggle="tooltip" data-placement="bottom" title="Please enter pattern for forward reads eg. _R1"><i class='glyphicon glyphicon-info-sign'></i></a></span> </p>
              <div class="col-sm-7">
                  <input type="text" class="form-control no-hide" id="forward_pattern" name="forward_pattern" value="_R1">
              </div>
            </div>
              <div style="margin-top:8px; margin-bottom:12px;">
                  <select id="forwardList" type="select-multiple" multiple class="form-control" size="9"></select>
              </div>
          </div>
          <div class="col-sm-6 reversepatternDiv" style="display:none;">
            <div class="row">
              <p class="col-sm-5 col-form-label text-right">R2 Pattern <span><a data-toggle="tooltip" data-placement="bottom" title="Please enter pattern for reverse reads eg. _R2"><i class='glyphicon glyphicon-info-sign'></i></a></span> </p>
              <div class="col-sm-7">
                  <input type="text" class="form-control no-hide" id="reverse_pattern" name="reverse_pattern" value="_R2">
              </div>
            </div>
              <div style="margin-top:8px; margin-bottom:12px;">
                  <select id="reverseList" type="select-multiple" multiple class="form-control" size="9"></select>
              </div>
          </div>
          <div class="col-sm-6 r3patternDiv" style="display:none;">
            <div class="row">
              <p class="col-sm-5 col-form-label text-right">R3 Pattern <span><a data-toggle="tooltip" data-placement="bottom" title="Please enter pattern for reads eg. _R3"><i class='glyphicon glyphicon-info-sign'></i></a></span> </p>
              <div class="col-sm-7">
                  <input type="text" class="form-control no-hide" id="r3_pattern" name="r3_pattern" value="_R3">
              </div>
            </div>
              <div style="margin-top:8px;">
                  <select id="r3List" type="select-multiple" multiple class="form-control" size="9"></select>
              </div>
          </div>
          <div class="col-sm-6 r4patternDiv" style="display:none;">
            <div class="row">
              <p class="col-sm-5 col-form-label text-right">R4 Pattern <span><a data-toggle="tooltip" data-placement="bottom" title="Please enter pattern for reads eg. _R4"><i class='glyphicon glyphicon-info-sign'></i></a></span> </p>
              <div class="col-sm-7">
                  <input type="text" class="form-control no-hide" id="r4_pattern" name="r4_pattern" value="_R4">
              </div>
            </div>
              <div style="margin-top:8px;">
                  <select id="r4List" type="select-multiple" multiple class="form-control" size="9"></select>
              </div>
          </div>
      </div>
  <div class="form-group patternButs" style="display:none;">
          <div class="float-right">
              <span class="pull-right" style="padding-top:7px; padding-left:5px;"><a data-toggle="tooltip" data-placement="bottom" title="In order to merge multiple files, first select the files and then click 'Add Selected Files' button. If you don't need to merge files, you can simply click 'Add All Files' button."><i class='glyphicon glyphicon-info-sign'></i></a></span>
              <button id="clear_selection" type="button" class="btn btn-warning pull-right" style="margin-right:3px;" ">Reset</button>
              <button id="smart_add_file" type="button" class="btn btn-primary pull-right" style="margin-right:3px;" >Add All Files</button>
              <button id="add_selection_file" type="button" class="btn btn-primary pull-right" >Add Selected Files</button>
          </div>
  </div>
  <div class="form-group patternTable" style="display:none;">
      <div class="form-group" style="margin-top:60px;">
          <table id="selectedSamples" class="table table-striped compact table-bordered display" cellspacing="0" width="100%">
              <thead>
                  <tr>
                      <th scope="col">Name</th>
                      <th scope="col">Files Used</th>
                      <th scope="col">Directory</th>
                      <th scope="col" style="width:20px;">Remove</th>
                      <th scope="col">Amz_key</th>
                      <th scope="col">Goog_key</th>
                  </tr>
              </thead>
              <tbody></tbody>
          </table>
      </div>
  </div>   
  </div>   
      
  </div>
</div>`;
}; //use array of item to fill select element


function fillArray2Select(arr, id, clean) {
  if (clean === true) {
    $(id).empty();
  }

  for (var i = 0; i < arr.length; i++) {
    var param = arr[i];
    var optionGroup = new Option(param, param);
    $(id).append(optionGroup);
  }
}

function resetPatternList() {
  fillArray2Select([], '#singleList', true);
  fillArray2Select([], '#reverseList', true);
  fillArray2Select([], '#forwardList', true);
  fillArray2Select([], '#r3List', true);
  fillArray2Select([], '#r4List', true);
}

const viewDirButSearch = async (dir, runEnvDropdownEl) => {
  const env = $(runEnvDropdownEl).val();

  if (!env || !env.split('-')[0] || !env.split('-')[1]) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please choose File Environment before search.');
    return;
  }

  const profileType = env.split('-')[0];
  const profileId = env.split('-')[1];
  var amazon_cre_id = '';
  var google_cre_id = '';
  var warnUser = false;

  if (dir) {
    if (dir.match(/:\/\//)) {
      var lastChr1 = dir.slice(-1);
      var lastChr2 = dir.slice(-2);

      if (lastChr1 == '/' && lastChr2 != '//') {
        dir = dir.substring(0, dir.length - 1);
      }
    }

    console.log(dir);

    if (dir.match(/s3:/i)) {
      $('#mRunAmzKeyS3').parents('.row').css('display', 'flex');
      amazon_cre_id = $('#mRunAmzKeyS3').val();

      if (!amazon_cre_id) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please select Amazon Keys to search files in your S3 storage.');
        warnUser = true;
      }
    } else if (dir.match(/gs:/i)) {
      $('#mRunGoogKeyGS').parents('.row').css('display', 'flex');
      google_cre_id = $('#mRunGoogKeyGS').val();

      if (!google_cre_id) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please select Google Keys to search files in your Google storage.');
        warnUser = true;
      }
    }

    if (!warnUser) {
      if (!$s.server.url_server) {
        (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)('Please choose server before search.');
        return;
      }

      let body = {
        dir,
        profileType,
        profileId,
        amazon_cre_id,
        google_cre_id
      };
      const method = 'GET'; // method for Dnext query

      const url = `${$s.server.url_server}/api/service.php?data=getLsDir`;
      const ls = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
        method: 'POST',
        url: `/api/v1/misc/getDnextData`,
        data: {
          body,
          method,
          url
        }
      });
      console.log('ls', ls);

      if (ls && ls.data && ls.data.data && ls.data.data.data) {
        let dirList = ls.data.data.data;
        dirList = $.trim(dirList);
        console.log(dirList);
        var fileArr = [];
        var errorAr = [];

        if (dir.match(/s3:/i) || dir.match(/gs:/i)) {
          var raw = dirList.split('\n');

          for (var i = 0; i < raw.length; i++) {
            var filePath = raw[i].split(' ').pop();

            if (filePath) {
              if (filePath.toLowerCase() === dir.toLowerCase() || filePath.toLowerCase() === dir.toLowerCase() + '/') {
                console.log('skip', filePath);
                continue;
              }

              if (filePath.match(/s3:/i) || filePath.match(/gs:/i)) {
                var allBlock = filePath.split('/');

                if (filePath.substr(-1) == '/') {
                  var lastBlock = allBlock[allBlock.length - 2];
                } else {
                  var lastBlock = allBlock[allBlock.length - 1];
                }

                fileArr.push(lastBlock);
              } else {
                errorAr.push(raw[i]);
              }
            } else {
              errorAr.push(raw[i]);
            }
          }
        } else if (dir.match(/:\/\//)) {
          fileArr = dirList.split('\n');
          errorAr = fileArr.filter(line => line.match(/:/));
          fileArr = fileArr.filter(line => !line.match(/:/));
        } else {
          fileArr = dirList.split('\n');
          errorAr = fileArr.filter(line => line.match(/ls:/));
          fileArr = fileArr.filter(line => !line.match(/:/));
        }

        console.log(fileArr);
        console.log(errorAr);

        if (fileArr.length > 0) {
          var copiedList = fileArr.slice();
          copiedList.unshift('..');
          fillArray2Select(copiedList, '#viewDir', true);
          $('#viewDir').data('fileArr', fileArr);
          $('#viewDir').data('fileDir', dir);
          var amzKey = '';
          var googKey = '';

          if (dir.match(/s3:/i)) {
            amzKey = $('#mRunAmzKeyS3').val();
          }

          if (dir.match(/gs:/i)) {
            googKey = $('#mRunGoogKeyGS').val();
          }

          $('#viewDir').data('amzKey', amzKey);
          $('#viewDir').data('googKey', googKey);
          $('#collection_type').trigger('change');
        } else {
          if (errorAr.length > 0) {
            var errTxt = errorAr.join(' ');
            (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(errTxt);
            resetPatternList();
          } else {
            fillArray2Select(['Files Not Found.'], '#viewDir', true);
            resetPatternList();
          }
        }
      } else {
        fillArray2Select(['Files Not Found.'], '#viewDir', true);
        resetPatternList();
      }
    } else {
      fillArray2Select(['Files Not Found.'], '#viewDir', true);
      resetPatternList();
    }

    $('#viewDir').css('display', 'inline');
    $('#viewDirDiv').css('display', 'block');
  } else {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)("Please enter 'File Location' to search files.");
  }
};

const bindEventHandlers = () => {
  const addSelection = function () {
    var collection_type = $('#collection_type').val();

    if (collection_type == 'single') {
      var current_selection = document.getElementById('singleList').options;
      var regex = $('#single_pattern').val();
      var file_string = '';

      for (var x = 0; x < current_selection.length; x++) {
        if (current_selection[x].selected) {
          file_string += current_selection[x].value + ' | ';
          recordDelList('#singleList', current_selection[x].value, 'del');
          $('#singleList option[value="' + current_selection[x].value + '"]')[0].remove();
          x--;
        }
      }
    } else if (collection_type == 'pair') {
      var current_selectionF = document.getElementById('forwardList').options;
      var current_selectionR = document.getElementById('reverseList').options;
      var regex = $('#forward_pattern').val();
      var file_string = '';

      for (var x = 0; x < current_selectionF.length; x++) {
        if (current_selectionF[x].selected && current_selectionR[x].selected) {
          file_string += current_selectionF[x].value + ',' + current_selectionR[x].value + ' | ';
          recordDelList('#forwardList', current_selectionF[x].value, 'del');
          recordDelList('#reverseList', current_selectionR[x].value, 'del');
          $('#forwardList option[value="' + current_selectionF[x].value + '"]')[0].remove();
          $('#reverseList option[value="' + current_selectionR[x].value + '"]')[0].remove();
          x--;
        }
      }
    } else if (collection_type == 'triple') {
      var current_selectionF = document.getElementById('forwardList').options;
      var current_selectionR = document.getElementById('reverseList').options;
      var current_selectionR3 = document.getElementById('r3List').options;
      var regex = $('#forward_pattern').val();
      var file_string = '';

      for (var x = 0; x < current_selectionF.length; x++) {
        if (current_selectionF[x].selected && current_selectionR[x].selected && current_selectionR3[x].selected) {
          file_string += current_selectionF[x].value + ',' + current_selectionR[x].value + ',' + current_selectionR3[x].value + ' | ';
          recordDelList('#forwardList', current_selectionF[x].value, 'del');
          recordDelList('#reverseList', current_selectionR[x].value, 'del');
          recordDelList('#r3List', current_selectionR3[x].value, 'del');
          $('#forwardList option[value="' + current_selectionF[x].value + '"]')[0].remove();
          $('#reverseList option[value="' + current_selectionR[x].value + '"]')[0].remove();
          $('#r3List option[value="' + current_selectionR3[x].value + '"]')[0].remove();
          x--;
        }
      }
    } else if (collection_type == 'quadruple') {
      var current_selectionF = document.getElementById('forwardList').options;
      var current_selectionR = document.getElementById('reverseList').options;
      var current_selectionR3 = document.getElementById('r3List').options;
      var current_selectionR4 = document.getElementById('r4List').options;
      var regex = $('#forward_pattern').val();
      var file_string = '';

      for (var x = 0; x < current_selectionF.length; x++) {
        if (current_selectionF[x].selected && current_selectionR[x].selected && current_selectionR3[x].selected && current_selectionR4[x].selected) {
          file_string += current_selectionF[x].value + ',' + current_selectionR[x].value + ',' + current_selectionR3[x].value + ',' + current_selectionR4[x].value + ' | ';
          recordDelList('#forwardList', current_selectionF[x].value, 'del');
          recordDelList('#reverseList', current_selectionR[x].value, 'del');
          recordDelList('#r3List', current_selectionR3[x].value, 'del');
          recordDelList('#r4List', current_selectionR4[x].value, 'del');
          $('#forwardList option[value="' + current_selectionF[x].value + '"]')[0].remove();
          $('#reverseList option[value="' + current_selectionR[x].value + '"]')[0].remove();
          $('#r3List option[value="' + current_selectionR3[x].value + '"]')[0].remove();
          $('#r4List option[value="' + current_selectionR4[x].value + '"]')[0].remove();
          x--;
        }
      }
    }

    if (file_string) {
      file_string = file_string.substring(0, file_string.length - 3);

      if (file_string != '') {
        if (regex == '') {
          var name = file_string;
        } else {
          var name = file_string.split(regex)[0];
        }

        var name = name.split(' | ')[0].split('.')[0];
        var input = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', ['id', 'type', 'class', 'value'], [name, 'text', 'updateNameTable', name]);
        var button_div = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', ['class'], ['text-center']);
        var remove_button = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', ['class', 'type'], ['btn btn-sm btn-danger removeRowSelTable', 'button']);
        var icon = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('i', ['class'], ['cil-x']);
        remove_button.appendChild(icon);
        button_div.appendChild(remove_button);
        var fileDir = $('#viewDir').data('fileDir');
        var mRunAmzKeyS3 = '';

        if (fileDir.match(/s3:/i)) {
          mRunAmzKeyS3 = $('#viewDir').data('amzKey');
        }

        var mRunGoogKeyGS = '';

        if (fileDir.match(/gs:/i)) {
          mRunGoogKeyGS = $('#viewDir').data('googKey');
        }

        $s.datatables.selectedSamplesTable.fnAddData([input.outerHTML, file_string, fileDir, button_div.outerHTML, mRunAmzKeyS3, mRunGoogKeyGS]);
      }
    }
  };

  const clearSelection = function () {
    $s.datatables.selectedSamplesTable.fnClearTable();
    $('#forwardList').html('');
    $('#reverseList').html('');
    $('#r3List').html('');
    $('#r4List').html('');
    $('#singleList').html('');
    recordDelList('#forwardList', null, 'reset');
    recordDelList('#reverseList', null, 'reset');
    recordDelList('#r3List', null, 'reset');
    recordDelList('#r4List', null, 'reset');
    recordDelList('#singleList', null, 'reset');
    $('#collection_type').trigger('change');
  };

  const smartSelection = function () {
    var collection_type = $('#collection_type').val();

    if (collection_type == 'single') {
      var files_select1 = document.getElementById('singleList').options;
      var regex1 = $('#single_pattern').val();
    } else {
      var files_select1 = document.getElementById('forwardList').options;
      var files_select2 = document.getElementById('reverseList').options;
      var files_select3 = document.getElementById('r3List').options;
      var files_select4 = document.getElementById('r4List').options;
      var regex1 = $('#forward_pattern').val();
      var regex2 = $('#reverse_pattern').val();
      var regex3 = $('#r3_pattern').val();
      var regex4 = $('#r4_pattern').val();
    }

    while (collection_type == 'single' && files_select1.length != 0 || collection_type == 'pair' && files_select1.length != 0 && files_select2.length != 0 || collection_type == 'triple' && files_select1.length != 0 && files_select2.length != 0 && files_select3.length != 0 || collection_type == 'quadruple' && files_select1.length != 0 && files_select2.length != 0 && files_select3.length != 0 && files_select4.length != 0) {
      var file_string = ''; //  var file_regex = new RegExp(regex_string);

      if (collection_type == 'single') {
        //	use regex to find the values before the pivot
        if (regex1 === '') {
          regex1 = '.';
        }

        var regex_string = files_select1[0].value.split(regex1)[0];

        for (var x = 0; x < files_select1.length; x++) {
          var prefix = files_select1[x].value.split(regex1)[0];

          if (regex_string === prefix) {
            file_string += files_select1[x].value + ' | ';
            recordDelList('#singleList', files_select1[x].value, 'del');
            $('#singleList option[value="' + files_select1[x].value + '"]')[0].remove();
            x--;
          }
        }
      } else if (collection_type == 'pair') {
        var regex_string1 = files_select1[0].value.split(regex1)[0];
        var regex_string2 = files_select2[0].value.split(regex2)[0];

        for (var x = 0; x < files_select1.length; x++) {
          var prefix1 = '';
          var prefix2 = '';
          if (files_select1[x]) prefix1 = files_select1[x].value.split(regex1)[0];
          if (files_select2[x]) prefix2 = files_select2[x].value.split(regex2)[0];

          if (regex_string1 === prefix1 && regex_string2 === prefix2) {
            file_string += files_select1[x].value + ',' + files_select2[x].value + ' | ';
            recordDelList('#forwardList', files_select1[x].value, 'del');
            recordDelList('#reverseList', files_select2[x].value, 'del');
            $('#forwardList option[value="' + files_select1[x].value + '"]')[0].remove();
            $('#reverseList option[value="' + files_select2[x].value + '"]')[0].remove();
            x--;
          }
        }
      } else if (collection_type == 'triple') {
        var regex_string1 = files_select1[0].value.split(regex1)[0];
        var regex_string2 = files_select2[0].value.split(regex2)[0];
        var regex_string3 = files_select3[0].value.split(regex3)[0];

        for (var x = 0; x < files_select1.length; x++) {
          var prefix1 = '';
          var prefix2 = '';
          var prefix3 = '';
          if (files_select1[x]) prefix1 = files_select1[x].value.split(regex1)[0];
          if (files_select2[x]) prefix2 = files_select2[x].value.split(regex2)[0];
          if (files_select3[x]) prefix3 = files_select3[x].value.split(regex3)[0];

          if (regex_string1 === prefix1 && regex_string2 === prefix2 && regex_string3 === prefix3) {
            file_string += files_select1[x].value + ',' + files_select2[x].value + ',' + files_select3[x].value + ' | ';
            recordDelList('#forwardList', files_select1[x].value, 'del');
            recordDelList('#reverseList', files_select2[x].value, 'del');
            recordDelList('#r3List', files_select3[x].value, 'del');
            $('#forwardList option[value="' + files_select1[x].value + '"]')[0].remove();
            $('#reverseList option[value="' + files_select2[x].value + '"]')[0].remove();
            $('#r3List option[value="' + files_select3[x].value + '"]')[0].remove();
            x--;
          }
        }
      } else if (collection_type == 'quadruple') {
        var regex_string1 = files_select1[0].value.split(regex1)[0];
        var regex_string2 = files_select2[0].value.split(regex2)[0];
        var regex_string3 = files_select3[0].value.split(regex3)[0];
        var regex_string4 = files_select4[0].value.split(regex4)[0];

        for (var x = 0; x < files_select1.length; x++) {
          var prefix1 = '';
          var prefix2 = '';
          var prefix3 = '';
          var prefix4 = '';
          if (files_select1[x]) prefix1 = files_select1[x].value.split(regex1)[0];
          if (files_select2[x]) prefix2 = files_select2[x].value.split(regex2)[0];
          if (files_select3[x]) prefix3 = files_select3[x].value.split(regex3)[0];
          if (files_select4[x]) prefix4 = files_select4[x].value.split(regex4)[0];

          if (regex_string1 === prefix1 && regex_string2 === prefix2 && regex_string3 === prefix3 && regex_string4 === prefix4) {
            file_string += files_select1[x].value + ',' + files_select2[x].value + ',' + files_select3[x].value + ',' + files_select4[x].value + ' | ';
            recordDelList('#forwardList', files_select1[x].value, 'del');
            recordDelList('#reverseList', files_select2[x].value, 'del');
            recordDelList('#r3List', files_select3[x].value, 'del');
            recordDelList('#r4List', files_select4[x].value, 'del');
            $('#forwardList option[value="' + files_select1[x].value + '"]')[0].remove();
            $('#reverseList option[value="' + files_select2[x].value + '"]')[0].remove();
            $('#r3List option[value="' + files_select3[x].value + '"]')[0].remove();
            $('#r4List option[value="' + files_select4[x].value + '"]')[0].remove();
            x--;
          }
        }
      }

      file_string = file_string.substring(0, file_string.length - 3);

      if (regex1 === '') {
        var name = file_string;
      } else {
        var name = file_string.split(regex1)[0];
      }

      var name = name.split(' | ')[0].split('.')[0];
      var input = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('input', ['id', 'type', 'class', 'value'], [name, 'text', 'updateNameTable', name]);
      var button_div = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', ['class'], ['text-center']);
      var remove_button = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('button', ['class', 'type'], ['btn btn-sm btn-danger text-center removeRowSelTable', 'button']);
      var icon = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.createElement)('i', ['class'], ['cil-x']);
      remove_button.appendChild(icon);
      button_div.appendChild(remove_button);
      var fileDir = $('#viewDir').data('fileDir');
      var mRunAmzKeyS3 = '';

      if (fileDir.match(/s3:/i)) {
        mRunAmzKeyS3 = $('#viewDir').data('amzKey');
      }

      var mRunGoogKeyGS = '';

      if (fileDir.match(/gs:/i)) {
        mRunGoogKeyGS = $('#viewDir').data('googKey');
      }

      $s.datatables.selectedSamplesTable.fnAddData([input.outerHTML, file_string, fileDir, button_div.outerHTML, mRunAmzKeyS3, mRunGoogKeyGS]);
    }
  };

  $(document).on('click', '.removeRowSelTable', function () {
    var collection_type = $('#collection_type').val();
    removeRowSelTable(this, collection_type);
  });
  $(document).on('change', '.updateNameTable', function () {
    updateNameTable(this);
  });
  $(document).on('click', '#add_selection_file', function () {
    addSelection();
  });
  $(document).on('click', '#smart_add_file', function () {
    smartSelection();
  });
  $(document).on('click', '#clear_selection', function () {
    clearSelection();
  });
  $(document).on('change', '#collection_type', function () {
    var collection_type = $(this).val();

    if (collection_type == 'pair') {
      $('.r3patternDiv').css('display', 'none');
      $('.r4patternDiv').css('display', 'none');
      $('.forwardpatternDiv').css('display', 'inline');
      $('.reversepatternDiv').css('display', 'inline');
      $('.singlepatternDiv').css('display', 'none');
      $('.patternButs').css('display', 'inline');
      $('.patternTable').css('display', 'inline');
      $('#forward_pattern').trigger('keyup');
      $('#reverse_pattern').trigger('keyup');
    } else if (collection_type == 'single') {
      $('.r3patternDiv').css('display', 'none');
      $('.r4patternDiv').css('display', 'none');
      $('.patternButs').css('display', 'inline');
      $('.patternTable').css('display', 'inline');
      $('.singlepatternDiv').css('display', 'inline');
      $('.forwardpatternDiv').css('display', 'none');
      $('.reversepatternDiv').css('display', 'none');
      $('#single_pattern').trigger('keyup');
    } else if (collection_type == 'triple') {
      $('.r3patternDiv').css('display', 'inline');
      $('.r4patternDiv').css('display', 'none');
      $('.forwardpatternDiv').css('display', 'inline');
      $('.reversepatternDiv').css('display', 'inline');
      $('.singlepatternDiv').css('display', 'none');
      $('.patternButs').css('display', 'inline');
      $('.patternTable').css('display', 'inline');
      $('#forward_pattern').trigger('keyup');
      $('#reverse_pattern').trigger('keyup');
      $('#r3_pattern').trigger('keyup');
    } else if (collection_type == 'quadruple') {
      $('.r3patternDiv').css('display', 'inline');
      $('.r4patternDiv').css('display', 'inline');
      $('.forwardpatternDiv').css('display', 'inline');
      $('.reversepatternDiv').css('display', 'inline');
      $('.singlepatternDiv').css('display', 'none');
      $('.patternButs').css('display', 'inline');
      $('.patternTable').css('display', 'inline');
      $('#forward_pattern').trigger('keyup');
      $('#reverse_pattern').trigger('keyup');
      $('#r3_pattern').trigger('keyup');
      $('#r4_pattern').trigger('keyup');
    }

    $.fn.dataTable.tables({
      visible: true,
      api: true
    }).columns.adjust();
  });

  var syncSelectedOpts = function (allItems, selItems, targetID) {
    var otherOpt = $(targetID + ' > option');
    otherOpt.prop('selected', false);

    for (var i = 0; i < selItems.length; i++) {
      var order = allItems.indexOf(selItems[i]);

      if (otherOpt[order]) {
        $(otherOpt[order]).prop('selected', true);
      }
    }
  };

  $(document).on('click', '#forwardList', function () {
    var allItems = [];
    $('#forwardList > option').each(function () {
      allItems.push(this.value);
    });
    var selItems = $('#forwardList').val();
    syncSelectedOpts(allItems, selItems, '#reverseList');
    syncSelectedOpts(allItems, selItems, '#r3List');
    syncSelectedOpts(allItems, selItems, '#r4List');
  });
  $(document).on('click', '#reverseList', function () {
    var allItems = [];
    $('#reverseList > option').each(function () {
      allItems.push(this.value);
    });
    var selItems = $('#reverseList').val();
    syncSelectedOpts(allItems, selItems, '#forwardList');
    syncSelectedOpts(allItems, selItems, '#r3List');
    syncSelectedOpts(allItems, selItems, '#r4List');
  });
  $(document).on('click', '#r3List', function () {
    var allItems = [];
    $('#r3List > option').each(function () {
      allItems.push(this.value);
    });
    var selItems = $('#r3List').val();
    syncSelectedOpts(allItems, selItems, '#forwardList');
    syncSelectedOpts(allItems, selItems, '#reverseList');
    syncSelectedOpts(allItems, selItems, '#r4List');
  });
  $(document).on('click', '#r4List', function () {
    var allItems = [];
    $('#r4List > option').each(function () {
      allItems.push(this.value);
    });
    var selItems = $('#r4List').val();
    syncSelectedOpts(allItems, selItems, '#forwardList');
    syncSelectedOpts(allItems, selItems, '#reverseList');
    syncSelectedOpts(allItems, selItems, '#r3List');
  });

  var syncRegexOptions = function (collection_type, optsObjs) {
    var data = [];
    $.each(optsObjs, function (el) {
      if (optsObjs[el]) {
        optsObjs[el] = optsObjs[el].sort();
      }
    });
    var regexObj = $.extend(true, {}, optsObjs); // clean regex pattern from array options

    $.each(regexObj, function (el) {
      if (regexObj[el]) {
        var pattern = '';

        if (el == '#forwardList') {
          pattern = $('#forward_pattern').val();
        } else if (el == '#reverseList') {
          pattern = $('#reverse_pattern').val();
        } else if (el == '#r3List') {
          pattern = $('#r3_pattern').val();
        } else if (el == '#r4List') {
          pattern = $('#r4_pattern').val();
        }

        for (var i = 0; i < regexObj[el].length; i++) {
          regexObj[el][i] = regexObj[el][i].split(pattern).join('');
        }
      }
    });

    if (collection_type == 'pair') {
      data = [regexObj['#forwardList'], regexObj['#reverseList']];
    } else if (collection_type == 'triple') {
      data = [regexObj['#forwardList'], regexObj['#reverseList'], regexObj['#r3List']];
    } else if (collection_type == 'quadruple') {
      data = [regexObj['#forwardList'], regexObj['#reverseList'], regexObj['#r3List'], regexObj['#r4List']];
    }

    var intersection = data.reduce((a, b) => a.filter(c => b.includes(c)));
    var reorderObj = {};
    var reorderCheck = false; // if one item is reordered than enable this

    $.each(regexObj, function (el) {
      if (!reorderObj[el]) reorderObj[el] = [];
      var pushLast = [];

      for (var i = 0; i < regexObj[el].length; i++) {
        var index = intersection.indexOf(regexObj[el][i]);
        var item = optsObjs[el][i];

        if (index < 0) {
          pushLast.push(item);
          reorderCheck = true;
        } else {
          reorderObj[el].push(item);
        }
      }

      if (pushLast.length) reorderObj[el] = reorderObj[el].concat(pushLast);
    });
    console.log(reorderObj);

    if (reorderCheck) {
      $.each(reorderObj, function (el) {
        fillArray2Select(reorderObj[el], el, true);
      });
    }

    return reorderCheck;
  };

  function updateFileArea(selectId, pattern) {
    var fileOrj = $('#viewDir').data('fileArr');

    if (fileOrj) {
      var fileAr = fileOrj.slice(); //clone list

      var delArr = $(selectId).data('samples'); // files that are selected are kept in delArr and removed before loading fillArray2Select

      if (delArr && delArr.length) {
        for (var i = 0; i < delArr.length; i++) {
          var index = fileAr.indexOf(delArr[i]);

          if (index > -1) {
            fileAr.splice(index, 1);
          }
        }
      }

      console.log('fileAr', fileAr);

      if (fileAr) {
        // keeps $ and ^ for regex
        var cleanRegEx = function (pat) {
          return pat.replace(/[-\/\\*+?.()|[\]{}]/g, '\\$&');
        };

        var patternReg = cleanRegEx(pattern);
        var reg = new RegExp(patternReg);
        var filteredAr = fileAr.filter(line => line.match(reg));

        if (filteredAr.length > 0) {
          //xxxxxxxxxxxx
          var reorderCheck = false;
          var collection_type = $('#collection_type').val();

          if (collection_type != 'single') {
            var syncOtherFieldOptions = function (collection_type, selectId, filteredAr) {
              var fieldsArray = [];
              var optsObjs = {};
              optsObjs[selectId] = filteredAr;

              if (collection_type == 'pair') {
                fieldsArray = ['#forwardList', '#reverseList'];
              } else if (collection_type == 'triple') {
                fieldsArray = ['#forwardList', '#reverseList', '#r3List'];
              } else if (collection_type == 'quadruple') {
                fieldsArray = ['#forwardList', '#reverseList', '#r3List', '#r4List'];
              }

              var index = fieldsArray.indexOf(selectId);
              fieldsArray.splice(index, 1);

              for (var i = 0; i < fieldsArray.length; i++) {
                var allopts = [];
                $(fieldsArray[i] + ' > option').each(function () {
                  if (!this.value.match(/no file/i)) allopts.push(this.value);
                });
                optsObjs[fieldsArray[i]] = allopts;
              } // return the latest options after update (includes latest filteredAr)
              // {#forwardList: ["test.R1.fastq"], #r3List:["test.R3.fastq"]}


              console.log(optsObjs);
              var forwardList = optsObjs['#forwardList'];
              var reverseList = optsObjs['#reverseList'];
              var r3List = optsObjs['#r3List'];
              var r4List = optsObjs['#r4List'];

              if (collection_type == 'pair' && forwardList.length && reverseList.length || collection_type == 'triple' && forwardList.length && reverseList.length && r3List.length || collection_type == 'quadruple' && forwardList.length && reverseList.length && r3List.length && r4List.length) {
                reorderCheck = syncRegexOptions(collection_type, optsObjs);
              }
            };

            syncOtherFieldOptions(collection_type, selectId, filteredAr);
          }

          if (!reorderCheck) fillArray2Select(filteredAr, selectId, true);
        } else {
          fillArray2Select(['No files matching the pattern.'], selectId, true);
        }
      } else {
        fillArray2Select(['No files matching the pattern.'], selectId, true);
      }
    }
  }

  window.timeoutID = {};
  window.timeoutID['#forward_pattern'] = 0;
  window.timeoutID['#reverse_pattern'] = 0;
  window.timeoutID['#r3_pattern'] = 0;
  window.timeoutID['#r4_pattern'] = 0;
  window.timeoutID['#single_pattern'] = 0;

  function updateFileList(selectId, pattern) {
    if (window.timeoutID[selectId]) clearTimeout(window.timeoutID[selectId]);
    window.timeoutID[selectId] = setTimeout(function () {
      updateFileArea(selectId, pattern);
    }, 500);
  }

  $(document).on('keyup', '#forward_pattern', function () {
    updateFileList('#forwardList', $('#forward_pattern').val());
  });
  $(document).on('keyup', '#reverse_pattern', function () {
    updateFileList('#reverseList', $('#reverse_pattern').val());
  });
  $(document).on('keyup', '#r3_pattern', function () {
    updateFileList('#r3List', $('#r3_pattern').val());
  });
  $(document).on('keyup', '#r4_pattern', function () {
    updateFileList('#r4List', $('#r4_pattern').val());
  });
  $(document).on('keyup', '#single_pattern', function () {
    var pattern = $(this).val();
    updateFileList('#singleList', pattern);
  });
};

const removeRowSelTable = function (button, collection_type) {
  var row = $(button).closest('tr');
  var files_used = row.children()[1].innerHTML.split(' | ');

  for (var x = 0; x < files_used.length; x++) {
    if (files_used[x].match(/,/)) {
      var splitedFiles = files_used[x].split(',');
      var forwardFile = splitedFiles[0];
      var reverseFile = splitedFiles[1];
      var r3File = splitedFiles[2];
      var r4File = splitedFiles[3];
      $('#forwardList > option').each(function () {
        if (this.value.match(/no file/i)) {
          $(this).remove();
        }
      });
      $('#reverseList > option').each(function () {
        if (this.value.match(/no file/i)) {
          $(this).remove();
        }
      });
      $('#r3List > option').each(function () {
        if (this.value.match(/no file/i)) {
          $(this).remove();
        }
      });
      $('#r4List > option').each(function () {
        if (this.value.match(/no file/i)) {
          $(this).remove();
        }
      });
      document.getElementById('forwardList').innerHTML += '<option value="' + forwardFile + '">' + forwardFile + '</option>';
      document.getElementById('reverseList').innerHTML += '<option value="' + reverseFile + '">' + reverseFile + '</option>';
      recordDelList('#forwardList', forwardFile, 'add');
      recordDelList('#reverseList', reverseFile, 'add');

      if (r3File) {
        document.getElementById('r3List').innerHTML += '<option value="' + r3File + '">' + r3File + '</option>';
        recordDelList('#r3List', r3File, 'add');
      }

      if (r4File) {
        document.getElementById('r4List').innerHTML += '<option value="' + r4File + '">' + r4File + '</option>';
        recordDelList('#r4List', r4File, 'add');
      }
    } else {
      $('#singleList > option').each(function () {
        if (this.value.match(/no file/i)) {
          $(this).remove();
        }
      });
      document.getElementById('singleList').innerHTML += '<option value="' + files_used[x] + '">' + files_used[x] + '</option>';
      recordDelList('#singleList', files_used[x], 'add');
    }
  }

  $s.datatables.selectedSamplesTable.fnDeleteRow(row);
  $s.datatables.selectedSamplesTable.fnDraw();
};

const updateNameTable = function (input) {
  input.id = input.value;
};

const replaceCharacters = function (string) {
  string = string.replace(/\./g, '_');
  string = string.replace(/-/g, '_');
  return string;
}; //keep record of the deleted items from singleList, forwardList, reverseList
//in case of new search don't show these items


const recordDelList = function (listDiv, value, type) {
  if (type == 'reset') {
    $(listDiv).removeData('samples');
  } else {
    var delArr = $(listDiv).data('samples');

    if (delArr) {
      if (delArr.length) {
        if (type !== 'add') {
          delArr.push(value);
        } else {
          var index = delArr.indexOf(value);

          if (index > -1) {
            delArr.splice(index, 1);
          }
        }

        $(listDiv).data('samples', delArr);
      }
    } else {
      if (type !== 'add') {
        $(listDiv).data('samples', [value]);
      }
    }
  }
};

const prepDatatables = () => {
  console.log($.fn.DataTable.isDataTable('#selectedSamples'));

  if (!$.fn.DataTable.isDataTable('#selectedSamples')) {
    $s.datatables.selectedSamplesTable = $('#selectedSamples').dataTable({
      sScrollX: '100%',
      searching: false,
      bLengthChange: false,
      columnDefs: [{
        targets: [4, 5],
        visible: false
      }]
    });
  }
};

const getTableSamples = function (tableId) {
  var ret = {};
  var file_array = [];
  var name_array = [];
  var warnUser = '';
  var table_data = $s.datatables[tableId].fnGetData();
  var table_nodes = $s.datatables[tableId].fnGetNodes();

  for (var y = 0; y < table_data.length; y++) {
    var name = $.trim(table_nodes[y].children[0].children[0].id);
    name = name.replace(/:/g, '_').replace(/,/g, '_').replace(/\$/g, '_').replace(/\!/g, '_').replace(/\</g, '_').replace(/\>/g, '_').replace(/\?/g, '_').replace(/\(/g, '-').replace(/\)/g, '-').replace(/\"/g, '_').replace(/\'/g, '_').replace(/\//g, '_').replace(/\\/g, '_').replace(/ /g, '_');

    if (!name) {
      warnUser = 'Please fill all the filenames in the table.';
    }

    var files_used = table_data[y][1];
    files_used = files_used.split(' | ');

    for (let k = 0; k < files_used.length; k++) {
      files_used[k] = files_used[k].split(',');
    }

    name_array.push(name);
    file_array.push(files_used);
  }

  ret.name_array = name_array;
  ret.file_array = file_array;
  ret.warnUser = warnUser;
  return ret;
};

const convertFileFormObj = formObj => {
  console.log(formObj);
  const exclude = ['amazon_cre_id', 'google_cre_id', 'single_pattern', 'forward_pattern', 'reverse_pattern', 'r3_pattern', 'r4_pattern'];
  Object.keys(exclude).forEach((k, i) => {
    delete formObj[exclude[k]];
  });
  console.log(formObj);
  let infoModalText = '';
  let formObjArr = [];
  let warnUser = false;
  var ret = getTableSamples('selectedSamplesTable');
  var rowData = $s.datatables.selectedSamplesTable.fnGetData();
  console.log(ret);
  console.log(rowData);
  var fileDirArr = [];

  for (var i = 0; i < rowData.length; i++) {
    var file_dir = rowData[i][2];
    var amzKey = rowData[i][4];
    var googKey = rowData[i][5];

    if (file_dir.match(/s3:/i)) {
      file_dir = file_dir + '\t' + amzKey;
    }

    if (file_dir.match(/gs:/i)) {
      file_dir = file_dir + '\t' + googKey;
    }

    fileDirArr.push(file_dir);
  }

  console.log('fileDirArr', fileDirArr);

  if (ret.warnUser) {
    infoModalText += ret.warnUser;
  }

  if (!ret.file_array.length) {
    infoModalText += " * Please fill table by clicking 'Add All Files' or 'Add Selected Files' buttons.\n";
  }

  var s3_archive_dir = $.trim($('#s3_archive_dir').val());
  var amzArchKey = $('#mArchAmzKeyS3').val();

  if (!warnUser && s3_archive_dir.match(/s3:/i)) {
    if (!amzArchKey) {
      infoModalText += ' * Please select Amazon Archive Keys to save files into your S3 storage.\n';
      warnUser = true;
    }
  }

  var gs_archive_dir = $.trim($('#gs_archive_dir').val());
  var googArchKey = $('#mArchGoogKeyGS').val();

  if (!warnUser && gs_archive_dir.match(/gs:/i)) {
    if (!googArchKey) {
      infoModalText += ' * Please select Google Archive Keys to save files into your Google storage.\n';
      warnUser = true;
    }
  }

  console.log('infoModalText', infoModalText);

  if (infoModalText) {
    (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.showInfoModal)(infoModalText);
    return;
  }

  if (!ret.warnUser && ret.file_array.length && !warnUser) {
    if (s3_archive_dir.match(/s3:/i)) {
      s3_archive_dir = $.trim(s3_archive_dir);
      formObj.s3_archive_dir = s3_archive_dir + '\t' + amzArchKey;
    }

    if (gs_archive_dir.match(/gs:/i)) {
      gs_archive_dir = $.trim(gs_archive_dir);
      formObj.gs_archive_dir = gs_archive_dir + '\t' + googArchKey;
    }

    for (let i = 0; i < fileDirArr.length; i++) {
      let copiedObj = $.extend(true, {}, formObj);
      copiedObj.file_dir = [[fileDirArr[i]]];
      copiedObj.file_used = ret.file_array[i];
      copiedObj.name = ret.name_array[i];
      formObjArr.push(copiedObj);
    }
  }

  return formObjArr;
};
const prepFileForm = (formId, data, $scope, projectID) => {
  bindEventHandlers();
  console.log('prepFileForm'); //   required fields for file collection:
  //    - name	Name	String
  //    - file_used	Used Files	Array
  //    - file_dir	Directory	Array
  //    - file_type	File Type	String
  //    - collection_type	Collection Type	String
  //    - file_env	File Environment	String
  //    - server_id	Server	mongoose.Schema.ObjectId
  //    - archive_dir	Archive Directory	String
  //    - s3_archive_dir	S3 Archive Directory	Array
  //    - gs_archive_dir	Google Storage Archive Directory	Array

  const nameField = $(formId).find(`[name='name']`);
  const fileUsedField = $(formId).find(`[name='file_used']`);
  const serverIDField = $(formId).find(`[name='server_id']`);
  const runEnvField = $(formId).find(`[name='file_env']`);
  const fileDirField = $(formId).find(`[name='file_dir']`);
  const fileTypeField = $(formId).find(`[name='file_type']`);
  const collectionTypeField = $(formId).find(`[name='collection_type']`);
  const archiveDirField = $(formId).find(`[name='archive_dir']`);
  const s3ArchiveDirField = $(formId).find(`[name='s3_archive_dir']`);
  const gsArchiveDirField = $(formId).find(`[name='gs_archive_dir']`); // 1. reorder rows

  const firstRow = $(formId).find(`[name='name']`).parents('.row').siblings('.row').first();
  $(nameField.parents('.row')).remove();
  $(fileUsedField.parents('.row')).remove();
  $(serverIDField.parents('.row')).insertBefore(firstRow);
  $(runEnvField.parents('.row')).insertAfter(serverIDField.parents('.row'));
  $(fileDirField.parents('.row')).insertAfter(runEnvField.parents('.row'));
  $(fileTypeField.parents('.row')).insertAfter(fileDirField.parents('.row'));
  $(collectionTypeField.parents('.row')).insertAfter(fileTypeField.parents('.row'));
  const filePatternDiv = getFilePatternDiv();
  $(collectionTypeField.parents('.row')).after(filePatternDiv);
  const filePatternDOM = $(formId).find(`div.filePattern`);
  $(archiveDirField.parents('.row')).insertAfter(filePatternDOM.parents('.row'));
  $(s3ArchiveDirField.parents('.row')).insertAfter(archiveDirField.parents('.row'));
  $(gsArchiveDirField.parents('.row')).insertAfter(s3ArchiveDirField.parents('.row')); // 2. prepare file_dir search button

  $(fileDirField).wrap('<div class="input-group"></div>');
  $(fileDirField).after(`<div class="input-group-append"><button id="viewDirBut" class="btn btn-primary" type="button" data-toggle="tooltip" data-placement="bottom" title="Please enter directory and click search button." ><i class="cil-search"> </i></button></div>`);
  $(fileDirField).parent().after(`
  <div id="viewDirDiv" class="form-group" style="margin-top: 10px; display: none;">
    <select id="viewDir" class="form-control" size="5" style="display: inline;"></select>
  </div>`);
  $('[data-toggle="tooltip"]').tooltip();
  prepDatatables();
  let runEnvDropdownEl = '';

  if (serverIDField[0]) {
    if (runEnvField[0]) {
      if (!$(runEnvField[0]).hasClass('customize')) {
        // remove actual runEnvField
        const runEnvDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([], {
          name: 'file_env',
          class: 'no-hide'
        });
        runEnvDropdownEl = $(runEnvDropdown);
        $(runEnvField[0]).after(runEnvDropdownEl);
        $(runEnvField[0]).remove();
      }
    }

    $('#viewDirBut').on('click', async function (e) {
      let dir = $(fileDirField).val();
      dir = $.trim(dir);
      await viewDirButSearch(dir, runEnvDropdownEl);
    }); // add amazon_cre_id and google_cre_id dropdowns

    const amzDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([], {
      id: 'mRunAmzKeyS3',
      name: 'amazon_cre_id',
      class: 'no-hide'
    });
    const googleDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([], {
      id: 'mRunGoogKeyGS',
      name: 'google_cre_id',
      class: 'no-hide'
    });
    const googleRow = (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_2__.getFormRow)(googleDropdown, 'Google Keys', {
      required: true
    });
    const amzRow = (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_2__.getFormRow)(amzDropdown, 'Amazon Keys', {
      required: true
    });
    $(googleRow).css('display', 'none').insertBefore(fileDirField.parents('.row'));
    $(amzRow).css('display', 'none').insertBefore(fileDirField.parents('.row')); // update filetype field

    const filetypeDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([{
      _id: 'fastq',
      name: 'FASTQ'
    }, {
      _id: 'bam',
      name: 'BAM'
    }, {
      _id: 'bai',
      name: 'BAI'
    }, {
      _id: 'bed',
      name: 'BED'
    }, {
      _id: 'csv',
      name: 'CSV'
    }, {
      _id: 'tab',
      name: 'TAB'
    }, {
      _id: 'tsv',
      name: 'TSV'
    }, {
      _id: 'txt',
      name: 'TXT'
    }], {
      name: 'file_type',
      class: 'no-hide'
    });
    $(fileTypeField[0]).after($(filetypeDropdown));
    $(fileTypeField[0]).remove(); // update collectionType

    const collectionTypeDropdown = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getSimpleDropdown)([{
      _id: 'single',
      name: 'Single/List'
    }, {
      _id: 'pair',
      name: 'Paired List'
    }, {
      _id: 'triple',
      name: 'Triple List'
    }, {
      _id: 'quadruple',
      name: 'Quadruple List'
    }], {
      name: 'collection_type',
      class: 'no-hide',
      placeholder: 'Choose Collection Type',
      id: 'collection_type'
    });
    $(collectionTypeField[0]).after($(collectionTypeDropdown));
    $(collectionTypeField[0]).remove(); // 1. get all run environments of user from dnext on change of serverid

    $(serverIDField[0]).on('change', async function (e) {
      const serverId = $(this).val();
      console.log(serverId);

      if (serverId) {
        try {
          const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
            method: 'GET',
            url: `/api/v1/server/${serverId}`
          });
          console.log(res);

          if (res && res.data && res.data.status === 'success' && res.data.data && res.data.data.data && res.data.data.data[0]) {
            $s.server = res.data.data.data[0];
            const url_server = res.data.data.data[0].url_server;
            console.log(url_server, 'url_server');

            if (url_server && runEnvDropdownEl) {
              let body = {};
              const method = 'GET'; // method for Dnext query

              const url = `${url_server}/api/service.php?data=getRunEnv`;
              const runEnvData = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
                method: 'POST',
                url: `/api/v1/misc/getDnextData`,
                data: {
                  body,
                  method,
                  url
                }
              });
              console.log('runEnvData', runEnvData);

              if (runEnvData && runEnvData.data && runEnvData.data.data) {
                updateDropdownOptions(runEnvDropdownEl, runEnvData.data.data.data);
              }
            }

            if (url_server) {
              let body = {};
              const method = 'GET'; // method for Dnext query

              const url = `${url_server}/api/service.php?data=getCloudKeys`;
              const cloudData = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
                method: 'POST',
                url: `/api/v1/misc/getDnextData`,
                data: {
                  body,
                  method,
                  url
                }
              });
              console.log('getCloudKeys', cloudData);

              if (cloudData && cloudData.data && cloudData.data.data && cloudData.data.data.data && cloudData.data.data.data['amazon']) {
                updateDropdownOptions($('#mRunAmzKeyS3'), cloudData.data.data.data['amazon']);
              }

              if (cloudData && cloudData.data && cloudData.data.data && cloudData.data.data.data && cloudData.data.data.data['google']) {
                updateDropdownOptions($('#mRunGoogKeyGS'), cloudData.data.data.data['google']);
              }
            }
          }
        } catch (err) {
          console.log(err);
        }
      } else {
        // empty dropdowns
        updateDropdownOptions(runEnvDropdownEl, []);
      }
    });

    if (!data || !data.server_id) {
      $(serverIDField[0]).prop('selectedIndex', 1).trigger('change');
    }
  }
};

/***/ }),

/***/ "./public/js/importpage.js":
/*!*********************************!*\
  !*** ./public/js/importpage.js ***!
  \*********************************/
/*! namespace exports */
/*! export getImportPageNavBar [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getImportPageNavBar": () => /* binding */ getImportPageNavBar
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _formModules_crudData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formModules/crudData */ "./public/js/formModules/crudData.js");
/* eslint-disable */
;

 // GLOBAL SCOPE

let $s = {
  data: {},
  compare: {},
  diff: {}
};
let $g = {
  data: {}
}; // Make it for all projects for now only vitiligo supported

const projectPart = 'projects/vitiligo/';
const colls = ['exp', 'biosamp', 'sample', 'file'];

const ajaxCall = async (method, url) => {
  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    return res.data.data;
  } catch (err) {
    console.log(err);
    return '';
  }
}; // save crudCalls in $s.compare object:
// e.g. $s.compare.tableID.rowIdx: {
//                                   POST: { req:{}, res:{}, log:"", status:""},
//                                   PATCH: {req:{}, res:{}, log:"", status:""}
//                                  }


const crudCall = async (method, url, data, tableID, rowIdx) => {
  if (!$s.compare[tableID]) $s.compare[tableID] = {};
  if (!$s.compare[tableID][rowIdx]) $s.compare[tableID][rowIdx] = {};

  if (!$s.compare[tableID][rowIdx][method]) {
    $s.compare[tableID][rowIdx][method] = {
      req: '',
      res: '',
      log: '',
      status: ''
    };
  }

  try {
    Object.keys(data).forEach(key => {
      if (data[key] && (data[key].charAt(0) == '{' || data[key].charAt(0) == '[')) {
        console.log(data[key]);
        data[key] = eval(data[key]);
      }
    });
  } catch {
    console.log('eval failed', data);
    $s.compare[tableID][rowIdx][method].log = 'Format error in json data.';
    $s.compare[tableID][rowIdx][method].status = 'error';
    return '';
  }

  try {
    $s.compare[tableID][rowIdx][method].req = data;
    console.log('data', data);
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url,
      data
    });
    $s.compare[tableID][rowIdx][method].res = res.data.data.data;

    if (method == 'POST' && res.data.status == 'success') {
      $s.compare[tableID][rowIdx][method].status = 'inserted';
    } else if (method == 'PATCH' && res.data.status == 'success') {
      $s.compare[tableID][rowIdx][method].status = 'updated';
    } else {
      $s.compare[tableID][rowIdx][method].status = res.data.status;
    }

    return res;
  } catch (err) {
    $s.compare[tableID][rowIdx][method].log = err;

    if (err.response && err.response.data && err.response.data.message) {
      $s.compare[tableID][rowIdx][method].log = err.response.data.message;
    }

    $s.compare[tableID][rowIdx][method].status = 'error';
    console.log(err);
    return '';
  }
};

const getTableColumns = data => {
  const defCols = ['$plusButton', 'Status'];

  if (data[0]) {
    const dataCols = Object.keys(data[0]);
    return defCols.concat(dataCols);
  }

  return [];
};

const getTableHeaders = cols => {
  let ret = '';

  for (var i = 0; i < cols.length; i++) {
    let label = cols[i];
    if (cols[i] == '$plusButton') label = '';
    ret += `<th>${label}</th>`;
  }

  return ret;
};

const getImportTable = (data, TableID) => {
  const cols = getTableColumns(data);
  const headers = getTableHeaders(cols);
  const ret = `
  <div class="table-responsive" style="overflow-x:auto; width:100%; ">
    <table id="${TableID}" class="table table-striped" style='white-space: nowrap; width:100%;' cellspacing="0" >
        <thead>
            <tr>
            ${headers}
            </tr>
        <tbody>
        </tbody>
    </thead>
    </table>
  </div>`;
  return ret;
};

const bindEventHandlers = () => {
  $(document).on('click', '.update-db', function (e) {
    e.preventDefault();
    const tabId = $(this).attr('tabId'); // reset $s object

    $s.data[tabId] = {};
    $s.compare[tabId] = {};
    $s.diff[tabId] = {};
    getDbData(tabId);
  });
};

const getDiffTable = obj => {
  console.log('obj', obj);
  let ret = '';

  if (obj && obj.status == 'not-equal' && obj.db && obj.google) {
    const headerRow = ['', 'database', 'google-sheet'];
    const rowHeaders = Object.keys(obj.db);
    ret += '<h4 style="text-align: center; margin-bottom:10px;">Difference Table</h4>';
    ret += '<table class="table-not-striped" style="width:100%"><tbody>';
    ret += `<tr style="font-weight:700;"><td>${headerRow[0]}</td><td>${headerRow[1]}</td><td>${headerRow[2]}</td></tr>`;

    for (var k = 0; k < rowHeaders.length; k++) {
      const label = rowHeaders[k] ? rowHeaders[k] : '';
      const dbVal = obj.db[rowHeaders[k]] ? obj.db[rowHeaders[k]] : '-';
      const googleVal = obj.google[rowHeaders[k]] ? obj.google[rowHeaders[k]] : '-';
      ret += `<tr><td>${label}</td><td>${dbVal}</td><td>${googleVal}</td></tr>`;
    }

    ret += '</tbody></table>';
  }

  if (obj && obj.log) {
    const log = JSON.stringify(obj.log);
    ret += '<h4 style="text-align: center; margin-top:30px; margin-bottom:10px;">Log</h4>';
    ret += '<table class="table-not-striped" style="width:100%"><tbody>';
    ret += `<tr><td>${log}</td></tr>`;
    ret += '</tbody></table>';
  }

  return ret;
};

const getCrudTable = (obj, method) => {
  let ret = '';

  if (obj) {
    if (obj.req) {
      const headerRow = ['', 'Requested', 'Returned'];
      const rowHeaders = Object.keys(obj.req);
      ret += `<h4 style="text-align: center; margin-top:30px; margin-bottom:10px;">AJAX Table - ${method} Request</h4>`;
      ret += '<table class="table-not-striped" style="width:100%"><tbody>';
      ret += `<tr style="font-weight:700;"><td>${headerRow[0]}</td><td>${headerRow[1]}</td><td>${headerRow[2]}</td></tr>`;

      for (var k = 0; k < rowHeaders.length; k++) {
        const label = rowHeaders[k] ? rowHeaders[k] : '';
        const reqVal = obj.req[rowHeaders[k]] ? obj.req[rowHeaders[k]] : '-';
        const resVal = obj.res[rowHeaders[k]] ? obj.res[rowHeaders[k]] : '-';
        ret += `<tr><td>${label}</td><td>${reqVal}</td><td>${resVal}</td></tr>`;
      }

      ret += '</tbody></table>';
    }

    if (obj.log) {
      const log = JSON.stringify(obj.log);
      ret += '<h4 style="text-align: center; margin-top:30px; margin-bottom:10px;">AJAX Log</h4>';
      ret += '<table class="table-not-striped" style="width:100%"><tbody>';
      ret += `<tr><td>${log}</td></tr>`;
      ret += '</tbody></table>';
    }
  }

  return ret;
};

const prepareCompTable = (diffObj, crudObj, method) => {
  let table = '';
  table += getDiffTable(diffObj);
  table += getCrudTable(crudObj, method);
  return table;
};

const formatChildRow = async (rowdata, rowIdx, TableID) => {
  const diffObj = getDiffObj(TableID, rowIdx);
  const {
    crudObj,
    method
  } = getCrudObj(TableID, rowIdx);
  const table = prepareCompTable(diffObj, crudObj, method);
  if (!table) return 'No Data found.';
  const ret = `
  <div style="margin-top:10px; width:1850px;">
    <div class="row">
      <div class="col-sm-9">
        <div class="card">
          <div class="card-body summary_card" style="overflow:auto;">
            ${table}
          </div>
        </div>
      </div>
    </div>
  </div>`;
  return ret;
};

const compareWithDB = async (gdata, ddata, tabId) => {
  //console.log(ddata[0].name);
  // get parentCollection data
  const parentColl = colls[Number(tabId) - 1];
  const currColl = colls[tabId];
  const dat = await ajaxCall('GET', `/api/v1/${projectPart}data/${parentColl}`);
  const parentData = dat.data;

  for (var i = 0; i < gdata.length; i++) {
    let recordfound = [];

    try {
      //name should be unique for this check
      recordfound = ddata.filter(ddata => ddata.name === gdata[i].name);
    } catch (err) {
      console.log(err);
    } //record found -> then compare it and patch if necessary
    // save diff in $s.diff object:
    // e.g. $s.diff.tableID.rowIdx: {db:recordfound[0][key], google:gdata[i][key], status:""}


    if (recordfound.length > 0) {
      if (!$s.diff[tabId]) $s.diff[tabId] = {};
      if (!$s.diff[tabId][i]) $s.diff[tabId][i] = {
        db: {},
        google: {},
        status: ''
      };
      let k = 0;
      Object.keys(gdata[i]).forEach(key => {
        let gdat = gdata[i][key];
        let rec = recordfound[0][key];

        try {
          if (gdat && (gdat.charAt(0) == '{' || gdat.charAt(0) == '[')) {
            let val = eval(gdat);
            console.log(val);
            gdat = JSON.stringify(val);
          }
        } catch (err) {
          console.log('format error', err);
        }

        if (rec && (typeof rec === 'object' || Array.isArray(rec))) rec = JSON.stringify(rec);

        if (gdat != rec) {
          $s.diff[tabId][i].db[key] = rec;
          $s.diff[tabId][i].google[key] = gdat;
          k++;
        }
      }); // ** Consider removing unused keys

      if (k > 0) {
        console.log(ddata);
        console.log('Patch ', gdata[i].name);
        $s.diff[tabId][i].status = 'not-equal';
        const res = await crudCall('PATCH', `/api/v1/${projectPart}data/${currColl}/${recordfound[0]._id}`, gdata[i], tabId, i);
      } else {
        // values are equal, update status equal
        $s.diff[tabId][i].status = 'passed';
      } // record not found -> insert document

    } else {
      let m = 0; // copy gdata[i] for insert

      let insert = $.extend(true, {}, gdata[i]);

      if (tabId == 1 && !insert.exp_id) {
        m++;
        console.log(parentData[0]._id); // there is only one experiment for now

        insert.exp_id = parentData[0]._id;
      } else if (tabId == 2 && !insert.biosamp_id) {
        // find parent data based on their unique_id
        const recordfound = parentData.filter(dat => dat.unique_id === insert.unique_id);

        if (recordfound.length > 0) {
          m++;
          insert.biosamp_id = recordfound[0]._id;
        }
      } else if (tabId == 3 && !insert.sample_id) {
        const recordfound = parentData.filter(dat => dat.unique_id === insert.unique_id);

        if (recordfound.length > 0) {
          m++;
          insert.sample_id = recordfound[0]._id;
        }
      }

      if (m > 0) {
        console.log('DATA:[', i, ']', insert);
        const res = await crudCall('POST', `/api/v1/${projectPart}data/${currColl}`, insert, tabId, i);
      } else {
        if (!$s.diff[tabId]) $s.diff[tabId] = {};
        if (!$s.diff[tabId][i]) $s.diff[tabId][i] = {
          status: '',
          log: ''
        };
        $s.diff[tabId][i].status = 'no-parent';
        $s.diff[tabId][i].log = `Insert couldn't be performed. Parent collection data not found for unique_id=${insert.unique_id}`;
      }
    }

    updateRowStatus(tabId, i);
  }

  updateTableDropdown(tabId);
  console.log($s.compare);
  console.log($s.diff);
};

const getCrudObj = (TableID, rowIdx) => {
  let crudObj;
  let method;

  if ($s.compare[TableID] && $s.compare[TableID][rowIdx] && $s.compare[TableID][rowIdx].PATCH) {
    crudObj = $s.compare[TableID][rowIdx].PATCH;
    method = 'PATCH';
  }

  if ($s.compare[TableID] && $s.compare[TableID][rowIdx] && $s.compare[TableID][rowIdx].POST) {
    crudObj = $s.compare[TableID][rowIdx].POST;
    method = 'POST';
  }

  return {
    crudObj,
    method
  };
};

const getDiffObj = (TableID, rowIdx) => {
  let diffObj;
  if ($s.diff[TableID] && $s.diff[TableID][rowIdx]) diffObj = $s.diff[TableID][rowIdx];
  return diffObj;
};

const getDiffStatus = (TableID, rowIdx) => {
  let status = '';
  if ($s.diff[TableID] && $s.diff[TableID][rowIdx] && $s.diff[TableID][rowIdx].status) return $s.diff[TableID][rowIdx].status;
  return status;
};

const updateTableDropdown = TableID => {
  const statusColumn = 1;
  const selectID = `#select-${TableID}-Status`;
  console.log(selectID);
  $(selectID).empty();
  let i = 0;
  $s[TableID].column(statusColumn).data().unique().sort().each(function (d, j) {
    if (d) {
      i++;
      if (i === 1) $(selectID).append(`<div class="col-sm-1"><label>Status Filter:</label></div>`);
      $(selectID).append(`
        <div class="col-sm-1">
          <div class="form-check">
            <input data-val="${d}" data-column="${statusColumn}" class="form-check-input toggle-filter-${TableID}" type="checkbox" value=""></input>
            <label class="form-check-label" style="display:block; white-space: nowrap;
               text-overflow: ellipsis;"  >
              <span style="text-align:left;">${d}</span>
            </label>
          </div>
        </div>`);
    }
  });
  $(`input.toggle-filter-${TableID}`).trigger('change');
};

const updateRowStatus = (TableID, rowIdx) => {
  //Status column locaapited at second column
  let status = '';
  let crudObjStatus = '';
  const statusColIdx = 1;
  const {
    crudObj
  } = getCrudObj(TableID, rowIdx);
  if (crudObj) crudObjStatus = crudObj.status;
  const diffStatus = getDiffStatus(TableID, rowIdx);

  if (diffStatus == 'passes' || !crudObjStatus) {
    status = diffStatus;
  } else if (crudObjStatus) {
    status = crudObjStatus;
  }

  $s[TableID].cell({
    row: rowIdx,
    column: statusColIdx
  }).data(status);
};

const getDbData = async tabId => {
  // Only three collections supported now (make this part generic)
  const data = await ajaxCall('GET', `/api/v1/${projectPart}data/${colls[tabId]}`);
  $s.data[tabId] = data.data;
  compareWithDB($g.data[tabId], $s.data[tabId], tabId);
};

const showTableTabs = async googleSheetId => {
  $(document).on('show.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    const collName = $(e.target).attr('collName');
    const tableID = $(e.target).attr('tableID');
    const contentDivId = $(e.target).attr('href');

    if (collName != 'Run') {
      refreshDataTables(googleSheetId, tableID, contentDivId);
    }
  });
  $(document).on('shown.coreui.tab', 'a.collection[data-toggle="tab"]', function (e) {
    $($.fn.dataTable.tables(true)).DataTable().columns.adjust();
  });
};

const prepareData = async (googleSheetId, tableID) => {
  try {
    const data = await ajaxCall('GET', ` /api/v1/misc/getGoogleSheet/${googleSheetId}/${tableID}`);
    $g.data[tableID] = JSON.parse(data);
    return JSON.parse(data);
  } catch (err) {
    return '';
  }
};

const refreshDataTables = async (googleSheetId, TableID, contentDivId) => {
  const searchBarID = `#searchBar-${TableID}`;

  const initCompImport = function (settings, json) {
    console.log('initCompImport');
    var api = new $.fn.dataTable.Api(settings);
    var columnsToSearch = {
      1: 'Status'
    };

    for (var i in columnsToSearch) {
      var selectID = `select-${TableID}-${columnsToSearch[i]}`;
      var filterID = `filter-${TableID}-${columnsToSearch[i]}`;
      $(TableID + '_filter').css('display', 'inline-block');
      $(searchBarID).append(`<div style="margin-bottom:20px; padding-left:8px;" id="${filterID}"></div>`);
      $(`<div id="${selectID}" class="row" ><div class="col-sm-6"></div></div>`).appendTo($('#' + filterID).empty()).attr('data-col', i);
    } // Add event listener for opening and closing details


    $(document).on('click', `td.details-control-${TableID}`, async function (e) {
      var icon = $(this).find('i');
      var tr = $(this).closest('tr');
      var row = api.row(tr);
      const rowIdx = $s[TableID].row(this).index();

      if (row.child.isShown()) {
        // close child row
        row.child.hide();
        tr.removeClass('shown');
        icon.removeClass('cil-minus').addClass('cil-plus');
      } else {
        // Open child row
        const rowdata = row.data();
        const formattedRow = await formatChildRow(rowdata, rowIdx, TableID);
        row.child(formattedRow).show();
        tr.addClass('shown');
        icon.removeClass('cil-plus').addClass('cil-minus');
      }
    }); // Bind event handler for toggle-filter checkbox at the sidebar

    $(document).on('change', `input.toggle-filter-${TableID}`, function (e) {
      var dataColumn = $(this).attr('data-column');
      let vals = [];
      var dataFilters = $(`input.toggle-filter-${TableID}[data-column="${dataColumn}"]`);

      for (var k = 0; k < dataFilters.length; k++) {
        if ($(dataFilters[k]).is(':checked')) {
          vals.push($(dataFilters[k]).attr('data-val'));
        }
      }

      var valReg = '';

      for (var k = 0; k < vals.length; k++) {
        var val = $.fn.dataTable.util.escapeRegex(vals[k]);

        if (val) {
          if (k + 1 !== vals.length) {
            valReg += val + '|';
          } else {
            valReg += val;
          }
        }
      }

      api.column(dataColumn).search(valReg ? '(^|,)' + valReg + '(,|$)' : '', true, false).draw();
    });
  };

  if (!$.fn.DataTable.isDataTable(`#${TableID}`)) {
    const data = await prepareData(googleSheetId, TableID);

    if (data) {
      const tableContent = getImportTable(data, TableID);
      $(contentDivId).append(tableContent);
      const cols = getTableColumns(data);
      let columns = [];

      for (var i = 0; i < cols.length; i++) {
        if (cols[i] == '$plusButton') {
          columns.push({
            className: `details-control-${TableID}`,
            orderable: false,
            data: null,
            defaultContent: '<i class="cil-plus"></i>'
          });
        } else {
          columns.push({
            data: cols[i]
          });
        }
      }

      var dataTableObj = {
        columns: columns,
        columnDefs: [{
          defaultContent: '-',
          targets: '_all'
        } //hides undefined error
        ],
        order: [[2, 'asc']],
        initComplete: initCompImport,
        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, 'All']]
      };
      dataTableObj.pageLength = 25;
      dataTableObj.dom = '<"' + searchBarID + '.pull-left"f>lrt<"pull-left"i><"bottom"p><"clear">';
      dataTableObj.destroy = true;
      dataTableObj.data = data;
      dataTableObj.hover = true; // speed up the table loading

      dataTableObj.deferRender = true;
      dataTableObj.scroller = true;
      dataTableObj.scrollCollapse = true;
      dataTableObj.colReorder = true;
      dataTableObj.sScrollX = true;
      $s[TableID] = $(`#${TableID}`).DataTable(dataTableObj);
    }
  }
};

const getImportPageNavBar = async googleSheetId => {
  bindEventHandlers();
  showTableTabs(googleSheetId);
  let header = '<ul class="nav nav-tabs" role="tablist" style="margin-top: 10px;">';
  let content = '<div class="tab-content">';
  let tabNames = ['Biosample', 'Sample', 'Files', 'Run'];

  for (var i = 0; i < tabNames.length; i++) {
    const tabId = i + 1;
    const Name = tabNames[i];
    const Label = tabNames[i];
    const id = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_1__.getCleanDivId)(Label);
    const importTabId = 'importTab_' + id;
    const active = i === 0 ? 'active' : '';
    const headerLi = `
      <li class="nav-item">
          <a class="nav-link ${active} collection" data-toggle="tab" collName="${Name}" tableID="${tabId}" href="#${importTabId}" aria-expanded="true">${Label}</a>
      </li>`;
    header += headerLi;
    let contentDiv = `
      <div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${importTabId}">
        <div class="row" style="margin-top: 10px;">
          <div class="col-sm-12">
            <button class="btn update-db btn-primary" type="button" tabId="${tabId}">Update ${Label}</button>
          </div>
        </div>
      </div>`;

    if (Name == 'Run') {
      const insertDiv = await (0,_formModules_crudData__WEBPACK_IMPORTED_MODULE_2__.getInsertDataDiv)();
      contentDiv = `<div role="tabpanel" class="tab-pane ${active}" searchtab="true" id="${importTabId}">${insertDiv}</div>`;
    }

    content += contentDiv;
  }

  header += `</ul>`;
  content += `</div>`;
  let ret = '';
  ret += '<div role="tabpanel">';
  ret += header;
  ret += content;
  ret += '</div>';
  return ret;
};

/***/ }),

/***/ "./public/js/index.js":
/*!****************************!*\
  !*** ./public/js/index.js ***!
  \****************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/polyfill */ "./node_modules/@babel/polyfill/lib/index.js");
/* harmony import */ var _babel_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_polyfill__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _login__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./login */ "./public/js/login.js");
/* harmony import */ var _dashboard_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dashboard.js */ "./public/js/dashboard.js");
/* harmony import */ var _admin_dashboard_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./admin-dashboard.js */ "./public/js/admin-dashboard.js");
/* harmony import */ var _profile_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./profile.js */ "./public/js/profile.js");
/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./event.js */ "./public/js/event.js");
/* harmony import */ var _importpage_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./importpage.js */ "./public/js/importpage.js");
/* harmony import */ var _jsfuncs_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./jsfuncs.js */ "./public/js/jsfuncs.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery-exposed.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _coreui_coreui__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @coreui/coreui */ "./node_modules/@coreui/coreui/dist/js/coreui.esm.js");
/* harmony import */ var handsontable_dist_handsontable_full_css__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! handsontable/dist/handsontable.full.css */ "./node_modules/handsontable/dist/handsontable.full.css");
/* harmony import */ var _vendors_coreui_icons_css_free_min_css__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../vendors/@coreui/icons/css/free.min.css */ "./public/vendors/@coreui/icons/css/free.min.css");
/* harmony import */ var _vendors_coreui_icons_css_flag_min_css__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../vendors/@coreui/icons/css/flag.min.css */ "./public/vendors/@coreui/icons/css/flag.min.css");
/* harmony import */ var _vendors_coreui_icons_css_brand_min_css__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../vendors/@coreui/icons/css/brand.min.css */ "./public/vendors/@coreui/icons/css/brand.min.css");
/* eslint-disable */
;











__webpack_require__(/*! datatables.net */ "./node_modules/datatables.net/js/jquery.dataTables.js"); // Datatables Core


__webpack_require__(/*! datatables.net-bs4/js/dataTables.bootstrap4.js */ "./node_modules/datatables.net-bs4/js/dataTables.bootstrap4.js"); // Datatables Bootstrap 4


__webpack_require__(/*! datatables.net-bs4/css/dataTables.bootstrap4.css */ "./node_modules/datatables.net-bs4/css/dataTables.bootstrap4.css"); // Datatables Bootstrap 4


__webpack_require__(/*! datatables.net-colreorder */ "./node_modules/datatables.net-colreorder/js/dataTables.colReorder.js");

__webpack_require__(/*! datatables.net-colreorder-bs4 */ "./node_modules/datatables.net-colreorder-bs4/js/colReorder.bootstrap4.js");

__webpack_require__(/*! datatables.net-rowreorder-bs4 */ "./node_modules/datatables.net-rowreorder-bs4/js/rowReorder.bootstrap4.js");

__webpack_require__(/*! datatables.net-rowreorder-bs4/css/rowReorder.bootstrap4.min.css */ "./node_modules/datatables.net-rowreorder-bs4/css/rowReorder.bootstrap4.min.css");

__webpack_require__(/*! jquery-datatables-checkboxes */ "./node_modules/jquery-datatables-checkboxes/js/dataTables.checkboxes.js");

__webpack_require__(/*! selectize/dist/js/selectize.js */ "./node_modules/selectize/dist/js/selectize.js");

__webpack_require__(/*! selectize/dist/css/selectize.bootstrap3.css */ "./node_modules/selectize/dist/css/selectize.bootstrap3.css");



__webpack_require__(/*! dropzone/dist/min/dropzone.min.css */ "./node_modules/dropzone/dist/min/dropzone.min.css");

window.Dropzone = __webpack_require__(/*! dropzone/dist/min/dropzone.min.js */ "./node_modules/dropzone/dist/min/dropzone.min.js"); // require('datatables.net-buttons');
// require('datatables.net-buttons-bs4');
// require('bootstrap-select');
// require('bootstrap-select/js/i18n/defaults-en_US');
// import './../css/style.css';



 // GLOBAL ENV CONFIG

(0,_jsfuncs_js__WEBPACK_IMPORTED_MODULE_8__.globalEventBinders)();
const envConf = document.querySelector('#session-env-config');
const ssologin = envConf && envConf.getAttribute('sso_login') && envConf.getAttribute('sso_login') == 'true'; // DOM ELEMENTS

const logOutBtn = document.querySelector('.nav__el--logout');
const logInBtn = document.querySelector('.nav__el--login');
const afterSsoClose = document.querySelector('.after-sso-close');
const loginForm = document.querySelector('#loginOuterDiv');
const allProjectNav = document.querySelector('#allProjectNav');
const allProfileNav = document.querySelector('#allProfileNav');
const allEventNav = document.querySelector('#allEventNav');
const allAdminEventNav = document.querySelector('#allAdminEventNav');
const adminAllProjectNav = document.querySelector('#admin-allProjectNav');
const dmetaVersionBut = document.querySelector('#dmetaVersionBut');
const importpageNav = document.querySelector('#import-page');
const googleSheetId = envConf && envConf.getAttribute('google_sheet_id');
const userRole = envConf && envConf.getAttribute('role');
if (logOutBtn) logOutBtn.addEventListener('click', _login__WEBPACK_IMPORTED_MODULE_2__.logout);

function popupwindow(url, title, w, h) {
  var left = screen.width / 2 - w / 2;
  var top = screen.height / 2 - h / 2;
  return window.open(url, title, 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);
} // open child window for SSO if user clicks on sign-in button


if (logInBtn && ssologin) {
  logInBtn.addEventListener('click', e => {
    e.preventDefault();
    var SSO_URL = envConf.getAttribute('sso_url');
    var CLIENT_ID = envConf.getAttribute('client_id');
    var SSO_REDIRECT_URL = `${window.location.origin}/receivetoken`;
    var SSO_FINAL_URL = `${SSO_URL}/dialog/authorize?redirect_uri=${SSO_REDIRECT_URL}&response_type=code&client_id=${CLIENT_ID}&scope=offline_access`;
    popupwindow(SSO_FINAL_URL, 'Login', 650, 800);
  });
}

if (afterSsoClose) {
  if (window.opener) {
    window.opener.focus();

    if (window.opener && !window.opener.closed) {
      window.opener.location.reload();
    }
  } else {
    window.location = envConf.getAttribute('base_url');
  }

  window.close();
}

if (loginForm) {
  (0,_login__WEBPACK_IMPORTED_MODULE_2__.loadLoginDiv)('loginDiv');
  $('#loginOuterDiv').on('click', '#loginBtn', function (e) {
    e.preventDefault();
    const usernameoremail = document.getElementById('usernameoremail').value;
    const password = document.getElementById('password').value;
    (0,_login__WEBPACK_IMPORTED_MODULE_2__.login)(usernameoremail, password);
  });
  $('#loginOuterDiv').on('click', '#signupBtn', function (e) {
    e.preventDefault();
    (0,_login__WEBPACK_IMPORTED_MODULE_2__.loadLoginDiv)('registerDiv');
  });
  $('#loginOuterDiv').on('click', '.signInBackBtn', function (e) {
    e.preventDefault();
    (0,_login__WEBPACK_IMPORTED_MODULE_2__.loadLoginDiv)('loginDiv');
  });
  $('#loginOuterDiv').on('click', '#registerBtn', async function (e) {
    e.preventDefault();
    var formValues = $('#loginOuterDiv').find('input');
    var requiredFields = ['firstname', 'lastname', 'username', 'email', 'institute', 'lab', 'password', 'passwordConfirm'];
    const [formObj, stop] = createFormObj(formValues, requiredFields, true);
    console.log(formObj);
    console.log(stop);

    if (stop === false) {
      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_1___default()({
          method: 'POST',
          url: '/api/v1/users/signup',
          data: formObj
        });

        if (res && res.data && res.data.status === 'success') {
          console.log('success');
          (0,_login__WEBPACK_IMPORTED_MODULE_2__.loadLoginDiv)('successSignUpDiv');
        }
      } catch (e) {
        console.log(e.response);

        if (e.response && e.response.data && e.response.data.error) {
          const errors = e.response.data.error.errors;
          showFormError(formValues, errors, true);
        }
      }
    }
  });
}

(async () => {
  if (allProjectNav) {
    const projectNavbar = await (0,_dashboard_js__WEBPACK_IMPORTED_MODULE_3__.getProjectNavbar)();
    $('#allProjectNav').append(projectNavbar); // load all tab content

    (0,_dashboard_js__WEBPACK_IMPORTED_MODULE_3__.loadAllTabContent)();
    $('a.collection[data-toggle="tab"]').trigger('show.coreui.tab');
    $('[data-toggle="tooltip"]').tooltip();
  }

  if (allProfileNav) {
    const profileNavbar = await (0,_profile_js__WEBPACK_IMPORTED_MODULE_5__.getProfileNavbar)(userRole);
    $('#allProfileNav').append(profileNavbar);
    (0,_profile_js__WEBPACK_IMPORTED_MODULE_5__.loadProfileTabContent)(userRole);
  } // first get adminEventNavbar then allEventNav


  if (allAdminEventNav) {
    const adminEventNavbar = await (0,_event_js__WEBPACK_IMPORTED_MODULE_6__.getEventNavbar)('adminevents');
    $('#allAdminEventNav').append(adminEventNavbar);
  }

  if (allEventNav) {
    const eventNavbar = await (0,_event_js__WEBPACK_IMPORTED_MODULE_6__.getEventNavbar)('events');
    $('#allEventNav').append(eventNavbar);
    await (0,_event_js__WEBPACK_IMPORTED_MODULE_6__.loadEventContent)(userRole);
  }

  if (adminAllProjectNav) {
    const adminProjectNavbar = await (0,_admin_dashboard_js__WEBPACK_IMPORTED_MODULE_4__.refreshAdminProjectNavbar)();
    $('#admin-allProjectNav').append(adminProjectNavbar); // load all tab content

    $('a.collection[data-toggle="tab"]').trigger('show.coreui.tab');
  }

  if (dmetaVersionBut) {
    // $('#dmetaVersionBut').on('click', function(event) {
    //   console.log('not working');
    // });
    var checkLoad = $('#versionNotes').attr('readonly');

    if (typeof checkLoad === typeof undefined || checkLoad === false) {
      try {
        const res = await axios__WEBPACK_IMPORTED_MODULE_1___default()({
          method: 'GET',
          url: '/api/v1/misc/changelog'
        });
        const changeLogData = res.data.data;
        $('#versionNotes').val(JSON.parse(changeLogData));
        $('#versionNotes').attr('readonly', 'readonly');
      } catch (err) {
        console.log(err);
        return '';
      }
    }
  }

  if (importpageNav && googleSheetId) {
    const importpage = await (0,_importpage_js__WEBPACK_IMPORTED_MODULE_7__.getImportPageNavBar)(googleSheetId);
    $('#import-page').append(importpage);
    $('a.collection[data-toggle="tab"]').trigger('show.coreui.tab'); // choose "run" collection as default in the run tab

    const runID = $('#allcollections option').filter(function () {
      return $(this).text() == 'run';
    }).val();
    $('#allcollections').val(runID);
    $(`select.collection-control`).trigger('change');
  }
})();

/***/ }),

/***/ "./public/js/jsfuncs.js":
/*!******************************!*\
  !*** ./public/js/jsfuncs.js ***!
  \******************************/
/*! namespace exports */
/*! export IsJson5String [provided] [no usage info] [missing usage info prevents renaming] */
/*! export IsJsonString [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ajaxCall [provided] [no usage info] [missing usage info prevents renaming] */
/*! export convertFormObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createElement [provided] [no usage info] [missing usage info prevents renaming] */
/*! export createFormObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export fillFormByName [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getCleanDivId [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getDropdownFields [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getSimpleDropdown [provided] [no usage info] [missing usage info prevents renaming] */
/*! export getUpdatedFields [provided] [no usage info] [missing usage info prevents renaming] */
/*! export globalEventBinders [provided] [no usage info] [missing usage info prevents renaming] */
/*! export groupArrayOfObj [provided] [no usage info] [missing usage info prevents renaming] */
/*! export hideFormError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepareClickToActivateModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export prepareMultiUpdateModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! export showFormError [provided] [no usage info] [missing usage info prevents renaming] */
/*! export showInfoInDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export showInfoModal [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ajaxCall": () => /* binding */ ajaxCall,
/* harmony export */   "globalEventBinders": () => /* binding */ globalEventBinders,
/* harmony export */   "getCleanDivId": () => /* binding */ getCleanDivId,
/* harmony export */   "createFormObj": () => /* binding */ createFormObj,
/* harmony export */   "getSimpleDropdown": () => /* binding */ getSimpleDropdown,
/* harmony export */   "convertFormObj": () => /* binding */ convertFormObj,
/* harmony export */   "getUpdatedFields": () => /* binding */ getUpdatedFields,
/* harmony export */   "hideFormError": () => /* binding */ hideFormError,
/* harmony export */   "getDropdownFields": () => /* binding */ getDropdownFields,
/* harmony export */   "showFormError": () => /* binding */ showFormError,
/* harmony export */   "showInfoModal": () => /* binding */ showInfoModal,
/* harmony export */   "prepareMultiUpdateModal": () => /* binding */ prepareMultiUpdateModal,
/* harmony export */   "prepareClickToActivateModal": () => /* binding */ prepareClickToActivateModal,
/* harmony export */   "fillFormByName": () => /* binding */ fillFormByName,
/* harmony export */   "showInfoInDiv": () => /* binding */ showInfoInDiv,
/* harmony export */   "groupArrayOfObj": () => /* binding */ groupArrayOfObj,
/* harmony export */   "IsJsonString": () => /* binding */ IsJsonString,
/* harmony export */   "IsJson5String": () => /* binding */ IsJson5String,
/* harmony export */   "createElement": () => /* binding */ createElement
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _formModules_dynamicFields__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formModules/dynamicFields */ "./public/js/formModules/dynamicFields.js");
/* eslint-disable */
;

const JSON5 = __webpack_require__(/*! json5 */ "./node_modules/json5/dist/index.js");


const ajaxCall = async (method, url) => {
  try {
    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method,
      url
    });
    return res.data.data.data;
  } catch (err) {
    console.log(err);
    return '';
  }
};
const globalEventBinders = () => {
  /* modal show form values on multiple values */
  //show field
  $(document).on('click', `.multi-value`, function (e) {
    $(this).css('display', 'none');
    const field = $(this).next();
    const isCustomized = field.hasClass('customized');
    const isSelectized = field.hasClass('selectized');
    const isDataPerms = field.hasClass('data-perms');
    const isDataRestrictTo = field.hasClass('data-restrictTo');

    if (isSelectized || isDataPerms || isDataRestrictTo || isCustomized) {
      field.css('display', 'none');
      field.next().css('display', 'block');
    } else {
      field.css('display', 'block');
    }

    $(this).siblings('.multi-restore').css('display', 'block');
  }); //hide field

  $(document).on('click', `.multi-restore`, function (e) {
    $(this).css('display', 'none');
    const field = $(this).siblings('.multi-value').next();
    const isSelectized = field.hasClass('selectized');
    const isDataPerms = field.hasClass('data-perms');
    const isCustomized = field.hasClass('customized');
    const isDataRestrictTo = field.hasClass('data-restrictTo');
    $(this).siblings('.multi-value').css('display', 'block');
    field.css('display', 'none');
    if (isSelectized || isDataPerms || isDataRestrictTo || isCustomized) field.next().css('display', 'none');
  });
};
const getCleanDivId = n => {
  if (n) {
    n = n.replace(/ /g, '_').replace(/-/g, '_').replace(/:/g, '_').replace(/,/g, '_').replace(/\$/g, '_').replace(/\!/g, '_').replace(/\</g, '_').replace(/\>/g, '_').replace(/\?/g, '_').replace(/\(/g, '_').replace(/\)/g, '_').replace(/\"/g, '_').replace(/\'/g, '_').replace(/\./g, '_').replace(/\//g, '_').replace(/\\/g, '_').replace(/@/g, '_');
  }

  return n;
}; // creates object of the form fields and change color of requiredFields
// if warn set to true, 'Please provide a valid information.' information will be added to field
// if visible set to true => display of field shouldn't be none;
// if visible set to "undefined" => hidden fields set to "undefined" to remove from db.

const createFormObj = (formValues, requiredFields, warn, visible) => {
  var formObj = {};
  var stop = false;

  for (var i = 0; i < formValues.length; i++) {
    var name = $(formValues[i]).attr('name');
    var type = $(formValues[i]).attr('type');
    const isCustomized = $(formValues[i]).hasClass('customized');
    const isSelectized = $(formValues[i]).hasClass('selectized');
    const isDataPerms = $(formValues[i]).hasClass('data-perms');
    const isDataRestrictTo = $(formValues[i]).hasClass('data-restrictTo');
    const isDynamicFields = $(formValues[i]).hasClass('dynamicFields');
    if (isDynamicFields) continue;
    const isSetExist = $(formValues[i]).siblings('.multi-value').length;
    const isSet = $(formValues[i]).siblings('.multi-value').length && $(formValues[i]).siblings('.multi-value').css('display') === 'none';
    var val = '';

    if (type == 'radio') {
      for (var k = 0; k < formValues.length; k++) {
        if ($(formValues[k]).attr('name')) {
          if ($(formValues[k]).attr('name') == name && $(formValues[k]).is(':checked')) {
            val = $(formValues[k]).val();
            break;
          }
        }
      }
    } else if (type == 'checkbox') {
      if ($(formValues[i]).is(':checked')) {
        val = true;
      } else {
        val = false;
      }
    } else if ($(formValues[i]).is('select')) {
      if ($(formValues[i]).val() === '') {
        val = '';
      } else {
        val = $(formValues[i]).val();
      }
    } else {
      val = $(formValues[i]).val();
    }

    if (requiredFields.includes(name)) {
      if (val != '' && val !== null) {
        $(formValues[i]).removeClass('is-invalid');

        if (warn && $(formValues[i]).next('div.invalid-feedback').length == 1) {
          $(formValues[i]).next('div.invalid-feedback').remove();
        }
      } else {
        $(formValues[i]).addClass('is-invalid');

        if (warn && $(formValues[i]).next('div.invalid-feedback').length == 0) {
          $(formValues[i]).after('<div class="invalid-feedback text-left">Please provide a valid information.</div>');
        }

        stop = true;
      }
    }

    if (isCustomized && $(formValues[i]).next().hasClass('dynamicFields')) {
      val = (0,_formModules_dynamicFields__WEBPACK_IMPORTED_MODULE_1__.getDynamicFieldsData)($(formValues[i]).next());
    }

    if (isDataPerms || isDataRestrictTo) {
      const table = $(formValues[i]).next().find('table');
      const rowData = table.DataTable().rows().data();
      val = {};

      for (var k = 0; k < rowData.length; k++) {
        const perm = rowData[k].perm;
        const type = rowData[k].type;
        const id = rowData[k].id;

        if (isDataPerms && perm && type && id) {
          if (!(perm in val)) val[perm] = {};
          if (!(type in val[perm])) val[perm][type] = [];
          if (!val[perm][type].includes(id)) val[perm][type].push(id);
        } else if (isDataRestrictTo && type && id) {
          if (!(type in val)) val[type] = [];
          if (!val[type].includes(id)) val[type].push(id);
        }
      }
    }

    if ((isSelectized || isDataPerms || isDataRestrictTo) && visible && !isSet && isSetExist) {
      if (visible == 'undefined') {
        val = 'undefined';
      } else {
        continue;
      }
    }

    if (isSetExist && !isDataPerms && !isSelectized && !isDataRestrictTo && visible && ($(formValues[i]).css('display') == 'none' || $(formValues[i]).closest('.row').css('display') == 'none')) {
      if (visible == 'undefined') {
        val = 'undefined';
      } else {
        continue;
      }
    } // for event form update
    // if (!isSetExist && visible == 'undefined') val = $(formValues[i]).val();


    if (name) formObj[name] = val;
  }

  return [formObj, stop];
};
const getSimpleDropdown = (options, settings) => {
  let idAttr = '';
  let nameAttr = '';
  let classAttr = '';
  if (settings.id) idAttr = `id="${settings.id}"`;
  if (settings.name) nameAttr = settings.name;
  if (settings.class) classAttr = settings.class;
  let dropdown = `<select class="form-control ${classAttr}" name="${nameAttr}" ${idAttr}>`;

  if (settings.placeholder) {
    dropdown += `<option disabled selected value="" >${settings.placeholder}</option>`;
  }

  options.forEach(i => {
    dropdown += `<option  value="${i._id}">${i.name}</option>`;
  });
  dropdown += `</select>`;
  return dropdown;
}; // convert string fields to array/object

const convertFormObj = formObj => {
  Object.keys(formObj).forEach(key => {
    try {
      if (formObj[key] && typeof formObj[key] === 'string' && (formObj[key].charAt(0) == '{' || formObj[key].charAt(0) == '[' || formObj[key] === 'false' || formObj[key] === 'true')) {
        let val = JSON5.parse(formObj[key]);
        formObj[key] = val;
      }
    } catch (err) {
      console.log('format error', err);
    }
  });
  return formObj;
};
const getUpdatedFields = (beforeUpdate, formObj) => {
  Object.keys(formObj).forEach(key => {
    if (beforeUpdate[key]) {
      if (JSON.stringify(beforeUpdate[key]) == JSON.stringify(formObj[key])) {
        delete formObj[key];
      }
    } // if (!beforeUpdate[key] && formObj[key] === '') {
    //   delete formObj[key];
    // }

  });
  return formObj;
};
const hideFormError = formValues => {
  for (var i = 0; i < formValues.length; i++) {
    $(formValues[i]).removeClass('is-invalid');

    if ($(formValues[i]).next('div.invalid-feedback').length > 0) {
      $(formValues[i]).next('div.invalid-feedback').remove();
    }
  }
};
const getDropdownFields = (data, fieldsOfCollection) => {
  let header = [];

  if (fieldsOfCollection) {
    const headerFields = fieldsOfCollection.filter(f => f.identifier === true);

    if (headerFields) {
      header = headerFields.map(field => field.name);
    }
  }

  const allFields = Object.keys(data);
  const excludeFields = ['DID', 'perms', '_id', 'DID', 'creationDate', 'lastUpdateDate', 'lastUpdatedUser', 'owner'];
  let showFields = allFields.filter(el => !(excludeFields.includes(el) || !data[el] || data[el] === null || typeof data[el] === 'object' || typeof data[el] === 'boolean'));

  if (header[0] && showFields.includes(header[0])) {
    showFields = showFields.filter(item => item !== header[0]);
    showFields.unshift(header[0]);
  } else if (showFields.includes('name')) {
    showFields = showFields.filter(item => item !== 'name');
    showFields.unshift('name');
  }

  return showFields;
};
const showFormError = (formValues, errorFields, warn) => {
  let showSuccess = false;

  if (errorFields) {
    for (var i = 0; i < formValues.length; i++) {
      var name = $(formValues[i]).attr('name');

      if (name in errorFields) {
        showSuccess = true;
        $(formValues[i]).addClass('is-invalid');

        if (errorFields[name]['message'] && warn) {
          const errorText = errorFields[name]['message'];

          if ($(formValues[i]).next('div.invalid-feedback').length == 0) {
            $(formValues[i]).after(`<div class="invalid-feedback text-left">${errorText}</div>`);
          } else {
            $(formValues[i]).next('div.invalid-feedback').remove().after(`<div class="invalid-feedback text-left">${errorText}</div>`);
          }
        }
      }
    }
  }

  return showSuccess;
};
const showInfoModal = text => {
  const modalId = '#infoModal';
  const textID = '#infoModalText'; //true if modal is open

  if ($(textID).html().length) {
    const oldText = $(textID).html();
    const newText = oldText + '<br/><br/>' + text;
    $(textID).html(newText);
  } else {
    $(modalId).off();
    $(modalId).on('show.coreui.modal', function (event) {
      $(textID).html(text);
    });
    $(modalId).on('hide.coreui.modal', function (event) {
      $(textID).html('');
    });
    $(modalId).modal('show');
  }
};
const prepareMultiUpdateModal = (formId, formBodyId, find) => {
  const formValues = $(formId).find(find);
  $(formBodyId).prepend('<p> Each field contains different values for that input. To edit and set all items to the same value, click on the field, otherwise they will retain their individual values.</p>');

  for (var k = 0; k < formValues.length; k++) {
    const isSelectized = $(formValues[k]).hasClass('selectized');
    const isDataPerms = $(formValues[k]).hasClass('data-perms');
    const isDataRestrictTo = $(formValues[k]).hasClass('data-restrictTo');
    const isCustomized = $(formValues[k]).hasClass('customized');
    const nameAttr = $(formValues[k]).attr('name');

    if (nameAttr) {
      $(formValues[k]).before(`<div class="multi-value" > Multiple Values</div>`);
      $(formValues[k]).css('display', 'none');

      if (isSelectized || isDataPerms || isDataRestrictTo || isCustomized) {
        $(formValues[k]).next().css('display', 'none');
        $(formValues[k]).next().after(`<div class="multi-restore" style="display:none;"> Undo changes</div>`);
      } else {
        $(formValues[k]).after(`<div class="multi-restore" style="display:none;"> Undo changes</div>`);
      }
    }
  }
};
const prepareClickToActivateModal = (formId, formBodyId, find, data) => {
  const formValues = $(formId).find(find);

  if (formBodyId) {
    $(formBodyId).prepend('<p> Please click to boxes below to set fields.</p>');
  }

  for (var k = 0; k < formValues.length; k++) {
    const isRequired = $(formValues[k]).attr('required');
    const nameAttr = $(formValues[k]).attr('name');
    const isSelectized = $(formValues[k]).hasClass('selectized');
    const isCustomized = $(formValues[k]).hasClass('customized');
    const isNoHide = $(formValues[k]).hasClass('no-hide');
    const isDataPerms = $(formValues[k]).hasClass('data-perms');
    const isDataRestrictTo = $(formValues[k]).hasClass('data-restrictTo');

    if (!isRequired && nameAttr && !isNoHide) {
      // value not filled
      if (!(nameAttr in data) || data[nameAttr] === null) {
        $(formValues[k]).before(`<div class="multi-value" > Click to Set Field </div>`);

        if (isSelectized || isDataPerms || isDataRestrictTo || isCustomized) {
          $(formValues[k]).next().after(`<div class="multi-restore" style="display:none;"> Unset Field</div>`);
          $(formValues[k]).css('display', 'none').next().css('display', 'none');
        } else {
          $(formValues[k]).after(`<div class="multi-restore" style="display:none;"> Unset Field</div>`);
          $(formValues[k]).css('display', 'none');
        }
      } else {
        // value filled
        $(formValues[k]).before(`<div class="multi-value" style="display:none;"> Click to Set Field </div>`);

        if (isSelectized || isDataPerms || isDataRestrictTo || isCustomized) {
          $(formValues[k]).next().after(`<div class="multi-restore" > Unset Field</div>`);
        } else {
          $(formValues[k]).after(`<div class="multi-restore" > Unset Field</div>`);
        }
      }
    }
  }
}; //use name attr to fill form

const fillFormByName = (formId, find, data, reset) => {
  if (reset && $(formId)[0] && $(formId)[0].reset) $(formId)[0].reset();
  const formValues = $(formId).find(find);

  for (var k = 0; k < formValues.length; k++) {
    const nameAttr = $(formValues[k]).attr('name');
    const radioCheck = $(formValues[k]).is(':radio');
    const checkboxCheck = $(formValues[k]).is(':checkbox'); // if select-text-opt class is found, select dropdown options based on text of the options

    const isSelectTextOpt = $(formValues[k]).hasClass('select-text-opt'); // if selectized

    const isSelectized = $(formValues[k]).hasClass('selectized'); // console.log('isSelectized', isSelectized, $(formValues[k]));
    // console.log('isSelectTextOpt', isSelectTextOpt, $(formValues[k]));

    if (data[nameAttr]) {
      if (radioCheck) {
        if (data[nameAttr] == $(formValues[k]).val()) {
          $(formValues[k]).attr('checked', true);
        }
      } else if (checkboxCheck) {
        if (data[nameAttr] == $(formValues[k]).val() || data[nameAttr] === true || data[nameAttr] === 'true') {
          $(formValues[k]).attr('checked', true);
        } else {
          $(formValues[k]).attr('checked', false);
        }
      } else {
        if (data[nameAttr] === 'on') {
          $(formValues[k]).attr('checked', true);
        } else {
          if (isSelectTextOpt && isSelectized) {
            const options = $(formValues[k])[0].selectize.options;
            let item = '';
            Object.keys(options).forEach((k, i) => {
              if (options[k].text == data[nameAttr]) item = k;
            });
            if (item) $(formValues[k])[0].selectize.setValue(item, false);
          } else if (isSelectTextOpt) {
            const item = $(formValues[k]).find('option').filter(function () {
              return $(this).html() == data[nameAttr];
            }).val();
            if (item) $(formValues[k]).val(item);
          } else if (isSelectized) {
            $(formValues[k])[0].selectize.setValue(data[nameAttr], false);
          } else {
            $(formValues[k]).val(data[nameAttr]);
          }
        }
      }
    }
  }
};
const showInfoInDiv = (textID, text) => {
  //true if modal is open
  const oldText = $(textID).html();
  let newText = '';

  if (oldText.length) {
    newText = oldText + '<br/>' + text;
  } else {
    newText = text;
  }

  $(textID).html(newText);
}; //e.g. const groupByYear = groupArrayOfObj("year"); groupByyear(albums);
// returns function that groups based on selected key.

const groupArrayOfObj = key => {
  return function group(array) {
    return array.reduce((acc, obj) => {
      const property = obj[key];
      acc[property] = acc[property] || [];
      acc[property].push(obj);
      return acc;
    }, {});
  };
};
const IsJsonString = str => {
  try {
    JSON.parse(str);
  } catch (e) {
    return false;
  }

  return true;
};
const IsJson5String = str => {
  try {
    JSON5.parse(str);
  } catch (e) {
    return false;
  }

  return true;
};
const createElement = (type, fields, options) => {
  var element = document.createElement(type);

  for (var x = 0; x < fields.length; x++) {
    if (fields[x] == 'OPTION') {
      var opt = document.createElement('option');
      opt.value = options[x];
      opt.innerHTML = options[x];
      element.appendChild(opt);
    } else if (fields[x] == 'OPTION_DIS_SEL') {
      var opt = document.createElement('option');
      opt.value = options[x];
      opt.innerHTML = options[x];
      opt.disabled = true;
      opt.selected = true;
      element.appendChild(opt);
    } else if (fields[x] == 'TEXTNODE') {
      element.appendChild(document.createTextNode(options[x]));
    } else if (fields[x] == 'type' && options[x] == 'button') {
      element.setAttribute(fields[x], options[x]);
      element.innerHTML = element.value;
    } else if (fields[x] == 'INNERHTML') {
      element.innerHTML = options[x];
    } else {
      element.setAttribute(fields[x], options[x]);
    }
  }

  return element;
};

/***/ }),

/***/ "./public/js/library/d3_3.5.3.js":
/*!***************************************!*\
  !*** ./public/js/library/d3_3.5.3.js ***!
  \***************************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements: __webpack_require__, __webpack_exports__, module */
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function () {
  var d3 = {
    version: "3.5.3"
  };
  if (!Date.now) Date.now = function () {
    return +new Date();
  };

  var d3_arraySlice = [].slice,
      d3_array = function (list) {
    return d3_arraySlice.call(list);
  };

  var d3_document = document,
      d3_documentElement = d3_document.documentElement,
      d3_window = window;

  try {
    d3_array(d3_documentElement.childNodes)[0].nodeType;
  } catch (e) {
    d3_array = function (list) {
      var i = list.length,
          array = new Array(i);

      while (i--) array[i] = list[i];

      return array;
    };
  }

  try {
    d3_document.createElement("div").style.setProperty("opacity", 0, "");
  } catch (error) {
    var d3_element_prototype = d3_window.Element.prototype,
        d3_element_setAttribute = d3_element_prototype.setAttribute,
        d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,
        d3_style_prototype = d3_window.CSSStyleDeclaration.prototype,
        d3_style_setProperty = d3_style_prototype.setProperty;

    d3_element_prototype.setAttribute = function (name, value) {
      d3_element_setAttribute.call(this, name, value + "");
    };

    d3_element_prototype.setAttributeNS = function (space, local, value) {
      d3_element_setAttributeNS.call(this, space, local, value + "");
    };

    d3_style_prototype.setProperty = function (name, value, priority) {
      d3_style_setProperty.call(this, name, value + "", priority);
    };
  }

  d3.ascending = d3_ascending;

  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }

  d3.descending = function (a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };

  d3.min = function (array, f) {
    var i = -1,
        n = array.length,
        a,
        b;

    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }

      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }

      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }

    return a;
  };

  d3.max = function (array, f) {
    var i = -1,
        n = array.length,
        a,
        b;

    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }

      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }

      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }

    return a;
  };

  d3.extent = function (array, f) {
    var i = -1,
        n = array.length,
        a,
        b,
        c;

    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = c = b;
        break;
      }

      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = c = b;
        break;
      }

      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }

    return [a, c];
  };

  function d3_number(x) {
    return x === null ? NaN : +x;
  }

  function d3_numeric(x) {
    return !isNaN(x);
  }

  d3.sum = function (array, f) {
    var s = 0,
        n = array.length,
        a,
        i = -1;

    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
    } else {
      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
    }

    return s;
  };

  d3.mean = function (array, f) {
    var s = 0,
        n = array.length,
        a,
        i = -1,
        j = n;

    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;
    }

    if (j) return s / j;
  };

  d3.quantile = function (values, p) {
    var H = (values.length - 1) * p + 1,
        h = Math.floor(H),
        v = +values[h - 1],
        e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };

  d3.median = function (array, f) {
    var numbers = [],
        n = array.length,
        a,
        i = -1;

    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
    }

    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
  };

  d3.variance = function (array, f) {
    var n = array.length,
        m = 0,
        a,
        d,
        s = 0,
        i = -1,
        j = 0;

    if (arguments.length === 1) {
      while (++i < n) {
        if (d3_numeric(a = d3_number(array[i]))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    } else {
      while (++i < n) {
        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    }

    if (j > 1) return s / (j - 1);
  };

  d3.deviation = function () {
    var v = d3.variance.apply(this, arguments);
    return v ? Math.sqrt(v) : v;
  };

  function d3_bisector(compare) {
    return {
      left: function (a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;

        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
        }

        return lo;
      },
      right: function (a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;

        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
        }

        return lo;
      }
    };
  }

  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;

  d3.bisector = function (f) {
    return d3_bisector(f.length === 1 ? function (d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };

  d3.shuffle = function (array, i0, i1) {
    if ((m = arguments.length) < 3) {
      i1 = array.length;
      if (m < 2) i0 = 0;
    }

    var m = i1 - i0,
        t,
        i;

    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
    }

    return array;
  };

  d3.permute = function (array, indexes) {
    var i = indexes.length,
        permutes = new Array(i);

    while (i--) permutes[i] = array[indexes[i]];

    return permutes;
  };

  d3.pairs = function (array) {
    var i = 0,
        n = array.length - 1,
        p0,
        p1 = array[0],
        pairs = new Array(n < 0 ? 0 : n);

    while (i < n) pairs[i] = [p0 = p1, p1 = array[++i]];

    return pairs;
  };

  d3.zip = function () {
    if (!(n = arguments.length)) return [];

    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m;) {
      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n;) {
        zip[j] = arguments[j][i];
      }
    }

    return zips;
  };

  function d3_zipLength(d) {
    return d.length;
  }

  d3.transpose = function (matrix) {
    return d3.zip.apply(d3, matrix);
  };

  d3.keys = function (map) {
    var keys = [];

    for (var key in map) keys.push(key);

    return keys;
  };

  d3.values = function (map) {
    var values = [];

    for (var key in map) values.push(map[key]);

    return values;
  };

  d3.entries = function (map) {
    var entries = [];

    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });

    return entries;
  };

  d3.merge = function (arrays) {
    var n = arrays.length,
        m,
        i = -1,
        j = 0,
        merged,
        array;

    while (++i < n) j += arrays[i].length;

    merged = new Array(j);

    while (--n >= 0) {
      array = arrays[n];
      m = array.length;

      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }

    return merged;
  };

  var abs = Math.abs;

  d3.range = function (start, stop, step) {
    if (arguments.length < 3) {
      step = 1;

      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }

    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [],
        k = d3_range_integerScale(abs(step)),
        i = -1,
        j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k);else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };

  function d3_range_integerScale(x) {
    var k = 1;

    while (x * k % 1) k *= 10;

    return k;
  }

  function d3_class(ctor, properties) {
    for (var key in properties) {
      Object.defineProperty(ctor.prototype, key, {
        value: properties[key],
        enumerable: false
      });
    }
  }

  d3.map = function (object, f) {
    var map = new d3_Map();

    if (object instanceof d3_Map) {
      object.forEach(function (key, value) {
        map.set(key, value);
      });
    } else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (arguments.length === 1) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f.call(object, o = object[i], i), o);
    } else {
      for (var key in object) map.set(key, object[key]);
    }

    return map;
  };

  function d3_Map() {
    this._ = Object.create(null);
  }

  var d3_map_proto = "__proto__",
      d3_map_zero = "\x00";
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function (key) {
      return this._[d3_map_escape(key)];
    },
    set: function (key, value) {
      return this._[d3_map_escape(key)] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function () {
      var values = [];

      for (var key in this._) values.push(this._[key]);

      return values;
    },
    entries: function () {
      var entries = [];

      for (var key in this._) entries.push({
        key: d3_map_unescape(key),
        value: this._[key]
      });

      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function (f) {
      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
    }
  });

  function d3_map_escape(key) {
    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
  }

  function d3_map_unescape(key) {
    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
  }

  function d3_map_has(key) {
    return d3_map_escape(key) in this._;
  }

  function d3_map_remove(key) {
    return (key = d3_map_escape(key)) in this._ && delete this._[key];
  }

  function d3_map_keys() {
    var keys = [];

    for (var key in this._) keys.push(d3_map_unescape(key));

    return keys;
  }

  function d3_map_size() {
    var size = 0;

    for (var key in this._) ++size;

    return size;
  }

  function d3_map_empty() {
    for (var key in this._) return false;

    return true;
  }

  d3.nest = function () {
    var nest = {},
        keys = [],
        sortKeys = [],
        sortValues,
        rollup;

    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1,
          n = array.length,
          key = keys[depth++],
          keyValue,
          object,
          setter,
          valuesByKey = new d3_Map(),
          values;

      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [object]);
        }
      }

      if (mapType) {
        object = mapType();

        setter = function (keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};

        setter = function (keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }

      valuesByKey.forEach(setter);
      return object;
    }

    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [],
          sortKey = sortKeys[depth++];
      map.forEach(function (key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function (a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }

    nest.map = function (array, mapType) {
      return map(mapType, array, 0);
    };

    nest.entries = function (array) {
      return entries(map(d3.map, array, 0), 0);
    };

    nest.key = function (d) {
      keys.push(d);
      return nest;
    };

    nest.sortKeys = function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };

    nest.sortValues = function (order) {
      sortValues = order;
      return nest;
    };

    nest.rollup = function (f) {
      rollup = f;
      return nest;
    };

    return nest;
  };

  d3.set = function (array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };

  function d3_Set() {
    this._ = Object.create(null);
  }

  d3_class(d3_Set, {
    has: d3_map_has,
    add: function (key) {
      this._[d3_map_escape(key += "")] = true;
      return key;
    },
    remove: d3_map_remove,
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function (f) {
      for (var key in this._) f.call(this, d3_map_unescape(key));
    }
  });
  d3.behavior = {};

  d3.rebind = function (target, source) {
    var i = 1,
        n = arguments.length,
        method;

    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);

    return target;
  };

  function d3_rebind(target, source, method) {
    return function () {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }

  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.slice(1);

    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }

  var d3_vendorPrefixes = ["webkit", "ms", "moz", "Moz", "o", "O"];

  function d3_noop() {}

  d3.dispatch = function () {
    var dispatch = new d3_dispatch(),
        i = -1,
        n = arguments.length;

    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);

    return dispatch;
  };

  function d3_dispatch() {}

  d3_dispatch.prototype.on = function (type, listener) {
    var i = type.indexOf("."),
        name = "";

    if (i >= 0) {
      name = type.slice(i + 1);
      type = type.slice(0, i);
    }

    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);

    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };

  function d3_dispatch_event(dispatch) {
    var listeners = [],
        listenerByName = new d3_Map();

    function event() {
      var z = listeners,
          i = -1,
          n = z.length,
          l;

      while (++i < n) if (l = z[i].on) l.apply(this, arguments);

      return dispatch;
    }

    event.on = function (name, listener) {
      var l = listenerByName.get(name),
          i;
      if (arguments.length < 2) return l && l.on;

      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }

      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };

    return event;
  }

  d3.event = null;

  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }

  function d3_eventSource() {
    var e = d3.event,
        s;

    while (s = e.sourceEvent) e = s;

    return e;
  }

  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(),
        i = 0,
        n = arguments.length;

    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);

    dispatch.of = function (thiz, argumentz) {
      return function (e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };

    return dispatch;
  }

  d3.requote = function (s) {
    return s.replace(d3_requote_re, "\\$&");
  };

  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function (object, prototype) {
    object.__proto__ = prototype;
  } : function (object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };

  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }

  var d3_select = function (s, n) {
    return n.querySelector(s);
  },
      d3_selectAll = function (s, n) {
    return n.querySelectorAll(s);
  },
      d3_selectMatcher = d3_documentElement.matches || d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")],
      d3_selectMatches = function (n, s) {
    return d3_selectMatcher.call(n, s);
  };

  if (typeof Sizzle === "function") {
    d3_select = function (s, n) {
      return Sizzle(s, n)[0] || null;
    };

    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }

  d3.selection = function () {
    return d3_selectionRoot;
  };

  var d3_selectionPrototype = d3.selection.prototype = [];

  d3_selectionPrototype.select = function (selector) {
    var subgroups = [],
        subgroup,
        subnode,
        group,
        node;
    selector = d3_selection_selector(selector);

    for (var j = -1, m = this.length; ++j < m;) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;

      for (var i = -1, n = group.length; ++i < n;) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }

    return d3_selection(subgroups);
  };

  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function () {
      return d3_select(selector, this);
    };
  }

  d3_selectionPrototype.selectAll = function (selector) {
    var subgroups = [],
        subgroup,
        node;
    selector = d3_selection_selectorAll(selector);

    for (var j = -1, m = this.length; ++j < m;) {
      for (var group = this[j], i = -1, n = group.length; ++i < n;) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }

    return d3_selection(subgroups);
  };

  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function () {
      return d3_selectAll(selector, this);
    };
  }

  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function (name) {
      var i = name.indexOf(":"),
          prefix = name;

      if (i >= 0) {
        prefix = name.slice(0, i);
        name = name.slice(i + 1);
      }

      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };

  d3_selectionPrototype.attr = function (name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }

      for (value in name) this.each(d3_selection_attr(value, name[value]));

      return this;
    }

    return this.each(d3_selection_attr(name, value));
  };

  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);

    function attrNull() {
      this.removeAttribute(name);
    }

    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }

    function attrConstant() {
      this.setAttribute(name, value);
    }

    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }

    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);
    }

    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);
    }

    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }

  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }

  d3_selectionPrototype.classed = function (name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(),
            n = (name = d3_selection_classes(name)).length,
            i = -1;

        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");

          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }

        return true;
      }

      for (value in name) this.each(d3_selection_classed(value, name[value]));

      return this;
    }

    return this.each(d3_selection_classed(name, value));
  };

  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }

  function d3_selection_classes(name) {
    return (name + "").trim().split(/^|\s+/);
  }

  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;

    function classedConstant() {
      var i = -1;

      while (++i < n) name[i](this, value);
    }

    function classedFunction() {
      var i = -1,
          x = value.apply(this, arguments);

      while (++i < n) name[i](this, x);
    }

    return typeof value === "function" ? classedFunction : classedConstant;
  }

  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function (node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";

      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }

  d3_selectionPrototype.style = function (name, value, priority) {
    var n = arguments.length;

    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";

        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));

        return this;
      }

      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
      priority = "";
    }

    return this.each(d3_selection_style(name, value, priority));
  };

  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }

    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }

    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);
    }

    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }

  d3_selectionPrototype.property = function (name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];

      for (value in name) this.each(d3_selection_property(value, name[value]));

      return this;
    }

    return this.each(d3_selection_property(name, value));
  };

  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }

    function propertyConstant() {
      this[name] = value;
    }

    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name];else this[name] = x;
    }

    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }

  d3_selectionPrototype.text = function (value) {
    return arguments.length ? this.each(typeof value === "function" ? function () {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function () {
      this.textContent = "";
    } : function () {
      this.textContent = value;
    }) : this.node().textContent;
  };

  d3_selectionPrototype.html = function (value) {
    return arguments.length ? this.each(typeof value === "function" ? function () {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function () {
      this.innerHTML = "";
    } : function () {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };

  d3_selectionPrototype.append = function (name) {
    name = d3_selection_creator(name);
    return this.select(function () {
      return this.appendChild(name.apply(this, arguments));
    });
  };

  function d3_selection_creator(name) {
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function () {
      return this.ownerDocument.createElementNS(name.space, name.local);
    } : function () {
      return this.ownerDocument.createElementNS(this.namespaceURI, name);
    };
  }

  d3_selectionPrototype.insert = function (name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function () {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };

  d3_selectionPrototype.remove = function () {
    return this.each(d3_selectionRemove);
  };

  function d3_selectionRemove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }

  d3_selectionPrototype.data = function (value, key) {
    var i = -1,
        n = this.length,
        group,
        node;

    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);

      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }

      return value;
    }

    function bind(group, groupData) {
      var i,
          n = group.length,
          m = groupData.length,
          n0 = Math.min(n, m),
          updateNodes = new Array(m),
          enterNodes = new Array(m),
          exitNodes = new Array(n),
          node,
          nodeData;

      if (key) {
        var nodeByKeyValue = new d3_Map(),
            keyValues = new Array(n),
            keyValue;

        for (i = -1; ++i < n;) {
          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {
            exitNodes[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }

          keyValues[i] = keyValue;
        }

        for (i = -1; ++i < m;) {
          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          } else if (node !== true) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          }

          nodeByKeyValue.set(keyValue, true);
        }

        for (i = -1; ++i < n;) {
          if (nodeByKeyValue.get(keyValues[i]) !== true) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0;) {
          node = group[i];
          nodeData = groupData[i];

          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }

        for (; i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }

        for (; i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }

      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }

    var enter = d3_selection_enter([]),
        update = d3_selection([]),
        exit = d3_selection([]);

    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }

    update.enter = function () {
      return enter;
    };

    update.exit = function () {
      return exit;
    };

    return update;
  };

  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }

  d3_selectionPrototype.datum = function (value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };

  d3_selectionPrototype.filter = function (filter) {
    var subgroups = [],
        subgroup,
        group,
        node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);

    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;

      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }

    return d3_selection(subgroups);
  };

  function d3_selection_filter(selector) {
    return function () {
      return d3_selectMatches(this, selector);
    };
  }

  d3_selectionPrototype.order = function () {
    for (var j = -1, m = this.length; ++j < m;) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }

    return this;
  };

  d3_selectionPrototype.sort = function (comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);

    for (var j = -1, m = this.length; ++j < m;) this[j].sort(comparator);

    return this.order();
  };

  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function (a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }

  d3_selectionPrototype.each = function (callback) {
    return d3_selection_each(this, function (node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };

  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }

    return groups;
  }

  d3_selectionPrototype.call = function (callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };

  d3_selectionPrototype.empty = function () {
    return !this.node();
  };

  d3_selectionPrototype.node = function () {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }

    return null;
  };

  d3_selectionPrototype.size = function () {
    var n = 0;
    d3_selection_each(this, function () {
      ++n;
    });
    return n;
  };

  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }

  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;

  d3_selection_enterPrototype.select = function (selector) {
    var subgroups = [],
        subgroup,
        subnode,
        upgroup,
        group,
        node;

    for (var j = -1, m = this.length; ++j < m;) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;

      for (var i = -1, n = group.length; ++i < n;) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }

    return d3_selection(subgroups);
  };

  d3_selection_enterPrototype.insert = function (name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };

  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function (d, i, j) {
      var group = enter[j].update,
          n = group.length,
          node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;

      while (!(node = group[i0]) && ++i0 < n);

      return node;
    };
  }

  d3.select = function (node) {
    var group = [typeof node === "string" ? d3_select(node, d3_document) : node];
    group.parentNode = d3_documentElement;
    return d3_selection([group]);
  };

  d3.selectAll = function (nodes) {
    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
    group.parentNode = d3_documentElement;
    return d3_selection([group]);
  };

  var d3_selectionRoot = d3.select(d3_documentElement);

  d3_selectionPrototype.on = function (type, listener, capture) {
    var n = arguments.length;

    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;

        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));

        return this;
      }

      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }

    return this.each(d3_selection_on(type, listener, capture));
  };

  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type,
        i = type.indexOf("."),
        wrap = d3_selection_onListener;
    if (i > 0) type = type.slice(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;

    function onRemove() {
      var l = this[name];

      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }

    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }

    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"),
          match;

      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }

    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }

  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  d3_selection_onFilters.forEach(function (k) {
    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
  });

  function d3_selection_onListener(listener, argumentz) {
    return function (e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;

      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }

  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function (e) {
      var target = this,
          related = e.relatedTarget;

      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }

  var d3_event_dragSelect = "onselectstart" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, "userSelect"),
      d3_event_dragId = 0;

  function d3_event_dragSuppress() {
    var name = ".dragsuppress-" + ++d3_event_dragId,
        click = "click" + name,
        w = d3.select(d3_window).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);

    if (d3_event_dragSelect) {
      var style = d3_documentElement.style,
          select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }

    return function (suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;

      if (suppressClick) {
        var off = function () {
          w.on(click, null);
        };

        w.on(click, function () {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }

  d3.mouse = function (container) {
    return d3_mousePoint(container, d3_eventSource());
  };

  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;

  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;

    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();

      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {
        svg = d3.select("body").append("svg").style({
          position: "absolute",
          top: 0,
          left: 0,
          margin: 0,
          padding: 0,
          border: "none"
        }, "important");
        var ctm = svg[0][0].getScreenCTM();
        d3_mouse_bug44083 = !(ctm.f || ctm.e);
        svg.remove();
      }

      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [point.x, point.y];
    }

    var rect = container.getBoundingClientRect();
    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];
  }

  d3.touch = function (container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };

  d3.behavior.drag = function () {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"),
        origin = null,
        mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, "mousemove", "mouseup"),
        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, "touchmove", "touchend");

    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }

    function dragstart(id, position, subject, move, end) {
      return function () {
        var that = this,
            target = d3.event.target,
            parent = that.parentNode,
            dispatch = event.of(that, arguments),
            dragged = 0,
            dragId = id(),
            dragName = ".drag" + (dragId == null ? "" : "-" + dragId),
            dragOffset,
            dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended),
            dragRestore = d3_event_dragSuppress(),
            position0 = position(parent, dragId);

        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];
        } else {
          dragOffset = [0, 0];
        }

        dispatch({
          type: "dragstart"
        });

        function moved() {
          var position1 = position(parent, dragId),
              dx,
              dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }

        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged && d3.event.target === target);
          dispatch({
            type: "dragend"
          });
        }
      };
    }

    drag.origin = function (x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };

    return d3.rebind(drag, event, "on");
  };

  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }

  function d3_behavior_dragTouchSubject() {
    return d3.event.target;
  }

  function d3_behavior_dragMouseSubject() {
    return d3_window;
  }

  d3.touches = function (container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function (touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };

  var ε = 1e-6,
      ε2 = ε * ε,
      π = Math.PI,
      τ = 2 * π,
      τε = τ - ε,
      halfπ = π / 2,
      d3_radians = π / 180,
      d3_degrees = 180 / π;

  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }

  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }

  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }

  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }

  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }

  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }

  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }

  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }

  var ρ = Math.SQRT2,
      ρ2 = 2,
      ρ4 = 4;

  d3.interpolateZoom = function (p0, p1) {
    var ux0 = p0[0],
        uy0 = p0[1],
        w0 = p0[2],
        ux1 = p1[0],
        uy1 = p1[1],
        w1 = p1[2];
    var dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        d1 = Math.sqrt(d2),
        b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),
        b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),
        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1),
        dr = r1 - r0,
        S = (dr || Math.log(w1 / w0)) / ρ;

    function interpolate(t) {
      var s = t * S;

      if (dr) {
        var coshr0 = d3_cosh(r0),
            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];
      }

      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s)];
    }

    interpolate.duration = S * 1e3;
    return interpolate;
  };

  d3.behavior.zoom = function () {
    var view = {
      x: 0,
      y: 0,
      k: 1
    },
        translate0,
        center0,
        center,
        size = [960, 500],
        scaleExtent = d3_behavior_zoomInfinity,
        duration = 250,
        zooming = 0,
        mousedown = "mousedown.zoom",
        mousemove = "mousemove.zoom",
        mouseup = "mouseup.zoom",
        mousewheelTimer,
        touchstart = "touchstart.zoom",
        touchtime,
        event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"),
        x0,
        x1,
        y0,
        y1;

    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }

    zoom.event = function (g) {
      g.each(function () {
        var dispatch = event.of(this, arguments),
            view1 = view;

        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function () {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function () {
            var dx = size[0],
                dy = size[1],
                cx = center0 ? center0[0] : dx / 2,
                cy = center0 ? center0[1] : dy / 2,
                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);
            return function (t) {
              var l = i(t),
                  k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("interrupt.zoom", function () {
            zoomended(dispatch);
          }).each("end.zoom", function () {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };

    zoom.translate = function (_) {
      if (!arguments.length) return [view.x, view.y];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };

    zoom.scale = function (_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: +_
      };
      rescale();
      return zoom;
    };

    zoom.scaleExtent = function (_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];
      return zoom;
    };

    zoom.center = function (_) {
      if (!arguments.length) return center;
      center = _ && [+_[0], +_[1]];
      return zoom;
    };

    zoom.size = function (_) {
      if (!arguments.length) return size;
      size = _ && [+_[0], +_[1]];
      return zoom;
    };

    zoom.duration = function (_) {
      if (!arguments.length) return duration;
      duration = +_;
      return zoom;
    };

    zoom.x = function (z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };

    zoom.y = function (z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };

    function location(p) {
      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];
    }

    function point(l) {
      return [l[0] * view.k + view.x, l[1] * view.k + view.y];
    }

    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }

    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }

    function zoomTo(that, p, l, k) {
      that.__chart__ = {
        x: view.x,
        y: view.y,
        k: view.k
      };
      scaleTo(Math.pow(2, k));
      translateTo(center0 = p, l);
      that = d3.select(that);
      if (duration > 0) that = that.transition().duration(duration);
      that.call(zoom.event);
    }

    function rescale() {
      if (x1) x1.domain(x0.range().map(function (x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function (y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }

    function zoomstarted(dispatch) {
      if (!zooming++) dispatch({
        type: "zoomstart"
      });
    }

    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [view.x, view.y]
      });
    }

    function zoomended(dispatch) {
      if (! --zooming) dispatch({
        type: "zoomend"
      });
      center0 = null;
    }

    function mousedowned() {
      var that = this,
          target = d3.event.target,
          dispatch = event.of(that, arguments),
          dragged = 0,
          subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended),
          location0 = location(d3.mouse(that)),
          dragRestore = d3_event_dragSuppress();
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);

      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }

      function ended() {
        subject.on(mousemove, null).on(mouseup, null);
        dragRestore(dragged && d3.event.target === target);
        zoomended(dispatch);
      }
    }

    function touchstarted() {
      var that = this,
          dispatch = event.of(that, arguments),
          locations0 = {},
          distance0 = 0,
          scale0,
          zoomName = ".zoom-" + d3.event.changedTouches[0].identifier,
          touchmove = "touchmove" + zoomName,
          touchend = "touchend" + zoomName,
          targets = [],
          subject = d3.select(that),
          dragRestore = d3_event_dragSuppress();
      started();
      zoomstarted(dispatch);
      subject.on(mousedown, null).on(touchstart, started);

      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function (t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }

      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;

        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }

        var touches = relocate(),
            now = Date.now();

        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0];
            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
            d3_eventPreventDefault();
          }

          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0],
              q = touches[1],
              dx = p[0] - q[0],
              dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }

      function moved() {
        var touches = d3.touches(that),
            p0,
            l0,
            p1,
            l1;
        d3_selection_interrupt.call(that);

        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];

          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }

        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,
              scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
          scaleTo(scale1 * scale0);
        }

        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }

      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;

          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }

          for (var identifier in locations0) {
            return void relocate();
          }
        }

        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }

    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer);else translate0 = location(center0 = center || d3.mouse(this)), d3_selection_interrupt.call(this), zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function () {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(center0, translate0);
      zoomed(dispatch);
    }

    function dblclicked() {
      var p = d3.mouse(this),
          k = Math.log(view.k) / Math.LN2;
      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
    }

    return d3.rebind(zoom, event, "on");
  };

  var d3_behavior_zoomInfinity = [0, Infinity];
  var d3_behavior_zoomDelta,
      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function () {
    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function () {
    return d3.event.wheelDelta;
  }, "mousewheel") : (d3_behavior_zoomDelta = function () {
    return -d3.event.detail;
  }, "MozMousePixelScroll");
  d3.color = d3_color;

  function d3_color() {}

  d3_color.prototype.toString = function () {
    return this.rgb() + "";
  };

  d3.hsl = d3_hsl;

  function d3_hsl(h, s, l) {
    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
  }

  var d3_hslPrototype = d3_hsl.prototype = new d3_color();

  d3_hslPrototype.brighter = function (k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, this.l / k);
  };

  d3_hslPrototype.darker = function (k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, k * this.l);
  };

  d3_hslPrototype.rgb = function () {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };

  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;

    function v(h) {
      if (h > 360) h -= 360;else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }

    function vv(h) {
      return Math.round(v(h) * 255);
    }

    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }

  d3.hcl = d3_hcl;

  function d3_hcl(h, c, l) {
    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
  }

  var d3_hclPrototype = d3_hcl.prototype = new d3_color();

  d3_hclPrototype.brighter = function (k) {
    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };

  d3_hclPrototype.darker = function (k) {
    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };

  d3_hclPrototype.rgb = function () {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };

  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }

  d3.lab = d3_lab;

  function d3_lab(l, a, b) {
    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
  }

  var d3_lab_K = 18;
  var d3_lab_X = .95047,
      d3_lab_Y = 1,
      d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_lab.prototype = new d3_color();

  d3_labPrototype.brighter = function (k) {
    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };

  d3_labPrototype.darker = function (k) {
    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };

  d3_labPrototype.rgb = function () {
    return d3_lab_rgb(this.l, this.a, this.b);
  };

  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116,
        x = y + a / 500,
        z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }

  function d3_lab_hcl(l, a, b) {
    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
  }

  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }

  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }

  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }

  d3.rgb = d3_rgb;

  function d3_rgb(r, g, b) {
    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
  }

  function d3_rgbNumber(value) {
    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }

  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }

  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();

  d3_rgbPrototype.brighter = function (k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r,
        g = this.g,
        b = this.b,
        i = 30;
    if (!r && !g && !b) return new d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
  };

  d3_rgbPrototype.darker = function (k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_rgb(k * this.r, k * this.g, k * this.b);
  };

  d3_rgbPrototype.hsl = function () {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };

  d3_rgbPrototype.toString = function () {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };

  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }

  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0,
        g = 0,
        b = 0,
        m1,
        m2,
        color;
    m1 = /([a-z]+)\((.*)\)/i.exec(format);

    if (m1) {
      m2 = m1[2].split(",");

      switch (m1[1]) {
        case "hsl":
          {
            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
          }

        case "rgb":
          {
            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
          }
      }
    }

    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);

    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }

    return rgb(r, g, b);
  }

  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255),
        max = Math.max(r, g, b),
        d = max - min,
        h,
        s,
        l = (max + min) / 2;

    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }

    return new d3_hsl(h, s, l);
  }

  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),
        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),
        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }

  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }

  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }

  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function (key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });

  function d3_functor(v) {
    return typeof v === "function" ? v : function () {
      return v;
    };
  }

  d3.functor = d3_functor;

  function d3_identity(d) {
    return d;
  }

  d3.xhr = d3_xhrType(d3_identity);

  function d3_xhrType(response) {
    return function (url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }

  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {},
        dispatch = d3.dispatch("beforesend", "progress", "load", "error"),
        headers = {},
        request = new XMLHttpRequest(),
        responseType = null;
    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {
      request.readyState > 3 && respond();
    };

    function respond() {
      var status = request.status,
          result;

      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }

        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }

    request.onprogress = function (event) {
      var o = d3.event;
      d3.event = event;

      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };

    xhr.header = function (name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name];else headers[name] = value + "";
      return xhr;
    };

    xhr.mimeType = function (value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };

    xhr.responseType = function (value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };

    xhr.response = function (value) {
      response = value;
      return xhr;
    };

    ["get", "post"].forEach(function (method) {
      xhr[method] = function () {
        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));
      };
    });

    xhr.send = function (method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function (request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };

    xhr.abort = function () {
      request.abort();
      return xhr;
    };

    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }

  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function (error, request) {
      callback(error == null ? request : null);
    } : callback;
  }

  function d3_xhrHasResponse(request) {
    var type = request.responseType;
    return type && type !== "text" ? request.response : request.responseText;
  }

  d3.dsv = function (delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"),
        delimiterCode = delimiter.charCodeAt(0);

    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);

      xhr.row = function (_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };

      return xhr;
    }

    function response(request) {
      return dsv.parse(request.responseText);
    }

    function typedResponse(f) {
      return function (request) {
        return dsv.parse(request.responseText, f);
      };
    }

    dsv.parse = function (text, f) {
      var o;
      return dsv.parseRows(text, function (row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function (name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function (row, i) {
          return f(a(row), i);
        } : a;
      });
    };

    dsv.parseRows = function (text, f) {
      var EOL = {},
          EOF = {},
          rows = [],
          N = text.length,
          I = 0,
          n = 0,
          t,
          eol;

      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;

        if (text.charCodeAt(j) === 34) {
          var i = j;

          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }

          I = i + 2;
          var c = text.charCodeAt(i + 1);

          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }

          return text.slice(j + 1, i).replace(/""/g, '"');
        }

        while (I < N) {
          var c = text.charCodeAt(I++),
              k = 1;
          if (c === 10) eol = true;else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.slice(j, I - k);
        }

        return text.slice(j);
      }

      while ((t = token()) !== EOF) {
        var a = [];

        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }

        if (f && (a = f(a, n++)) == null) continue;
        rows.push(a);
      }

      return rows;
    };

    dsv.format = function (rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(),
          fields = [];
      rows.forEach(function (row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {
        return fields.map(function (field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };

    dsv.formatRows = function (rows) {
      return rows.map(formatRow).join("\n");
    };

    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }

    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }

    return dsv;
  };

  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");

  var d3_timer_queueHead,
      d3_timer_queueTail,
      d3_timer_interval,
      d3_timer_timeout,
      d3_timer_active,
      d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function (callback) {
    setTimeout(callback, 17);
  };

  d3.timer = function (callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay,
        timer = {
      c: callback,
      t: time,
      f: false,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;

    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  };

  function d3_timer_step() {
    var now = d3_timer_mark(),
        delay = d3_timer_sweep() - now;

    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }

      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }

  d3.timer.flush = function () {
    d3_timer_mark();
    d3_timer_sweep();
  };

  function d3_timer_mark() {
    var now = Date.now();
    d3_timer_active = d3_timer_queueHead;

    while (d3_timer_active) {
      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
      d3_timer_active = d3_timer_active.n;
    }

    return now;
  }

  function d3_timer_sweep() {
    var t0,
        t1 = d3_timer_queueHead,
        time = Infinity;

    while (t1) {
      if (t1.f) {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      } else {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      }
    }

    d3_timer_queueTail = t0;
    return time;
  }

  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }

  d3.round = function (x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };

  var d3_formatPrefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(d3_formatPrefix);

  d3.formatPrefix = function (value, precision) {
    var i = 0;

    if (value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }

    return d3_formatPrefixes[8 + i / 3];
  };

  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function (d) {
        return d / k;
      } : function (d) {
        return d * k;
      },
      symbol: d
    };
  }

  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal,
        locale_thousands = locale.thousands,
        locale_grouping = locale.grouping,
        locale_currency = locale.currency,
        formatGroup = locale_grouping && locale_thousands ? function (value, width) {
      var i = value.length,
          t = [],
          j = 0,
          g = locale_grouping[0],
          length = 0;

      while (i > 0 && g > 0) {
        if (length + g + 1 > width) g = Math.max(1, width - length);
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) break;
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }

      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function (specifier) {
      var match = d3_format_re.exec(specifier),
          fill = match[1] || " ",
          align = match[2] || ">",
          sign = match[3] || "-",
          symbol = match[4] || "",
          zfill = match[5],
          width = +match[6],
          comma = match[7],
          precision = match[8],
          type = match[9],
          scale = 1,
          prefix = "",
          suffix = "",
          integer = false,
          exponent = true;
      if (precision) precision = +precision.substring(1);

      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
      }

      switch (type) {
        case "n":
          comma = true;
          type = "g";
          break;

        case "%":
          scale = 100;
          suffix = "%";
          type = "f";
          break;

        case "p":
          scale = 100;
          suffix = "%";
          type = "r";
          break;

        case "b":
        case "o":
        case "x":
        case "X":
          if (symbol === "#") prefix = "0" + type.toLowerCase();

        case "c":
          exponent = false;

        case "d":
          integer = true;
          precision = 0;
          break;

        case "s":
          scale = -1;
          type = "r";
          break;
      }

      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";

      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision));else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }

      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function (value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;

        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }

        value = type(value, precision);
        var i = value.lastIndexOf("."),
            before,
            after;

        if (i < 0) {
          var j = exponent ? value.lastIndexOf("e") : -1;
          if (j < 0) before = value, after = "";else before = value.substring(0, j), after = value.substring(j);
        } else {
          before = value.substring(0, i);
          after = locale_decimal + value.substring(i + 1);
        }

        if (!zfill && comma) before = formatGroup(before, Infinity);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),
            padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }

  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function (x) {
      return x.toString(2);
    },
    c: function (x) {
      return String.fromCharCode(x);
    },
    o: function (x) {
      return x.toString(8);
    },
    x: function (x) {
      return x.toString(16);
    },
    X: function (x) {
      return x.toString(16).toUpperCase();
    },
    g: function (x, p) {
      return x.toPrecision(p);
    },
    e: function (x, p) {
      return x.toExponential(p);
    },
    f: function (x, p) {
      return x.toFixed(p);
    },
    r: function (x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });

  function d3_format_typeDefault(x) {
    return x + "";
  }

  var d3_time = d3.time = {},
      d3_date = Date;

  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }

  d3_date_utc.prototype = {
    getDate: function () {
      return this._.getUTCDate();
    },
    getDay: function () {
      return this._.getUTCDay();
    },
    getFullYear: function () {
      return this._.getUTCFullYear();
    },
    getHours: function () {
      return this._.getUTCHours();
    },
    getMilliseconds: function () {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function () {
      return this._.getUTCMinutes();
    },
    getMonth: function () {
      return this._.getUTCMonth();
    },
    getSeconds: function () {
      return this._.getUTCSeconds();
    },
    getTime: function () {
      return this._.getTime();
    },
    getTimezoneOffset: function () {
      return 0;
    },
    valueOf: function () {
      return this._.valueOf();
    },
    setDate: function () {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function () {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function () {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function () {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function () {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function () {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function () {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function () {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function () {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;

  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date),
          d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }

    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }

    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }

    function range(t0, t1, dt) {
      var time = ceil(t0),
          times = [];

      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }

      return times;
    }

    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }

    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }

  function d3_time_interval_utc(method) {
    return function (date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }

  d3_time.year = d3_time_interval(function (date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function (date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function (date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function (date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function (date, offset) {
    date.setDate(date.getDate() + offset);
  }, function (date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;

  d3_time.dayOfYear = function (date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };

  ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function (day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function (date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function (date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function (date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;

    d3_time[day + "OfYear"] = function (date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;

  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime,
        locale_date = locale.date,
        locale_time = locale.time,
        locale_periods = locale.periods,
        locale_days = locale.days,
        locale_shortDays = locale.shortDays,
        locale_months = locale.months,
        locale_shortMonths = locale.shortMonths;

    function d3_time_format(template) {
      var n = template.length;

      function format(date) {
        var string = [],
            i = -1,
            j = 0,
            c,
            p,
            f;

        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.slice(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }

        string.push(template.slice(j, i));
        return string.join("");
      }

      format.parse = function (string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        },
            i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc,
            date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j);else if ("w" in d && ("W" in d || "U" in d)) {
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };

      format.toString = function () {
        return template;
      };

      return format;
    }

    function d3_time_parse(date, template, string, j) {
      var c,
          p,
          t,
          i = 0,
          n = template.length,
          m = string.length;

      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);

        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }

      return j;
    }

    d3_time_format.utc = function (template) {
      var local = d3_time_format(template);

      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }

      format.parse = function (string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };

      format.toString = local.toString;
      return format;
    };

    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(),
        d3_time_dayRe = d3_time_formatRe(locale_days),
        d3_time_dayLookup = d3_time_formatLookup(locale_days),
        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),
        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),
        d3_time_monthRe = d3_time_formatRe(locale_months),
        d3_time_monthLookup = d3_time_formatLookup(locale_months),
        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),
        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function (p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function (d) {
        return locale_shortDays[d.getDay()];
      },
      A: function (d) {
        return locale_days[d.getDay()];
      },
      b: function (d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function (d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function (d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function (d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function (d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function (d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function (d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function (d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function (d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function (d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function (d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function (d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function (d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function (d) {
        return d.getDay();
      },
      W: function (d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function (d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function (d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function () {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };

    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }

    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }

    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }

    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }

    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }

    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }

    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }

    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }

    return d3_time_format;
  }

  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  },
      d3_time_numberRe = /^\s*\d+/,
      d3_time_percentRe = /^%/;

  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "",
        string = (sign ? -value : value) + "",
        length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }

  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }

  function d3_time_formatLookup(names) {
    var map = new d3_Map(),
        i = -1,
        n = names.length;

    while (++i < n) map.set(names[i].toLowerCase(), i);

    return map;
  }

  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }

  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;
  }

  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }

  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }

  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }

  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }

  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(),
        zs = z > 0 ? "-" : "+",
        zh = abs(z) / 60 | 0,
        zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }

  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }

  function d3_time_formatMulti(formats) {
    var n = formats.length,
        i = -1;

    while (++i < n) formats[i][0] = this(formats[i][0]);

    return function (date) {
      var i = 0,
          f = formats[i];

      while (!f[1](date)) f = formats[++i];

      return f[0](date);
    };
  }

  d3.locale = function (locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };

  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [3],
    currency: ["$", ""],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: ["AM", "PM"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};

  function d3_adder() {}

  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function (y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;
    },
    reset: function () {
      this.s = this.t = 0;
    },
    valueOf: function () {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();

  function d3_adderSum(a, b, o) {
    var x = o.s = a + b,
        bv = x - a,
        av = x - bv;
    o.t = a - av + (b - bv);
  }

  d3.geo.stream = function (object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };

  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }

  var d3_geo_streamObjectType = {
    Feature: function (feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function (object, listener) {
      var features = object.features,
          i = -1,
          n = features.length;

      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function (object, listener) {
      listener.sphere();
    },
    Point: function (object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function (object, listener) {
      var coordinates = object.coordinates,
          i = -1,
          n = coordinates.length;

      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function (object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function (object, listener) {
      var coordinates = object.coordinates,
          i = -1,
          n = coordinates.length;

      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function (object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function (object, listener) {
      var coordinates = object.coordinates,
          i = -1,
          n = coordinates.length;

      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function (object, listener) {
      var geometries = object.geometries,
          i = -1,
          n = geometries.length;

      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };

  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1,
        n = coordinates.length - closed,
        coordinate;
    listener.lineStart();

    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);

    listener.lineEnd();
  }

  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1,
        n = coordinates.length;
    listener.polygonStart();

    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);

    listener.polygonEnd();
  }

  d3.geo.area = function (object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };

  var d3_geo_areaSum,
      d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function () {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function () {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function () {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };

  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;

    d3_geo_area.point = function (λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);
    };

    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0,
          sdλ = dλ >= 0 ? 1 : -1,
          adλ = sdλ * dλ,
          cosφ = Math.cos(φ),
          sinφ = Math.sin(φ),
          k = sinφ0 * sinφ,
          u = cosφ0 * cosφ + k * Math.cos(adλ),
          v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }

    d3_geo_area.lineEnd = function () {
      nextPoint(λ00, φ00);
    };
  }

  function d3_geo_cartesian(spherical) {
    var λ = spherical[0],
        φ = spherical[1],
        cosφ = Math.cos(φ);
    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];
  }

  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }

  function d3_geo_cartesianCross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  }

  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }

  function d3_geo_cartesianScale(vector, k) {
    return [vector[0] * k, vector[1] * k, vector[2] * k];
  }

  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }

  function d3_geo_spherical(cartesian) {
    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];
  }

  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }

  d3.geo.bounds = function () {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function () {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };

    function point(λ, φ) {
      ranges.push(range = [λ0 = λ, λ1 = λ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }

    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);

      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p),
            equatorial = [normal[1], -normal[0], 0],
            inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_,
            s = dλ > 0 ? 1 : -1,
            λi = inflection[0] * d3_degrees * s,
            antimeridian = abs(dλ) > 180;

        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }

        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }

      p0 = p, λ_ = λ;
    }

    function lineStart() {
      bound.point = linePoint;
    }

    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }

    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;

      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }

    function ringStart() {
      d3_geo_area.lineStart();
    }

    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }

    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }

    function compareRanges(a, b) {
      return a[0] - b[0];
    }

    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }

    return function (feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;

      if (n) {
        ranges.sort(compareRanges);

        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {
          b = ranges[i];

          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }

        var best = -Infinity,
            dλ;

        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }

      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];
    };
  }();

  d3.geo.centroid = function (object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2,
        y = d3_geo_centroidY2,
        z = d3_geo_centroidZ2,
        m = x * x + y * y + z * z;

    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [NaN, NaN];
    }

    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];
  };

  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function () {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function () {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };

  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }

  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }

  function d3_geo_centroidLineStart() {
    var x0, y0, z0;

    d3_geo_centroid.point = function (λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };

    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians),
          x = cosφ * Math.cos(λ),
          y = cosφ * Math.sin(λ),
          z = Math.sin(φ),
          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }

  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }

  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;

    d3_geo_centroid.point = function (λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };

    d3_geo_centroid.lineEnd = function () {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };

    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians),
          x = cosφ * Math.cos(λ),
          y = cosφ * Math.sin(λ),
          z = Math.sin(φ),
          cx = y0 * z - z0 * y,
          cy = z0 * x - x0 * z,
          cz = x0 * y - y0 * x,
          m = Math.sqrt(cx * cx + cy * cy + cz * cz),
          u = x0 * x + y0 * y + z0 * z,
          v = m && -d3_acos(u) / m,
          w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }

  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }

    if (a.invert && b.invert) compose.invert = function (x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }

  function d3_true() {
    return true;
  }

  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [],
        clip = [];
    segments.forEach(function (segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n,
          p0 = segment[0],
          p1 = segment[n];

      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();

        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);

        listener.lineEnd();
        return;
      }

      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),
          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;

    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }

    var start = subject[0],
        points,
        point;

    while (1) {
      var current = start,
          isSubject = true;

      while (current.v) if ((current = current.n) === start) return;

      points = current.z;
      listener.lineStart();

      do {
        current.v = current.o.v = true;

        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }

          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;

            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }

          current = current.p;
        }

        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);

      listener.lineEnd();
    }
  }

  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n,
        i = 0,
        a = array[0],
        b;

    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }

    a.n = b = array[0];
    b.p = a;
  }

  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }

  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function (rotate, listener) {
      var line = clipLine(listener),
          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function () {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function () {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);

          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }

          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function () {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };

      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }

      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }

      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }

      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }

      var segments;
      var buffer = d3_geo_clipBufferListener(),
          ringListener = clipLine(buffer),
          polygonStarted = false,
          polygon,
          ring;

      function pointRing(λ, φ) {
        ring.push([λ, φ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }

      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }

      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(),
            ringSegments = buffer.buffer(),
            segment,
            n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;

        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1,
              i = -1,
              point;

          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();

            while (++i < n) listener.point((point = segment[i])[0], point[1]);

            listener.lineEnd();
          }

          return;
        }

        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }

      return clip;
    };
  }

  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }

  function d3_geo_clipBufferListener() {
    var lines = [],
        line;
    return {
      lineStart: function () {
        lines.push(line = []);
      },
      point: function (λ, φ) {
        line.push([λ, φ]);
      },
      lineEnd: d3_noop,
      buffer: function () {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function () {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }

  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }

  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);

  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN,
        φ0 = NaN,
        sλ0 = NaN,
        clean;
    return {
      lineStart: function () {
        listener.lineStart();
        clean = 1;
      },
      point: function (λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π,
            dλ = abs(λ1 - λ0);

        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }

        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function () {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function () {
        return 2 - clean;
      }
    };
  }

  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0,
        cosφ1,
        sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }

  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;

    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }

  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0],
        parallel = point[1],
        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],
        polarAngle = 0,
        winding = 0;
    d3_geo_areaRingSum.reset();

    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i],
          m = ring.length;
      if (!m) continue;
      var point0 = ring[0],
          λ0 = point0[0],
          φ0 = point0[1] / 2 + π / 4,
          sinφ0 = Math.sin(φ0),
          cosφ0 = Math.cos(φ0),
          j = 1;

      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0],
            φ = point[1] / 2 + π / 4,
            sinφ = Math.sin(φ),
            cosφ = Math.cos(φ),
            dλ = λ - λ0,
            sdλ = dλ >= 0 ? 1 : -1,
            adλ = sdλ * dλ,
            antimeridian = adλ > π,
            k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;

        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);

          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }

        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }

    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
  }

  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius),
        smallRadius = cr > 0,
        notHemisphere = abs(cr) > ε,
        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);

    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }

    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function () {
          v00 = v0 = false;
          clean = 1;
        },
        point: function (λ, φ) {
          var point1 = [λ, φ],
              point2,
              v = visible(λ, φ),
              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();

          if (v !== v0) {
            point2 = intersect(point0, point1);

            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }

          if (v !== v0) {
            clean = 0;

            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }

            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;

            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;

              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }

          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }

          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function () {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function () {
          return clean | (v00 && v0) << 1;
        }
      };
    }

    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a),
          pb = d3_geo_cartesian(b);
      var n1 = [1, 0, 0],
          n2 = d3_geo_cartesianCross(pa, pb),
          n2n2 = d3_geo_cartesianDot(n2, n2),
          n1n2 = n2[0],
          determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant,
          c2 = -cr * n1n2 / determinant,
          n1xn2 = d3_geo_cartesianCross(n1, n2),
          A = d3_geo_cartesianScale(n1, c1),
          B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2,
          w = d3_geo_cartesianDot(A, u),
          uu = d3_geo_cartesianDot(u, u),
          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2),
          q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0],
          λ1 = b[0],
          φ0 = a[1],
          φ1 = b[1],
          z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0,
          polar = abs(δλ - π) < ε,
          meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;

      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [q, d3_geo_spherical(q1)];
      }
    }

    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius,
          code = 0;
      if (λ < -r) code |= 1;else if (λ > r) code |= 2;
      if (φ < -r) code |= 4;else if (φ > r) code |= 8;
      return code;
    }
  }

  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function (line) {
      var a = line.a,
          b = line.b,
          ax = a.x,
          ay = a.y,
          bx = b.x,
          by = b.y,
          t0 = 0,
          t1 = 1,
          dx = bx - ax,
          dy = by - ay,
          r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;

      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;

      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;

      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }

      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;

      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }

      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }

  var d3_geo_clipExtentMAX = 1e9;

  d3.geo.clipExtent = function () {
    var x0,
        y0,
        x1,
        y1,
        stream,
        clip,
        clipExtent = {
      stream: function (output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function (_) {
        if (!arguments.length) return [[x0, y0], [x1, y1]];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([[0, 0], [960, 500]]);
  };

  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function (listener) {
      var listener_ = listener,
          bufferListener = d3_geo_clipBufferListener(),
          clipLine = d3_geom_clipLine(x0, y0, x1, y1),
          segments,
          polygon,
          ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function () {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function () {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([x0, y1]),
              inside = clean && clipStartInside,
              visible = segments.length;

          if (inside || visible) {
            listener.polygonStart();

            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }

            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }

            listener.polygonEnd();
          }

          segments = polygon = ring = null;
        }
      };

      function insidePolygon(p) {
        var wn = 0,
            n = polygon.length,
            y = p[1];

        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];

            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }

            a = b;
          }
        }

        return wn !== 0;
      }

      function interpolate(from, to, direction, listener) {
        var a = 0,
            a1 = 0;

        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }

      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }

      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }

      var x__, y__, v__, x_, y_, v_, first, clean;

      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }

      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }

        clip.point = point;
        if (v_) listener.lineEnd();
      }

      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([x, y]);

        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;

          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y);else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };

            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }

              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }

        x_ = x, y_ = y, v_ = v;
      }

      return clip;
    };

    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }

    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }

    function comparePoints(a, b) {
      var ca = corner(a, 1),
          cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }

  function d3_geo_conic(projectAt) {
    var φ0 = 0,
        φ1 = π / 3,
        m = d3_geo_projectionMutator(projectAt),
        p = m(φ0, φ1);

    p.parallels = function (_) {
      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };

    return p;
  }

  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0),
        n = (sinφ0 + Math.sin(φ1)) / 2,
        C = 1 + sinφ0 * (2 * n - sinφ0),
        ρ0 = Math.sqrt(C) / n;

    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];
    }

    forward.invert = function (x, y) {
      var ρ0_y = ρ0 - y;
      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];
    };

    return forward;
  }

  (d3.geo.conicEqualArea = function () {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;

  d3.geo.albers = function () {
    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);
  };

  d3.geo.albersUsa = function () {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);
    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);
    var point,
        pointStream = {
      point: function (x, y) {
        point = [x, y];
      }
    },
        lower48Point,
        alaskaPoint,
        hawaiiPoint;

    function albersUsa(coordinates) {
      var x = coordinates[0],
          y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }

    albersUsa.invert = function (coordinates) {
      var k = lower48.scale(),
          t = lower48.translate(),
          x = (coordinates[0] - t[0]) / k,
          y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };

    albersUsa.stream = function (stream) {
      var lower48Stream = lower48.stream(stream),
          alaskaStream = alaska.stream(stream),
          hawaiiStream = hawaii.stream(stream);
      return {
        point: function (x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function () {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function () {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function () {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function () {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function () {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };

    albersUsa.precision = function (_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };

    albersUsa.scale = function (_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };

    albersUsa.translate = function (_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(),
          x = +_[0],
          y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;
      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
      return albersUsa;
    };

    return albersUsa.scale(1070);
  };

  var d3_geo_pathAreaSum,
      d3_geo_pathAreaPolygon,
      d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function () {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function () {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };

  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;

    d3_geo_pathArea.point = function (x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };

    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }

    d3_geo_pathArea.lineEnd = function () {
      nextPoint(x00, y00);
    };
  }

  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };

  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }

  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5),
        buffer = [];
    var stream = {
      point: point,
      lineStart: function () {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function () {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function (_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function () {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };

    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }

    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }

    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }

    function lineEnd() {
      stream.point = point;
    }

    function lineEndPolygon() {
      buffer.push("Z");
    }

    return stream;
  }

  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }

  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function () {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function () {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };

  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }

  function d3_geo_pathCentroidLineStart() {
    var x0, y0;

    d3_geo_pathCentroid.point = function (x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };

    function nextPoint(x, y) {
      var dx = x - x0,
          dy = y - y0,
          z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }

  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }

  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;

    d3_geo_pathCentroid.point = function (x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };

    function nextPoint(x, y) {
      var dx = x - x0,
          dy = y - y0,
          z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }

    d3_geo_pathCentroid.lineEnd = function () {
      nextPoint(x00, y00);
    };
  }

  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function () {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function () {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function (_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };

    function point(x, y) {
      context.moveTo(x + pointRadius, y);
      context.arc(x, y, pointRadius, 0, τ);
    }

    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }

    function pointLine(x, y) {
      context.lineTo(x, y);
    }

    function lineEnd() {
      stream.point = point;
    }

    function lineEndPolygon() {
      context.closePath();
    }

    return stream;
  }

  function d3_geo_resample(project) {
    var δ2 = .5,
        cosMinDistance = Math.cos(30 * d3_radians),
        maxDepth = 16;

    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }

    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function (x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }

    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function () {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function () {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };

      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }

      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }

      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([λ, φ]),
            p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }

      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }

      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }

      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }

      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }

      return resample;
    }

    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0,
          dy = y1 - y0,
          d2 = dx * dx + dy * dy;

      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1,
            b = b0 + b1,
            c = c0 + c1,
            m = Math.sqrt(a * a + b * b + c * c),
            φ2 = Math.asin(c /= m),
            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),
            p = project(λ2, φ2),
            x2 = p[0],
            y2 = p[1],
            dx2 = x2 - x0,
            dy2 = y2 - y0,
            dz = dy * dx2 - dx * dy2;

        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }

    resample.precision = function (_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };

    return resample;
  }

  d3.geo.path = function () {
    var pointRadius = 4.5,
        projection,
        context,
        projectStream,
        contextStream,
        cacheStream;

    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }

      return contextStream.result();
    }

    path.area = function (object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };

    path.centroid = function (object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];
    };

    path.bounds = function (object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];
    };

    path.projection = function (_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };

    path.context = function (_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };

    path.pointRadius = function (_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };

    function reset() {
      cacheStream = null;
      return path;
    }

    return path.projection(d3.geo.albersUsa()).context(null);
  };

  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function (x, y) {
      return project([x * d3_degrees, y * d3_degrees]);
    });
    return function (stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }

  d3.geo.transform = function (methods) {
    return {
      stream: function (stream) {
        var transform = new d3_geo_transform(stream);

        for (var k in methods) transform[k] = methods[k];

        return transform;
      }
    };
  };

  function d3_geo_transform(stream) {
    this.stream = stream;
  }

  d3_geo_transform.prototype = {
    point: function (x, y) {
      this.stream.point(x, y);
    },
    sphere: function () {
      this.stream.sphere();
    },
    lineStart: function () {
      this.stream.lineStart();
    },
    lineEnd: function () {
      this.stream.lineEnd();
    },
    polygonStart: function () {
      this.stream.polygonStart();
    },
    polygonEnd: function () {
      this.stream.polygonEnd();
    }
  };

  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function () {
        stream.sphere();
      },
      lineStart: function () {
        stream.lineStart();
      },
      lineEnd: function () {
        stream.lineEnd();
      },
      polygonStart: function () {
        stream.polygonStart();
      },
      polygonEnd: function () {
        stream.polygonEnd();
      }
    };
  }

  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;

  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function () {
      return project;
    })();
  }

  function d3_geo_projectionMutator(projectAt) {
    var project,
        rotate,
        projectRotate,
        projectResample = d3_geo_resample(function (x, y) {
      x = project(x, y);
      return [x[0] * k + δx, δy - x[1] * k];
    }),
        k = 150,
        x = 480,
        y = 250,
        λ = 0,
        φ = 0,
        δλ = 0,
        δφ = 0,
        δγ = 0,
        δx,
        δy,
        preclip = d3_geo_clipAntimeridian,
        postclip = d3_identity,
        clipAngle = null,
        clipExtent = null,
        stream;

    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [point[0] * k + δx, δy - point[1] * k];
    }

    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [point[0] * d3_degrees, point[1] * d3_degrees];
    }

    projection.stream = function (output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };

    projection.clipAngle = function (_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };

    projection.clipExtent = function (_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };

    projection.scale = function (_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };

    projection.translate = function (_) {
      if (!arguments.length) return [x, y];
      x = +_[0];
      y = +_[1];
      return reset();
    };

    projection.center = function (_) {
      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };

    projection.rotate = function (_) {
      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };

    d3.rebind(projection, projectResample, "precision");

    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }

    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }

    return function () {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }

  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function (x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }

  function d3_geo_equirectangular(λ, φ) {
    return [λ, φ];
  }

  (d3.geo.equirectangular = function () {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;

  d3.geo.rotation = function (rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);

    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }

    forward.invert = function (coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };

    return forward;
  };

  function d3_geo_identityRotation(λ, φ) {
    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
  }

  d3_geo_identityRotation.invert = d3_geo_equirectangular;

  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }

  function d3_geo_forwardRotationλ(δλ) {
    return function (λ, φ) {
      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
    };
  }

  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }

  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ),
        sinδφ = Math.sin(δφ),
        cosδγ = Math.cos(δγ),
        sinδγ = Math.sin(δγ);

    function rotation(λ, φ) {
      var cosφ = Math.cos(φ),
          x = Math.cos(λ) * cosφ,
          y = Math.sin(λ) * cosφ,
          z = Math.sin(φ),
          k = z * cosδφ + x * sinδφ;
      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];
    }

    rotation.invert = function (λ, φ) {
      var cosφ = Math.cos(φ),
          x = Math.cos(λ) * cosφ,
          y = Math.sin(λ) * cosφ,
          z = Math.sin(φ),
          k = z * cosδγ - y * sinδγ;
      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];
    };

    return rotation;
  }

  d3.geo.circle = function () {
    var origin = [0, 0],
        angle,
        precision = 6,
        interpolate;

    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin,
          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,
          ring = [];
      interpolate(null, null, 1, {
        point: function (x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ring]
      };
    }

    circle.origin = function (x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };

    circle.angle = function (x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };

    circle.precision = function (_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };

    return circle.angle(90);
  };

  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius),
        sr = Math.sin(radius);
    return function (from, to, direction, listener) {
      var step = direction * precision;

      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }

      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);
      }
    };
  }

  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }

  d3.geo.distance = function (a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians,
        φ0 = a[1] * d3_radians,
        φ1 = b[1] * d3_radians,
        sinΔλ = Math.sin(Δλ),
        cosΔλ = Math.cos(Δλ),
        sinφ0 = Math.sin(φ0),
        cosφ0 = Math.cos(φ0),
        sinφ1 = Math.sin(φ1),
        cosφ1 = Math.cos(φ1),
        t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };

  d3.geo.graticule = function () {
    var x1,
        x0,
        X1,
        X0,
        y1,
        y0,
        Y1,
        Y0,
        dx = 10,
        dy = dx,
        DX = 90,
        DY = 360,
        x,
        y,
        X,
        Y,
        precision = 2.5;

    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }

    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {
        return abs(y % DY) > ε;
      }).map(y));
    }

    graticule.lines = function () {
      return lines().map(function (coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };

    graticule.outline = function () {
      return {
        type: "Polygon",
        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
      };
    };

    graticule.extent = function (_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };

    graticule.majorExtent = function (_) {
      if (!arguments.length) return [[X0, Y0], [X1, Y1]];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };

    graticule.minorExtent = function (_) {
      if (!arguments.length) return [[x0, y0], [x1, y1]];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };

    graticule.step = function (_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };

    graticule.majorStep = function (_) {
      if (!arguments.length) return [DX, DY];
      DX = +_[0], DY = +_[1];
      return graticule;
    };

    graticule.minorStep = function (_) {
      if (!arguments.length) return [dx, dy];
      dx = +_[0], dy = +_[1];
      return graticule;
    };

    graticule.precision = function (_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };

    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);
  };

  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function (x) {
      return y.map(function (y) {
        return [x, y];
      });
    };
  }

  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function (y) {
      return x.map(function (x) {
        return [x, y];
      });
    };
  }

  function d3_source(d) {
    return d.source;
  }

  function d3_target(d) {
    return d.target;
  }

  d3.geo.greatArc = function () {
    var source = d3_source,
        source_,
        target = d3_target,
        target_;

    function greatArc() {
      return {
        type: "LineString",
        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]
      };
    }

    greatArc.distance = function () {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };

    greatArc.source = function (_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };

    greatArc.target = function (_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };

    greatArc.precision = function () {
      return arguments.length ? greatArc : 0;
    };

    return greatArc;
  };

  d3.geo.interpolate = function (source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };

  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0),
        sy0 = Math.sin(y0),
        cy1 = Math.cos(y1),
        sy1 = Math.sin(y1),
        kx0 = cy0 * Math.cos(x0),
        ky0 = cy0 * Math.sin(x0),
        kx1 = cy1 * Math.cos(x1),
        ky1 = cy1 * Math.sin(x1),
        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),
        k = 1 / Math.sin(d);
    var interpolate = d ? function (t) {
      var B = Math.sin(t *= d) * k,
          A = Math.sin(d - t) * k,
          x = A * kx0 + B * kx1,
          y = A * ky0 + B * ky1,
          z = A * sy0 + B * sy1;
      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];
    } : function () {
      return [x0 * d3_degrees, y0 * d3_degrees];
    };
    interpolate.distance = d;
    return interpolate;
  }

  d3.geo.length = function (object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };

  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };

  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;

    d3_geo_length.point = function (λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };

    d3_geo_length.lineEnd = function () {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };

    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians),
          cosφ = Math.cos(φ),
          t = abs((λ *= d3_radians) - λ0),
          cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }

  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ),
          cosφ = Math.cos(φ),
          k = scale(cosλ * cosφ);
      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];
    }

    azimuthal.invert = function (x, y) {
      var ρ = Math.sqrt(x * x + y * y),
          c = angle(ρ),
          sinc = Math.sin(c),
          cosc = Math.cos(c);
      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];
    };

    return azimuthal;
  }

  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function (ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function () {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function () {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;

  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0),
        t = function (φ) {
      return Math.tan(π / 4 + φ / 2);
    },
        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),
        F = cosφ0 * Math.pow(t(φ0), n) / n;

    if (!n) return d3_geo_mercator;

    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }

      var ρ = F / Math.pow(t(φ), n);
      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];
    }

    forward.invert = function (x, y) {
      var ρ0_y = F - y,
          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];
    };

    return forward;
  }

  (d3.geo.conicConformal = function () {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;

  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0),
        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),
        G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;

    function forward(λ, φ) {
      var ρ = G - φ;
      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];
    }

    forward.invert = function (x, y) {
      var ρ0_y = G - y;
      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];
    };

    return forward;
  }

  (d3.geo.conicEquidistant = function () {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function () {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;

  function d3_geo_mercator(λ, φ) {
    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];
  }

  d3_geo_mercator.invert = function (x, y) {
    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];
  };

  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project),
        scale = m.scale,
        translate = m.translate,
        clipExtent = m.clipExtent,
        clipAuto;

    m.scale = function () {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };

    m.translate = function () {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };

    m.clipExtent = function (_) {
      var v = clipExtent.apply(m, arguments);

      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(),
              t = translate();
          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);
        }
      } else if (clipAuto) {
        v = null;
      }

      return v;
    };

    return m.clipExtent(null);
  }

  (d3.geo.mercator = function () {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function () {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function () {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function (ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function () {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;

  function d3_geo_transverseMercator(λ, φ) {
    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];
  }

  d3_geo_transverseMercator.invert = function (x, y) {
    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];
  };

  (d3.geo.transverseMercator = function () {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),
        center = projection.center,
        rotate = projection.rotate;

    projection.center = function (_) {
      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
    };

    projection.rotate = function (_) {
      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
    };

    return rotate([0, 0, 90]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};

  function d3_geom_pointX(d) {
    return d[0];
  }

  function d3_geom_pointY(d) {
    return d[1];
  }

  d3.geom.hull = function (vertices) {
    var x = d3_geom_pointX,
        y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);

    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x),
          fy = d3_functor(y),
          i,
          n = data.length,
          points = [],
          flippedPoints = [];

      for (i = 0; i < n; i++) {
        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);
      }

      points.sort(d3_geom_hullOrder);

      for (i = 0; i < n; i++) flippedPoints.push([points[i][0], -points[i][1]]);

      var upper = d3_geom_hullUpper(points),
          lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0],
          skipRight = lower[lower.length - 1] === upper[upper.length - 1],
          polygon = [];

      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);

      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);

      return polygon;
    }

    hull.x = function (_) {
      return arguments.length ? (x = _, hull) : x;
    };

    hull.y = function (_) {
      return arguments.length ? (y = _, hull) : y;
    };

    return hull;
  };

  function d3_geom_hullUpper(points) {
    var n = points.length,
        hull = [0, 1],
        hs = 2;

    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;

      hull[hs++] = i;
    }

    return hull.slice(0, hs);
  }

  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }

  d3.geom.polygon = function (coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };

  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];

  d3_geom_polygonPrototype.area = function () {
    var i = -1,
        n = this.length,
        a,
        b = this[n - 1],
        area = 0;

    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }

    return area * .5;
  };

  d3_geom_polygonPrototype.centroid = function (k) {
    var i = -1,
        n = this.length,
        x = 0,
        y = 0,
        a,
        b = this[n - 1],
        c;
    if (!arguments.length) k = -1 / (6 * this.area());

    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }

    return [x * k, y * k];
  };

  d3_geom_polygonPrototype.clip = function (subject) {
    var input,
        closed = d3_geom_polygonClosed(subject),
        i = -1,
        n = this.length - d3_geom_polygonClosed(this),
        j,
        m,
        a = this[n - 1],
        b,
        c,
        d;

    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;

      while (++j < m) {
        d = input[j];

        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }

          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }

        c = d;
      }

      if (closed) subject.push(subject[0]);
      a = b;
    }

    return subject;
  };

  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }

  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0],
        x3 = a[0],
        x21 = d[0] - x1,
        x43 = b[0] - x3,
        y1 = c[1],
        y3 = a[1],
        y21 = d[1] - y1,
        y43 = b[1] - y3,
        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [x1 + ua * x21, y1 + ua * y21];
  }

  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0],
        b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }

  var d3_geom_voronoiEdges,
      d3_geom_voronoiCells,
      d3_geom_voronoiBeaches,
      d3_geom_voronoiBeachPool = [],
      d3_geom_voronoiFirstCircle,
      d3_geom_voronoiCircles,
      d3_geom_voronoiCirclePool = [];

  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }

  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }

  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }

  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle,
        x = circle.x,
        y = circle.cy,
        vertex = {
      x: x,
      y: y
    },
        previous = beach.P,
        next = beach.N,
        disappearing = [beach];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;

    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }

    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;

    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }

    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length,
        iArc;

    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }

    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }

  function d3_geom_voronoiAddBeach(site) {
    var x = site.x,
        directrix = site.y,
        lArc,
        rArc,
        dxl,
        dxr,
        node = d3_geom_voronoiBeaches._;

    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L;else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);

        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }

          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }

          break;
        }
      }
    }

    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;

    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }

    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }

    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site,
        ax = lSite.x,
        ay = lSite.y,
        bx = site.x - ax,
        by = site.y - ay,
        rSite = rArc.site,
        cx = rSite.x - ax,
        cy = rSite.y - ay,
        d = 2 * (bx * cy - by * cx),
        hb = bx * bx + by * by,
        hc = cx * cx + cy * cy,
        vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }

  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site,
        rfocx = site.x,
        rfocy = site.y,
        pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x,
        lfocy = site.y,
        plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx,
        aby2 = 1 / pby2 - 1 / plby2,
        b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }

  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }

  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }

  d3_geom_voronoiCell.prototype.prepare = function () {
    var halfEdges = this.edges,
        iHalfEdge = halfEdges.length,
        edge;

    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }

    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };

  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0],
        x1 = extent[1][0],
        y0 = extent[0][1],
        y1 = extent[1][1],
        x2,
        y2,
        x3,
        y3,
        cells = d3_geom_voronoiCells,
        iCell = cells.length,
        cell,
        iHalfEdge,
        halfEdges,
        nHalfEdges,
        start,
        end;

    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;

      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;

        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }

  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }

  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }

  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P,
        rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site,
        cSite = arc.site,
        rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x,
        by = cSite.y,
        ax = lSite.x - bx,
        ay = lSite.y - by,
        cx = rSite.x - bx,
        cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay,
        hc = cx * cx + cy * cy,
        x = (cy * ha - ay * hc) / d,
        y = (ax * hc - cx * ha) / d,
        cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null,
        node = d3_geom_voronoiCircles._;

    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L;else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R;else {
          before = node;
          break;
        }
      }
    }

    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }

  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;

    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }

  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges,
        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),
        i = edges.length,
        e;

    while (i--) {
      e = edges[i];

      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }

  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a,
        x0 = extent[0][0],
        x1 = extent[1][0],
        y0 = extent[0][1],
        y1 = extent[1][1],
        lSite = edge.l,
        rSite = edge.r,
        lx = lSite.x,
        ly = lSite.y,
        rx = rSite.x,
        ry = rSite.y,
        fx = (lx + rx) / 2,
        fy = (ly + ry) / 2,
        fm,
        fb;

    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;

      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        };else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        };else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;

      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          };else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          };else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          };else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          };else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }

    edge.a = va;
    edge.b = vb;
    return true;
  }

  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }

  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }

  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }

  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }

  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a,
        vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }

  d3_geom_voronoiHalfEdge.prototype = {
    start: function () {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function () {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };

  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }

  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }

  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function (after, node) {
      var parent, grandpa, uncle;

      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;

        if (after.R) {
          after = after.R;

          while (after.L) after = after.L;

          after.L = node;
        } else {
          after.R = node;
        }

        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }

      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;

      while (parent && parent.C) {
        grandpa = parent.U;

        if (parent === grandpa.L) {
          uncle = grandpa.R;

          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }

            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;

          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }

            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }

        parent = after.U;
      }

      this._.C = false;
    },
    remove: function (node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U,
          sibling,
          left = node.L,
          right = node.R,
          next,
          red;
      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);

      if (parent) {
        if (parent.L === node) parent.L = next;else parent.R = next;
      } else {
        this._ = next;
      }

      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;

        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }

      if (node) node.U = parent;
      if (red) return;

      if (node && node.C) {
        node.C = false;
        return;
      }

      do {
        if (node === this._) break;

        if (node === parent.L) {
          sibling = parent.R;

          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }

          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }

            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;

          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }

          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }

            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }

        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);

      if (node) node.C = false;
    }
  };

  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node,
        q = node.R,
        parent = p.U;

    if (parent) {
      if (parent.L === p) parent.L = q;else parent.R = q;
    } else {
      tree._ = q;
    }

    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }

  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node,
        q = node.L,
        parent = p.U;

    if (parent) {
      if (parent.L === p) parent.L = q;else parent.R = q;
    } else {
      tree._ = q;
    }

    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }

  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;

    return node;
  }

  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),
        x0,
        y0,
        circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();

    while (true) {
      circle = d3_geom_voronoiFirstCircle;

      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }

        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }

    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }

  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }

  d3.geom.voronoi = function (points) {
    var x = d3_geom_pointX,
        y = d3_geom_pointY,
        fx = x,
        fy = y,
        clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);

    function voronoi(data) {
      var polygons = new Array(data.length),
          x0 = clipExtent[0][0],
          y0 = clipExtent[0][1],
          x1 = clipExtent[1][0],
          y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {
        var edges = cell.edges,
            site = cell.site,
            polygon = polygons[i] = edges.length ? edges.map(function (e) {
          var s = e.start();
          return [s.x, s.y];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];
        polygon.point = data[i];
      });
      return polygons;
    }

    function sites(data) {
      return data.map(function (d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }

    voronoi.links = function (data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {
        return edge.l && edge.r;
      }).map(function (edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };

    voronoi.triangles = function (data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {
        var site = cell.site,
            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),
            j = -1,
            m = edges.length,
            e0,
            s0,
            e1 = edges[m - 1].edge,
            s1 = e1.l === site ? e1.r : e1.l;

        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;

          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([data[i], data[s0.i], data[s1.i]]);
          }
        }
      });
      return triangles;
    };

    voronoi.x = function (_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };

    voronoi.y = function (_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };

    voronoi.clipExtent = function (_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };

    voronoi.size = function (_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [[0, 0], _]);
    };

    return voronoi;
  };

  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];

  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }

  d3.geom.delaunay = function (vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };

  d3.geom.quadtree = function (points, x1, y1, x2, y2) {
    var x = d3_geom_pointX,
        y = d3_geom_pointY,
        compat;

    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;

      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }

      return quadtree(points);
    }

    function quadtree(data) {
      var d,
          fx = d3_functor(x),
          fy = d3_functor(y),
          xs,
          ys,
          i,
          n,
          x1_,
          y1_,
          x2_,
          y2_;

      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i),
              y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }

      var dx = x2_ - x1_,
          dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;

      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;

        if (n.leaf) {
          var nx = n.x,
              ny = n.y;

          if (nx != null) {
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }

      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var xm = (x1 + x2) * .5,
            ym = (y1 + y2) * .5,
            right = x >= xm,
            below = y >= ym,
            i = below << 1 | right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = xm;else x2 = xm;
        if (below) y1 = ym;else y2 = ym;
        insert(n, d, x, y, x1, y1, x2, y2);
      }

      var root = d3_geom_quadtreeNode();

      root.add = function (d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };

      root.visit = function (f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };

      root.find = function (point) {
        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
      };

      i = -1;

      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }

        --i;
      } else data.forEach(root.add);

      xs = ys = data = d = null;
      return root;
    }

    quadtree.x = function (_) {
      return arguments.length ? (x = _, quadtree) : x;
    };

    quadtree.y = function (_) {
      return arguments.length ? (y = _, quadtree) : y;
    };

    quadtree.extent = function (_) {
      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];
      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];
      return quadtree;
    };

    quadtree.size = function (_) {
      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];
      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };

    return quadtree;
  };

  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }

  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }

  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }

  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5,
          sy = (y1 + y2) * .5,
          children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }

  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
    var minDistance2 = Infinity,
        closestPoint;

    (function find(node, x1, y1, x2, y2) {
      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;

      if (point = node.point) {
        var point,
            dx = x - point[0],
            dy = y - point[1],
            distance2 = dx * dx + dy * dy;

        if (distance2 < minDistance2) {
          var distance = Math.sqrt(minDistance2 = distance2);
          x0 = x - distance, y0 = y - distance;
          x3 = x + distance, y3 = y + distance;
          closestPoint = point;
        }
      }

      var children = node.nodes,
          xm = (x1 + x2) * .5,
          ym = (y1 + y2) * .5,
          right = x >= xm,
          below = y >= ym;

      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
        if (node = children[i & 3]) switch (i & 3) {
          case 0:
            find(node, x1, y1, xm, ym);
            break;

          case 1:
            find(node, xm, y1, x2, ym);
            break;

          case 2:
            find(node, x1, ym, xm, y2);
            break;

          case 3:
            find(node, xm, ym, x2, y2);
            break;
        }
      }
    })(root, x0, y0, x3, y3);

    return closestPoint;
  }

  d3.interpolateRgb = d3_interpolateRgb;

  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r,
        ag = a.g,
        ab = a.b,
        br = b.r - ar,
        bg = b.g - ag,
        bb = b.b - ab;
    return function (t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }

  d3.interpolateObject = d3_interpolateObject;

  function d3_interpolateObject(a, b) {
    var i = {},
        c = {},
        k;

    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }

    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }

    return function (t) {
      for (k in i) c[k] = i[k](t);

      return c;
    };
  }

  d3.interpolateNumber = d3_interpolateNumber;

  function d3_interpolateNumber(a, b) {
    a = +a, b = +b;
    return function (t) {
      return a * (1 - t) + b * t;
    };
  }

  d3.interpolateString = d3_interpolateString;

  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,
        am,
        bm,
        bs,
        i = -1,
        s = [],
        q = [];
    a = a + "", b = b + "";

    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s[i]) s[i] += bs;else s[++i] = bs;
      }

      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm;else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }

      bi = d3_interpolate_numberB.lastIndex;
    }

    if (bi < b.length) {
      bs = b.slice(bi);
      if (s[i]) s[i] += bs;else s[++i] = bs;
    }

    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {
      return b(t) + "";
    }) : function () {
      return b;
    } : (b = q.length, function (t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    });
  }

  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;

  function d3_interpolate(a, b) {
    var i = d3.interpolators.length,
        f;

    while (--i >= 0 && !(f = d3.interpolators[i](a, b)));

    return f;
  }

  d3.interpolators = [function (a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  }];
  d3.interpolateArray = d3_interpolateArray;

  function d3_interpolateArray(a, b) {
    var x = [],
        c = [],
        na = a.length,
        nb = b.length,
        n0 = Math.min(a.length, b.length),
        i;

    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));

    for (; i < na; ++i) c[i] = a[i];

    for (; i < nb; ++i) c[i] = b[i];

    return function (t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);

      return c;
    };
  }

  var d3_ease_default = function () {
    return d3_identity;
  };

  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function () {
      return d3_ease_quad;
    },
    cubic: function () {
      return d3_ease_cubic;
    },
    sin: function () {
      return d3_ease_sin;
    },
    exp: function () {
      return d3_ease_exp;
    },
    circle: function () {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function () {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function (f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });

  d3.ease = function (name) {
    var i = name.indexOf("-"),
        t = i >= 0 ? name.slice(0, i) : name,
        m = i >= 0 ? name.slice(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };

  function d3_ease_clamp(f) {
    return function (t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }

  function d3_ease_reverse(f) {
    return function (t) {
      return 1 - f(1 - t);
    };
  }

  function d3_ease_reflect(f) {
    return function (t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }

  function d3_ease_quad(t) {
    return t * t;
  }

  function d3_ease_cubic(t) {
    return t * t * t;
  }

  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t,
        t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }

  function d3_ease_poly(e) {
    return function (t) {
      return Math.pow(t, e);
    };
  }

  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }

  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }

  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }

  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;
    return function (t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }

  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function (t) {
      return t * t * ((s + 1) * t - s);
    };
  }

  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }

  d3.interpolateHcl = d3_interpolateHcl;

  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h,
        ac = a.c,
        al = a.l,
        bh = b.h - ah,
        bc = b.c - ac,
        bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;
    return function (t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }

  d3.interpolateHsl = d3_interpolateHsl;

  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h,
        as = a.s,
        al = a.l,
        bh = b.h - ah,
        bs = b.s - as,
        bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;
    return function (t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }

  d3.interpolateLab = d3_interpolateLab;

  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l,
        aa = a.a,
        ab = a.b,
        bl = b.l - al,
        ba = b.a - aa,
        bb = b.b - ab;
    return function (t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }

  d3.interpolateRound = d3_interpolateRound;

  function d3_interpolateRound(a, b) {
    b -= a;
    return function (t) {
      return Math.round(a + b * t);
    };
  }

  d3.transform = function (string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function (string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }

      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };

  function d3_transform(m) {
    var r0 = [m.a, m.b],
        r1 = [m.c, m.d],
        kx = d3_transformNormalize(r0),
        kz = d3_transformDot(r0, r1),
        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;

    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }

    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [m.e, m.f];
    this.scale = [kx, ky];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }

  d3_transform.prototype.toString = function () {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };

  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }

  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));

    if (k) {
      a[0] /= k;
      a[1] /= k;
    }

    return k;
  }

  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }

  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;

  function d3_interpolateTransform(a, b) {
    var s = [],
        q = [],
        n,
        A = d3.transform(a),
        B = d3.transform(b),
        ta = A.translate,
        tb = B.translate,
        ra = A.rotate,
        rb = B.rotate,
        wa = A.skew,
        wb = B.skew,
        ka = A.scale,
        kb = B.scale;

    if (ta[0] != tb[0] || ta[1] != tb[1]) {
      s.push("translate(", null, ",", null, ")");
      q.push({
        i: 1,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: 3,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    } else {
      s.push("");
    }

    if (ra != rb) {
      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(s.pop() + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(s.pop() + "rotate(" + rb + ")");
    }

    if (wa != wb) {
      q.push({
        i: s.push(s.pop() + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(s.pop() + "skewX(" + wb + ")");
    }

    if (ka[0] != kb[0] || ka[1] != kb[1]) {
      n = s.push(s.pop() + "scale(", null, ",", null, ")");
      q.push({
        i: n - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: n - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] != 1 || kb[1] != 1) {
      s.push(s.pop() + "scale(" + kb + ")");
    }

    n = q.length;
    return function (t) {
      var i = -1,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  }

  function d3_uninterpolateNumber(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function (x) {
      return (x - a) / b;
    };
  }

  function d3_uninterpolateClamp(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function (x) {
      return Math.max(0, Math.min(1, (x - a) / b));
    };
  }

  d3.layout = {};

  d3.layout.bundle = function () {
    return function (links) {
      var paths = [],
          i = -1,
          n = links.length;

      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));

      return paths;
    };
  };

  function d3_layout_bundlePath(link) {
    var start = link.source,
        end = link.target,
        lca = d3_layout_bundleLeastCommonAncestor(start, end),
        points = [start];

    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }

    var k = points.length;

    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }

    return points;
  }

  function d3_layout_bundleAncestors(node) {
    var ancestors = [],
        parent = node.parent;

    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }

    ancestors.push(node);
    return ancestors;
  }

  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a),
        bNodes = d3_layout_bundleAncestors(b),
        aNode = aNodes.pop(),
        bNode = bNodes.pop(),
        sharedNode = null;

    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }

    return sharedNode;
  }

  d3.layout.chord = function () {
    var chord = {},
        chords,
        groups,
        matrix,
        n,
        padding = 0,
        sortGroups,
        sortSubgroups,
        sortChords;

    function relayout() {
      var subgroups = {},
          groupSums = [],
          groupIndex = d3.range(n),
          subgroupIndex = [],
          k,
          x,
          x0,
          i,
          j;
      chords = [];
      groups = [];
      k = 0, i = -1;

      while (++i < n) {
        x = 0, j = -1;

        while (++j < n) {
          x += matrix[i][j];
        }

        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }

      if (sortGroups) {
        groupIndex.sort(function (a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }

      if (sortSubgroups) {
        subgroupIndex.forEach(function (d, i) {
          d.sort(function (a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }

      k = (τ - padding * n) / k;
      x = 0, i = -1;

      while (++i < n) {
        x0 = x, j = -1;

        while (++j < n) {
          var di = groupIndex[i],
              dj = subgroupIndex[di][j],
              v = matrix[di][dj],
              a0 = x,
              a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }

        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: (x - x0) / k
        };
        x += padding;
      }

      i = -1;

      while (++i < n) {
        j = i - 1;

        while (++j < n) {
          var source = subgroups[i + "-" + j],
              target = subgroups[j + "-" + i];

          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }

      if (sortChords) resort();
    }

    function resort() {
      chords.sort(function (a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }

    chord.matrix = function (x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };

    chord.padding = function (x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };

    chord.sortGroups = function (x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };

    chord.sortSubgroups = function (x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };

    chord.sortChords = function (x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };

    chord.chords = function () {
      if (!chords) relayout();
      return chords;
    };

    chord.groups = function () {
      if (!groups) relayout();
      return groups;
    };

    return chord;
  };

  d3.layout.force = function () {
    var force = {},
        event = d3.dispatch("start", "tick", "end"),
        size = [1, 1],
        drag,
        alpha,
        friction = .9,
        linkDistance = d3_layout_forceLinkDistance,
        linkStrength = d3_layout_forceLinkStrength,
        charge = -30,
        chargeDistance2 = d3_layout_forceChargeDistance2,
        gravity = .1,
        theta2 = .64,
        nodes = [],
        links = [],
        distances,
        strengths,
        charges;

    function repulse(node) {
      return function (quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x,
              dy = quad.cy - node.y,
              dw = x2 - x1,
              dn = dx * dx + dy * dy;

          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }

            return true;
          }

          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }

        return !quad.charge;
      };
    }

    force.tick = function () {
      if ((alpha *= .99) < .005) {
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }

      var n = nodes.length,
          m = links.length,
          q,
          i,
          o,
          s,
          t,
          l,
          k,
          x,
          y;

      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;

        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight / (t.weight + s.weight));
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }

      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }

      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;

        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }

      i = -1;

      while (++i < n) {
        o = nodes[i];

        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }

      event.tick({
        type: "tick",
        alpha: alpha
      });
    };

    force.nodes = function (x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };

    force.links = function (x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };

    force.size = function (x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };

    force.linkDistance = function (x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };

    force.distance = force.linkDistance;

    force.linkStrength = function (x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };

    force.friction = function (x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };

    force.charge = function (x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };

    force.chargeDistance = function (x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };

    force.gravity = function (x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };

    force.theta = function (x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };

    force.alpha = function (x) {
      if (!arguments.length) return alpha;
      x = +x;

      if (alpha) {
        if (x > 0) alpha = x;else alpha = 0;
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        d3.timer(force.tick);
      }

      return force;
    };

    force.start = function () {
      var i,
          n = nodes.length,
          m = links.length,
          w = size[0],
          h = size[1],
          neighbors,
          o;

      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }

      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }

      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }

      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i);else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i);else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i);else for (i = 0; i < n; ++i) charges[i] = charge;

      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);

          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }

          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }

        var candidates = neighbors[i],
            j = -1,
            m = candidates.length,
            x;

        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;

        return Math.random() * size;
      }

      return force.resume();
    };

    force.resume = function () {
      return force.alpha(.1);
    };

    force.stop = function () {
      return force.alpha(0);
    };

    force.drag = function () {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };

    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }

    return d3.rebind(force, event, "on");
  };

  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }

  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }

  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }

  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }

  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0,
        cy = 0;
    quad.charge = 0;

    if (!quad.leaf) {
      var nodes = quad.nodes,
          n = nodes.length,
          i = -1,
          c;

      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }

    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }

      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }

    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }

  var d3_layout_forceLinkDistance = 20,
      d3_layout_forceLinkStrength = 1,
      d3_layout_forceChargeDistance2 = Infinity;

  d3.layout.hierarchy = function () {
    var sort = d3_layout_hierarchySort,
        children = d3_layout_hierarchyChildren,
        value = d3_layout_hierarchyValue;

    function hierarchy(root) {
      var stack = [root],
          nodes = [],
          node;
      root.depth = 0;

      while ((node = stack.pop()) != null) {
        nodes.push(node);

        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;

          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }

          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }

      d3_layout_hierarchyVisitAfter(root, function (node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }

    hierarchy.sort = function (x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };

    hierarchy.children = function (x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };

    hierarchy.value = function (x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };

    hierarchy.revalue = function (root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function (node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function (node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }

      return root;
    };

    return hierarchy;
  };

  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }

  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [node];

    while ((node = nodes.pop()) != null) {
      callback(node);

      if ((children = node.children) && (n = children.length)) {
        var n, children;

        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }

  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [node],
        nodes2 = [];

    while ((node = nodes.pop()) != null) {
      nodes2.push(node);

      if ((children = node.children) && (n = children.length)) {
        var i = -1,
            n,
            children;

        while (++i < n) nodes.push(children[i]);
      }
    }

    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }

  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }

  function d3_layout_hierarchyValue(d) {
    return d.value;
  }

  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }

  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function (parent) {
      return (parent.children || []).map(function (child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }

  d3.layout.partition = function () {
    var hierarchy = d3.layout.hierarchy(),
        size = [1, 1];

    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;

      if (children && (n = children.length)) {
        var i = -1,
            n,
            c,
            d;
        dx = node.value ? dx / node.value : 0;

        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }

    function depth(node) {
      var children = node.children,
          d = 0;

      if (children && (n = children.length)) {
        var i = -1,
            n;

        while (++i < n) d = Math.max(d, depth(children[i]));
      }

      return 1 + d;
    }

    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }

    partition.size = function (x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };

    return d3_layout_hierarchyRebind(partition, hierarchy);
  };

  d3.layout.pie = function () {
    var value = Number,
        sort = d3_layout_pieSortByValue,
        startAngle = 0,
        endAngle = τ,
        padAngle = 0;

    function pie(data) {
      var n = data.length,
          values = data.map(function (d, i) {
        return +value.call(pie, d, i);
      }),
          a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle),
          da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a,
          p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)),
          pa = p * (da < 0 ? -1 : 1),
          k = (da - n * pa) / d3.sum(values),
          index = d3.range(n),
          arcs = [],
          v;
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {
        return values[j] - values[i];
      } : function (i, j) {
        return sort(data[i], data[j]);
      });
      index.forEach(function (i) {
        arcs[i] = {
          data: data[i],
          value: v = values[i],
          startAngle: a,
          endAngle: a += v * k + pa,
          padAngle: p
        };
      });
      return arcs;
    }

    pie.value = function (_) {
      if (!arguments.length) return value;
      value = _;
      return pie;
    };

    pie.sort = function (_) {
      if (!arguments.length) return sort;
      sort = _;
      return pie;
    };

    pie.startAngle = function (_) {
      if (!arguments.length) return startAngle;
      startAngle = _;
      return pie;
    };

    pie.endAngle = function (_) {
      if (!arguments.length) return endAngle;
      endAngle = _;
      return pie;
    };

    pie.padAngle = function (_) {
      if (!arguments.length) return padAngle;
      padAngle = _;
      return pie;
    };

    return pie;
  };

  var d3_layout_pieSortByValue = {};

  d3.layout.stack = function () {
    var values = d3_identity,
        order = d3_layout_stackOrderDefault,
        offset = d3_layout_stackOffsetZero,
        out = d3_layout_stackOut,
        x = d3_layout_stackX,
        y = d3_layout_stackY;

    function stack(data, index) {
      if (!(n = data.length)) return data;
      var series = data.map(function (d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function (d) {
        return d.map(function (v, i) {
          return [x.call(stack, v, i), y.call(stack, v, i)];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var m = series[0].length,
          n,
          i,
          j,
          o;

      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);

        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }

      return data;
    }

    stack.values = function (x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };

    stack.order = function (x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };

    stack.offset = function (x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };

    stack.x = function (z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };

    stack.y = function (z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };

    stack.out = function (z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };

    return stack;
  };

  function d3_layout_stackX(d) {
    return d.x;
  }

  function d3_layout_stackY(d) {
    return d.y;
  }

  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }

  var d3_layout_stackOrders = d3.map({
    "inside-out": function (data) {
      var n = data.length,
          i,
          j,
          max = data.map(d3_layout_stackMaxIndex),
          sums = data.map(d3_layout_stackReduceSum),
          index = d3.range(n).sort(function (a, b) {
        return max[a] - max[b];
      }),
          top = 0,
          bottom = 0,
          tops = [],
          bottoms = [];

      for (i = 0; i < n; ++i) {
        j = index[i];

        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }

      return bottoms.reverse().concat(tops);
    },
    reverse: function (data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function (data) {
      var n = data.length,
          m = data[0].length,
          sums = [],
          max = 0,
          i,
          j,
          o,
          y0 = [];

      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];

        if (o > max) max = o;
        sums.push(o);
      }

      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }

      return y0;
    },
    wiggle: function (data) {
      var n = data.length,
          x = data[0],
          m = x.length,
          i,
          j,
          k,
          s1,
          s2,
          s3,
          dx,
          o,
          o0,
          y0 = [];
      y0[0] = o = o0 = 0;

      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];

        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }

          s2 += s3 * data[i][j][1];
        }

        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }

      for (j = 0; j < m; ++j) y0[j] -= o0;

      return y0;
    },
    expand: function (data) {
      var n = data.length,
          m = data[0].length,
          k = 1 / n,
          i,
          j,
          o,
          y0 = [];

      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];

        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o;else for (i = 0; i < n; i++) data[i][j][1] = k;
      }

      for (j = 0; j < m; ++j) y0[j] = 0;

      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });

  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }

  function d3_layout_stackOffsetZero(data) {
    var j = -1,
        m = data[0].length,
        y0 = [];

    while (++j < m) y0[j] = 0;

    return y0;
  }

  function d3_layout_stackMaxIndex(array) {
    var i = 1,
        j = 0,
        v = array[0][1],
        k,
        n = array.length;

    for (; i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }

    return j;
  }

  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }

  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }

  d3.layout.histogram = function () {
    var frequency = true,
        valuer = Number,
        ranger = d3_layout_histogramRange,
        binner = d3_layout_histogramBinSturges;

    function histogram(data, i) {
      var bins = [],
          values = data.map(valuer, this),
          range = ranger.call(this, values, i),
          thresholds = binner.call(this, range, values, i),
          bin,
          i = -1,
          n = values.length,
          m = thresholds.length - 1,
          k = frequency ? 1 : 1 / n,
          x;

      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }

      if (m > 0) {
        i = -1;

        while (++i < n) {
          x = values[i];

          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }

      return bins;
    }

    histogram.value = function (x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };

    histogram.range = function (x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };

    histogram.bins = function (x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function (range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };

    histogram.frequency = function (x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };

    return histogram;
  };

  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }

  function d3_layout_histogramBinFixed(range, n) {
    var x = -1,
        b = +range[0],
        m = (range[1] - b) / n,
        f = [];

    while (++x <= n) f[x] = m * x + b;

    return f;
  }

  function d3_layout_histogramRange(values) {
    return [d3.min(values), d3.max(values)];
  }

  d3.layout.pack = function () {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),
        padding = 0,
        size = [1, 1],
        radius;

    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i),
          root = nodes[0],
          w = size[0],
          h = size[1],
          r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function () {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function (d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);

      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function (d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function (d) {
          d.r -= dr;
        });
      }

      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }

    pack.size = function (_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };

    pack.radius = function (_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };

    pack.padding = function (_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };

    return d3_layout_hierarchyRebind(pack, hierarchy);
  };

  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }

  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }

  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }

  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x,
        dy = b.y - a.y,
        dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }

  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes,
        xMin = Infinity,
        xMax = -Infinity,
        yMin = Infinity,
        yMax = -Infinity,
        a,
        b,
        c,
        i,
        j,
        k,
        n;

    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }

    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);

    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);

      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;

        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0,
              s1 = 1,
              s2 = 1;

          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }

          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }

          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }

    var cx = (xMin + xMax) / 2,
        cy = (yMin + yMax) / 2,
        cr = 0;

    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }

    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }

  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }

  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }

  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;

    if (children) {
      var i = -1,
          n = children.length;

      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }

  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r,
        dx = b.x - a.x,
        dy = b.y - a.y;

    if (db && (dx || dy)) {
      var da = b.r + c.r,
          dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc),
          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }

  d3.layout.tree = function () {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null),
        separation = d3_layout_treeSeparation,
        size = [1, 1],
        nodeSize = null;

    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i),
          root0 = nodes[0],
          root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {
        var left = root0,
            right = root0,
            bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x,
            kx = size[0] / (right.x + separation(right, left) / 2 + tx),
            ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }

    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [root0]
      },
          queue = [root1],
          node1;

      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }

      return root1.children[0];
    }

    function firstWalk(v) {
      var children = v.children,
          siblings = v.parent.children,
          w = v.i ? siblings[v.i - 1] : null;

      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;

        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }

      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }

    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }

    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v,
            vop = v,
            vim = w,
            vom = vip.parent.children[0],
            sip = vip.m,
            sop = vop.m,
            sim = vim.m,
            som = vom.m,
            shift;

        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }

          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }

        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }

        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }

      return ancestor;
    }

    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }

    tree.separation = function (x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };

    tree.size = function (x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };

    tree.nodeSize = function (x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };

    return d3_layout_hierarchyRebind(tree, hierarchy);
  };

  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }

  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }

  function d3_layout_treeRight(v) {
    var children = v.children,
        n;
    return (n = children.length) ? children[n - 1] : v.t;
  }

  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }

  function d3_layout_treeShift(v) {
    var shift = 0,
        change = 0,
        children = v.children,
        i = children.length,
        w;

    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }

  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }

  d3.layout.cluster = function () {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null),
        separation = d3_layout_treeSeparation,
        size = [1, 1],
        nodeSize = false;

    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i),
          root = nodes[0],
          previousNode,
          x = 0;
      d3_layout_hierarchyVisitAfter(root, function (node) {
        var children = node.children;

        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root),
          right = d3_layout_clusterRight(root),
          x0 = left.x - separation(left, right) / 2,
          x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function (node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }

    cluster.separation = function (x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };

    cluster.size = function (x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };

    cluster.nodeSize = function (x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };

    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };

  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function (child) {
      return child.y;
    });
  }

  function d3_layout_clusterX(children) {
    return children.reduce(function (x, child) {
      return x + child.x;
    }, 0) / children.length;
  }

  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }

  function d3_layout_clusterRight(node) {
    var children = node.children,
        n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }

  d3.layout.treemap = function () {
    var hierarchy = d3.layout.hierarchy(),
        round = Math.round,
        size = [1, 1],
        padding = null,
        pad = d3_layout_treemapPadNull,
        sticky = false,
        stickies,
        mode = "squarify",
        ratio = .5 * (1 + Math.sqrt(5));

    function scale(children, k) {
      var i = -1,
          n = children.length,
          child,
          area;

      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }

    function squarify(node) {
      var children = node.children;

      if (children && children.length) {
        var rect = pad(node),
            row = [],
            remaining = children.slice(),
            child,
            best = Infinity,
            score,
            u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),
            n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;

        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;

          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }

        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }

        children.forEach(squarify);
      }
    }

    function stickify(node) {
      var children = node.children;

      if (children && children.length) {
        var rect = pad(node),
            remaining = children.slice(),
            child,
            row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;

        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;

          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }

        children.forEach(stickify);
      }
    }

    function worst(row, u) {
      var s = row.area,
          r,
          rmax = 0,
          rmin = Infinity,
          i = -1,
          n = row.length;

      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }

      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }

    function position(row, u, rect, flush) {
      var i = -1,
          n = row.length,
          x = rect.x,
          y = rect.y,
          v = u ? round(row.area / u) : 0,
          o;

      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;

        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }

        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;

        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }

        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }

    function treemap(d) {
      var nodes = stickies || hierarchy(d),
          root = nodes[0];
      root.x = 0;
      root.y = 0;
      root.dx = size[0];
      root.dy = size[1];
      if (stickies) hierarchy.revalue(root);
      scale([root], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }

    treemap.size = function (x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };

    treemap.padding = function (x) {
      if (!arguments.length) return padding;

      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [p, p, p, p] : p);
      }

      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }

      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [x, x, x, x], padConstant) : padConstant;
      return treemap;
    };

    treemap.round = function (x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };

    treemap.sticky = function (x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };

    treemap.ratio = function (x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };

    treemap.mode = function (x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };

    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };

  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }

  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3],
        y = node.y + padding[0],
        dx = node.dx - padding[1] - padding[3],
        dy = node.dy - padding[0] - padding[2];

    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }

    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }

    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }

  d3.random = {
    normal: function (µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function () {
        var x, y, r;

        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);

        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function () {
      var random = d3.random.normal.apply(d3, arguments);
      return function () {
        return Math.exp(random());
      };
    },
    bates: function (m) {
      var random = d3.random.irwinHall(m);
      return function () {
        return random() / m;
      };
    },
    irwinHall: function (m) {
      return function () {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();

        return s;
      };
    }
  };
  d3.scale = {};

  function d3_scaleExtent(domain) {
    var start = domain[0],
        stop = domain[domain.length - 1];
    return start < stop ? [start, stop] : [stop, start];
  }

  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }

  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]),
        i = interpolate(range[0], range[1]);
    return function (x) {
      return i(u(x));
    };
  }

  function d3_scale_nice(domain, nice) {
    var i0 = 0,
        i1 = domain.length - 1,
        x0 = domain[i0],
        x1 = domain[i1],
        dx;

    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }

    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }

  function d3_scale_niceStep(step) {
    return step ? {
      floor: function (x) {
        return Math.floor(x / step) * step;
      },
      ceil: function (x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }

  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };

  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [],
        i = [],
        j = 0,
        k = Math.min(domain.length, range.length) - 1;

    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }

    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }

    return function (x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }

  d3.scale.linear = function () {
    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);
  };

  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;

    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,
          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }

    function scale(x) {
      return output(x);
    }

    scale.invert = function (y) {
      return input(y);
    };

    scale.domain = function (x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };

    scale.range = function (x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };

    scale.rangeRound = function (x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };

    scale.clamp = function (x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };

    scale.interpolate = function (x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };

    scale.ticks = function (m) {
      return d3_scale_linearTicks(domain, m);
    };

    scale.tickFormat = function (m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };

    scale.nice = function (m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };

    scale.copy = function () {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };

    return rescale();
  }

  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }

  function d3_scale_linearNice(domain, m) {
    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
  }

  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain),
        span = extent[1] - extent[0],
        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),
        err = m / span * step;
    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }

  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }

  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);

    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();

      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function (d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }

      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }

    return d3.format(format);
  }

  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };

  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }

  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }

  d3.scale.log = function () {
    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);
  };

  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }

    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }

    function scale(x) {
      return linear(log(x));
    }

    scale.invert = function (x) {
      return pow(linear.invert(x));
    };

    scale.domain = function (x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };

    scale.base = function (_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };

    scale.nice = function () {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };

    scale.ticks = function () {
      var extent = d3_scaleExtent(domain),
          ticks = [],
          u = extent[0],
          v = extent[1],
          i = Math.floor(log(u)),
          j = Math.ceil(log(v)),
          n = base % 1 ? 2 : base;

      if (isFinite(j - i)) {
        if (positive) {
          for (; i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);

          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));

          for (; i++ < j;) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }

        for (i = 0; ticks[i] < u; i++) {}

        for (j = ticks.length; ticks[j - 1] > v; j--) {}

        ticks = ticks.slice(i, j);
      }

      return ticks;
    };

    scale.tickFormat = function (n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(.1, n / scale.ticks().length),
          f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, Math.floor),
          e;
      return function (d) {
        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
      };
    };

    scale.copy = function () {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };

    return d3_scale_linearRebind(scale, linear);
  }

  var d3_scale_logFormat = d3.format(".0e"),
      d3_scale_logNiceNegative = {
    floor: function (x) {
      return -Math.ceil(-x);
    },
    ceil: function (x) {
      return -Math.floor(-x);
    }
  };

  d3.scale.pow = function () {
    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);
  };

  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent),
        powb = d3_scale_powPow(1 / exponent);

    function scale(x) {
      return linear(powp(x));
    }

    scale.invert = function (x) {
      return powb(linear.invert(x));
    };

    scale.domain = function (x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };

    scale.ticks = function (m) {
      return d3_scale_linearTicks(domain, m);
    };

    scale.tickFormat = function (m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };

    scale.nice = function (m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };

    scale.exponent = function (x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };

    scale.copy = function () {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };

    return d3_scale_linearRebind(scale, linear);
  }

  function d3_scale_powPow(e) {
    return function (x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }

  d3.scale.sqrt = function () {
    return d3.scale.pow().exponent(.5);
  };

  d3.scale.ordinal = function () {
    return d3_scale_ordinal([], {
      t: "range",
      a: [[]]
    });
  };

  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;

    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }

    function steps(start, step) {
      return d3.range(domain.length).map(function (i) {
        return start + step * i;
      });
    }

    scale.domain = function (x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1,
          n = x.length,
          xi;

      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));

      return scale[ranger.t].apply(scale, ranger.a);
    };

    scale.range = function (x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };

    scale.rangePoints = function (x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0],
          stop = x[1],
          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);
      range = steps(start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };

    scale.rangeRoundPoints = function (x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0],
          stop = x[1],
          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;
      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
      rangeBand = 0;
      ranger = {
        t: "rangeRoundPoints",
        a: arguments
      };
      return scale;
    };

    scale.rangeBands = function (x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0],
          start = x[reverse - 0],
          stop = x[1 - reverse],
          step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };

    scale.rangeRoundBands = function (x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0],
          start = x[reverse - 0],
          stop = x[1 - reverse],
          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };

    scale.rangeBand = function () {
      return rangeBand;
    };

    scale.rangeExtent = function () {
      return d3_scaleExtent(ranger.a[0]);
    };

    scale.copy = function () {
      return d3_scale_ordinal(domain, ranger);
    };

    return scale.domain(domain);
  }

  d3.scale.category10 = function () {
    return d3.scale.ordinal().range(d3_category10);
  };

  d3.scale.category20 = function () {
    return d3.scale.ordinal().range(d3_category20);
  };

  d3.scale.category20b = function () {
    return d3.scale.ordinal().range(d3_category20b);
  };

  d3.scale.category20c = function () {
    return d3.scale.ordinal().range(d3_category20c);
  };

  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);
  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);
  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);
  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);

  d3.scale.quantile = function () {
    return d3_scale_quantile([], []);
  };

  function d3_scale_quantile(domain, range) {
    var thresholds;

    function rescale() {
      var k = 0,
          q = range.length;
      thresholds = [];

      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);

      return scale;
    }

    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }

    scale.domain = function (x) {
      if (!arguments.length) return domain;
      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
      return rescale();
    };

    scale.range = function (x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };

    scale.quantiles = function () {
      return thresholds;
    };

    scale.invertExtent = function (y) {
      y = range.indexOf(y);
      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];
    };

    scale.copy = function () {
      return d3_scale_quantile(domain, range);
    };

    return rescale();
  }

  d3.scale.quantize = function () {
    return d3_scale_quantize(0, 1, [0, 1]);
  };

  function d3_scale_quantize(x0, x1, range) {
    var kx, i;

    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }

    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }

    scale.domain = function (x) {
      if (!arguments.length) return [x0, x1];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };

    scale.range = function (x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };

    scale.invertExtent = function (y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [y, y + 1 / kx];
    };

    scale.copy = function () {
      return d3_scale_quantize(x0, x1, range);
    };

    return rescale();
  }

  d3.scale.threshold = function () {
    return d3_scale_threshold([.5], [0, 1]);
  };

  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }

    scale.domain = function (_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };

    scale.range = function (_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };

    scale.invertExtent = function (y) {
      y = range.indexOf(y);
      return [domain[y - 1], domain[y]];
    };

    scale.copy = function () {
      return d3_scale_threshold(domain, range);
    };

    return scale;
  }

  d3.scale.identity = function () {
    return d3_scale_identity([0, 1]);
  };

  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }

    identity.invert = identity;

    identity.domain = identity.range = function (x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };

    identity.ticks = function (m) {
      return d3_scale_linearTicks(domain, m);
    };

    identity.tickFormat = function (m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };

    identity.copy = function () {
      return d3_scale_identity(domain);
    };

    return identity;
  }

  d3.svg = {};

  function d3_zero() {
    return 0;
  }

  d3.svg.arc = function () {
    var innerRadius = d3_svg_arcInnerRadius,
        outerRadius = d3_svg_arcOuterRadius,
        cornerRadius = d3_zero,
        padRadius = d3_svg_arcAuto,
        startAngle = d3_svg_arcStartAngle,
        endAngle = d3_svg_arcEndAngle,
        padAngle = d3_svg_arcPadAngle;

    function arc() {
      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),
          r1 = Math.max(0, +outerRadius.apply(this, arguments)),
          a0 = startAngle.apply(this, arguments) - halfπ,
          a1 = endAngle.apply(this, arguments) - halfπ,
          da = Math.abs(a1 - a0),
          cw = a0 > a1 ? 0 : 1;
      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
      var rc,
          cr,
          rp,
          ap,
          p0 = 0,
          p1 = 0,
          x0,
          y0,
          x1,
          y1,
          x2,
          y2,
          x3,
          y3,
          path = [];

      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
        if (!cw) p1 *= -1;
        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
      }

      if (r1) {
        x0 = r1 * Math.cos(a0 + p1);
        y0 = r1 * Math.sin(a0 + p1);
        x1 = r1 * Math.cos(a1 - p1);
        y1 = r1 * Math.sin(a1 - p1);
        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;

        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
          var h1 = (a0 + a1) / 2;
          x0 = r1 * Math.cos(h1);
          y0 = r1 * Math.sin(h1);
          x1 = y1 = null;
        }
      } else {
        x0 = y0 = 0;
      }

      if (r0) {
        x2 = r0 * Math.cos(a1 - p0);
        y2 = r0 * Math.sin(a1 - p0);
        x3 = r0 * Math.cos(a0 + p0);
        y3 = r0 * Math.sin(a0 + p0);
        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;

        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
          var h0 = (a0 + a1) / 2;
          x2 = r0 * Math.cos(h0);
          y2 = r0 * Math.sin(h0);
          x3 = y3 = null;
        }
      } else {
        x2 = y2 = 0;
      }

      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
        cr = r0 < r1 ^ cw ? 0 : 1;
        var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),
            ax = x0 - oc[0],
            ay = y0 - oc[1],
            bx = x1 - oc[0],
            by = y1 - oc[1],
            kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
            lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);

        if (x1 != null) {
          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)),
              t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),
              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);

          if (rc === rc1) {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
          } else {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
          }
        } else {
          path.push("M", x0, ",", y0);
        }

        if (x3 != null) {
          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)),
              t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),
              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);

          if (rc === rc0) {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          } else {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          }
        } else {
          path.push("L", x2, ",", y2);
        }
      } else {
        path.push("M", x0, ",", y0);
        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
        path.push("L", x2, ",", y2);
        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
      }

      path.push("Z");
      return path.join("");
    }

    function circleSegment(r1, cw) {
      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
    }

    arc.innerRadius = function (v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };

    arc.outerRadius = function (v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };

    arc.cornerRadius = function (v) {
      if (!arguments.length) return cornerRadius;
      cornerRadius = d3_functor(v);
      return arc;
    };

    arc.padRadius = function (v) {
      if (!arguments.length) return padRadius;
      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
      return arc;
    };

    arc.startAngle = function (v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };

    arc.endAngle = function (v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };

    arc.padAngle = function (v) {
      if (!arguments.length) return padAngle;
      padAngle = d3_functor(v);
      return arc;
    };

    arc.centroid = function () {
      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
      return [Math.cos(a) * r, Math.sin(a) * r];
    };

    return arc;
  };

  var d3_svg_arcAuto = "auto";

  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }

  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }

  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }

  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }

  function d3_svg_arcPadAngle(d) {
    return d && d.padAngle;
  }

  function d3_svg_arcSweep(x0, y0, x1, y1) {
    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
  }

  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
    var x01 = p0[0] - p1[0],
        y01 = p0[1] - p1[1],
        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
        ox = lo * y01,
        oy = -lo * x01,
        x1 = p0[0] + ox,
        y1 = p0[1] + oy,
        x2 = p1[0] + ox,
        y2 = p1[1] + oy,
        x3 = (x1 + x2) / 2,
        y3 = (y1 + y2) / 2,
        dx = x2 - x1,
        dy = y2 - y1,
        d2 = dx * dx + dy * dy,
        r = r1 - rc,
        D = x1 * y2 - x2 * y1,
        d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D),
        cx0 = (D * dy - dx * d) / d2,
        cy0 = (-D * dx - dy * d) / d2,
        cx1 = (D * dy + dx * d) / d2,
        cy1 = (-D * dx + dy * d) / d2,
        dx0 = cx0 - x3,
        dy0 = cy0 - y3,
        dx1 = cx1 - x3,
        dy1 = cy1 - y3;
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];
  }

  function d3_svg_line(projection) {
    var x = d3_geom_pointX,
        y = d3_geom_pointY,
        defined = d3_true,
        interpolate = d3_svg_lineLinear,
        interpolateKey = interpolate.key,
        tension = .7;

    function line(data) {
      var segments = [],
          points = [],
          i = -1,
          n = data.length,
          d,
          fx = d3_functor(x),
          fy = d3_functor(y);

      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }

      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }

      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }

    line.x = function (_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };

    line.y = function (_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };

    line.defined = function (_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };

    line.interpolate = function (_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };

    line.tension = function (_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };

    return line;
  }

  d3.svg.line = function () {
    return d3_svg_line(d3_identity);
  };

  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function (key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });

  function d3_svg_lineLinear(points) {
    return points.join("L");
  }

  function d3_svg_lineLinearClosed(points) {
    return d3_svg_lineLinear(points) + "Z";
  }

  function d3_svg_lineStep(points) {
    var i = 0,
        n = points.length,
        p = points[0],
        path = [p[0], ",", p[1]];

    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);

    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }

  function d3_svg_lineStepBefore(points) {
    var i = 0,
        n = points.length,
        p = points[0],
        path = [p[0], ",", p[1]];

    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);

    return path.join("");
  }

  function d3_svg_lineStepAfter(points) {
    var i = 0,
        n = points.length,
        p = points[0],
        path = [p[0], ",", p[1]];

    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);

    return path.join("");
  }

  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
  }

  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));
  }

  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }

  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }

    var quad = points.length != tangents.length,
        path = "",
        p0 = points[0],
        p = points[1],
        t0 = tangents[0],
        t = t0,
        pi = 1;

    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }

    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];

      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }

    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }

    return path;
  }

  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [],
        a = (1 - tension) / 2,
        p0,
        p1 = points[0],
        p2 = points[1],
        i = 1,
        n = points.length;

    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);
    }

    return tangents;
  }

  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1,
        n = points.length,
        pi = points[0],
        x0 = pi[0],
        y0 = pi[1],
        px = [x0, x0, x0, (pi = points[1])[0]],
        py = [y0, y0, y0, pi[1]],
        path = [x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
    points.push(points[n - 1]);

    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }

    points.pop();
    path.push("L", pi);
    return path.join("");
  }

  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [],
        i = -1,
        n = points.length,
        pi,
        px = [0],
        py = [0];

    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }

    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;

    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }

    return path.join("");
  }

  function d3_svg_lineBasisClosed(points) {
    var path,
        i = -1,
        n = points.length,
        m = n + 4,
        pi,
        px = [],
        py = [];

    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }

    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
    --i;

    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }

    return path.join("");
  }

  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;

    if (n) {
      var x0 = points[0][0],
          y0 = points[0][1],
          dx = points[n][0] - x0,
          dy = points[n][1] - y0,
          i = -1,
          p,
          t;

      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }

    return d3_svg_lineBasis(points);
  }

  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }

  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],
      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],
      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];

  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }

  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }

  function d3_svg_lineFiniteDifferences(points) {
    var i = 0,
        j = points.length - 1,
        m = [],
        p0 = points[0],
        p1 = points[1],
        d = m[0] = d3_svg_lineSlope(p0, p1);

    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }

    m[i] = d;
    return m;
  }

  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [],
        d,
        a,
        b,
        s,
        m = d3_svg_lineFiniteDifferences(points),
        i = -1,
        j = points.length - 1;

    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);

      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;

        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }

    i = -1;

    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([s || 0, m[i] * s || 0]);
    }

    return tangents;
  }

  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }

  d3.svg.line.radial = function () {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };

  function d3_svg_lineRadial(points) {
    var point,
        i = -1,
        n = points.length,
        r,
        a;

    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] - halfπ;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }

    return points;
  }

  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX,
        x1 = d3_geom_pointX,
        y0 = 0,
        y1 = d3_geom_pointY,
        defined = d3_true,
        interpolate = d3_svg_lineLinear,
        interpolateKey = interpolate.key,
        interpolateReverse = interpolate,
        L = "L",
        tension = .7;

    function area(data) {
      var segments = [],
          points0 = [],
          points1 = [],
          i = -1,
          n = data.length,
          d,
          fx0 = d3_functor(x0),
          fy0 = d3_functor(y0),
          fx1 = x0 === x1 ? function () {
        return x;
      } : d3_functor(x1),
          fy1 = y0 === y1 ? function () {
        return y;
      } : d3_functor(y1),
          x,
          y;

      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }

      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);
          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }

      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }

    area.x = function (_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };

    area.x0 = function (_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };

    area.x1 = function (_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };

    area.y = function (_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };

    area.y0 = function (_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };

    area.y1 = function (_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };

    area.defined = function (_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };

    area.interpolate = function (_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };

    area.tension = function (_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };

    return area;
  }

  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;

  d3.svg.area = function () {
    return d3_svg_area(d3_identity);
  };

  d3.svg.area.radial = function () {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };

  d3.svg.chord = function () {
    var source = d3_source,
        target = d3_target,
        radius = d3_svg_chordRadius,
        startAngle = d3_svg_arcStartAngle,
        endAngle = d3_svg_arcEndAngle;

    function chord(d, i) {
      var s = subgroup(this, source, d, i),
          t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }

    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i),
          r = radius.call(self, subgroup, i),
          a0 = startAngle.call(self, subgroup, i) - halfπ,
          a1 = endAngle.call(self, subgroup, i) - halfπ;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [r * Math.cos(a0), r * Math.sin(a0)],
        p1: [r * Math.cos(a1), r * Math.sin(a1)]
      };
    }

    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }

    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }

    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }

    chord.radius = function (v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };

    chord.source = function (v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };

    chord.target = function (v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };

    chord.startAngle = function (v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };

    chord.endAngle = function (v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };

    return chord;
  };

  function d3_svg_chordRadius(d) {
    return d.radius;
  }

  d3.svg.diagonal = function () {
    var source = d3_source,
        target = d3_target,
        projection = d3_svg_diagonalProjection;

    function diagonal(d, i) {
      var p0 = source.call(this, d, i),
          p3 = target.call(this, d, i),
          m = (p0.y + p3.y) / 2,
          p = [p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }

    diagonal.source = function (x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };

    diagonal.target = function (x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };

    diagonal.projection = function (x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };

    return diagonal;
  };

  function d3_svg_diagonalProjection(d) {
    return [d.x, d.y];
  }

  d3.svg.diagonal.radial = function () {
    var diagonal = d3.svg.diagonal(),
        projection = d3_svg_diagonalProjection,
        projection_ = diagonal.projection;

    diagonal.projection = function (x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };

    return diagonal;
  };

  function d3_svg_diagonalRadialProjection(projection) {
    return function () {
      var d = projection.apply(this, arguments),
          r = d[0],
          a = d[1] - halfπ;
      return [r * Math.cos(a), r * Math.sin(a)];
    };
  }

  d3.svg.symbol = function () {
    var type = d3_svg_symbolType,
        size = d3_svg_symbolSize;

    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }

    symbol.type = function (x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };

    symbol.size = function (x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };

    return symbol;
  };

  function d3_svg_symbolSize() {
    return 64;
  }

  function d3_svg_symbolType() {
    return "circle";
  }

  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }

  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function (size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function (size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),
          rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function (size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function (size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),
          ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function (size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),
          ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3),
      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);

  d3_selectionPrototype.transition = function (name) {
    var id = d3_transitionInheritId || ++d3_transitionId,
        ns = d3_transitionNamespace(name),
        subgroups = [],
        subgroup,
        node,
        transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };

    for (var j = -1, m = this.length; ++j < m;) {
      subgroups.push(subgroup = []);

      for (var group = this[j], i = -1, n = group.length; ++i < n;) {
        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
        subgroup.push(node);
      }
    }

    return d3_transition(subgroups, ns, id);
  };

  d3_selectionPrototype.interrupt = function (name) {
    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
  };

  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());

  function d3_selection_interruptNS(ns) {
    return function () {
      var lock, active;

      if ((lock = this[ns]) && (active = lock[lock.active])) {
        if (--lock.count) delete lock[lock.active];else delete this[ns];
        lock.active += .5;
        active.event && active.event.interrupt.call(this, this.__data__, active.index);
      }
    };
  }

  function d3_transition(groups, ns, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.namespace = ns;
    groups.id = id;
    return groups;
  }

  var d3_transitionPrototype = [],
      d3_transitionId = 0,
      d3_transitionInheritId,
      d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;

  d3.transition = function (selection, name) {
    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3_selectionRoot.transition(selection);
  };

  d3.transition.prototype = d3_transitionPrototype;

  d3_transitionPrototype.select = function (selector) {
    var id = this.id,
        ns = this.namespace,
        subgroups = [],
        subgroup,
        subnode,
        node;
    selector = d3_selection_selector(selector);

    for (var j = -1, m = this.length; ++j < m;) {
      subgroups.push(subgroup = []);

      for (var group = this[j], i = -1, n = group.length; ++i < n;) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }

    return d3_transition(subgroups, ns, id);
  };

  d3_transitionPrototype.selectAll = function (selector) {
    var id = this.id,
        ns = this.namespace,
        subgroups = [],
        subgroup,
        subnodes,
        node,
        subnode,
        transition;
    selector = d3_selection_selectorAll(selector);

    for (var j = -1, m = this.length; ++j < m;) {
      for (var group = this[j], i = -1, n = group.length; ++i < n;) {
        if (node = group[i]) {
          transition = node[ns][id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);

          for (var k = -1, o = subnodes.length; ++k < o;) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }

    return d3_transition(subgroups, ns, id);
  };

  d3_transitionPrototype.filter = function (filter) {
    var subgroups = [],
        subgroup,
        group,
        node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);

    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);

      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }

    return d3_transition(subgroups, this.namespace, this.id);
  };

  d3_transitionPrototype.tween = function (name, tween) {
    var id = this.id,
        ns = this.namespace;
    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
    return d3_selection_each(this, tween == null ? function (node) {
      node[ns][id].tween.remove(name);
    } : function (node) {
      node[ns][id].tween.set(name, tween);
    });
  };

  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id,
        ns = groups.namespace;
    return d3_selection_each(groups, typeof value === "function" ? function (node, i, j) {
      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function (node) {
      node[ns][id].tween.set(name, value);
    }));
  }

  d3_transitionPrototype.attr = function (nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);

      return this;
    }

    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate,
        name = d3.ns.qualify(nameNS);

    function attrNull() {
      this.removeAttribute(name);
    }

    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }

    function attrTween(b) {
      return b == null ? attrNull : (b += "", function () {
        var a = this.getAttribute(name),
            i;
        return a !== b && (i = interpolate(a, b), function (t) {
          this.setAttribute(name, i(t));
        });
      });
    }

    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function () {
        var a = this.getAttributeNS(name.space, name.local),
            i;
        return a !== b && (i = interpolate(a, b), function (t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }

    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };

  d3_transitionPrototype.attrTween = function (nameNS, tween) {
    var name = d3.ns.qualify(nameNS);

    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function (t) {
        this.setAttribute(name, f(t));
      };
    }

    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function (t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }

    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };

  d3_transitionPrototype.style = function (name, value, priority) {
    var n = arguments.length;

    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";

        for (priority in name) this.style(priority, name[priority], value);

        return this;
      }

      priority = "";
    }

    function styleNull() {
      this.style.removeProperty(name);
    }

    function styleString(b) {
      return b == null ? styleNull : (b += "", function () {
        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name),
            i;
        return a !== b && (i = d3_interpolate(a, b), function (t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }

    return d3_transition_tween(this, "style." + name, value, styleString);
  };

  d3_transitionPrototype.styleTween = function (name, tween, priority) {
    if (arguments.length < 3) priority = "";

    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
      return f && function (t) {
        this.style.setProperty(name, f(t), priority);
      };
    }

    return this.tween("style." + name, styleTween);
  };

  d3_transitionPrototype.text = function (value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };

  function d3_transition_text(b) {
    if (b == null) b = "";
    return function () {
      this.textContent = b;
    };
  }

  d3_transitionPrototype.remove = function () {
    var ns = this.namespace;
    return this.each("end.transition", function () {
      var p;
      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };

  d3_transitionPrototype.ease = function (value) {
    var id = this.id,
        ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function (node) {
      node[ns][id].ease = value;
    });
  };

  d3_transitionPrototype.delay = function (value) {
    var id = this.id,
        ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].delay;
    return d3_selection_each(this, typeof value === "function" ? function (node, i, j) {
      node[ns][id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function (node) {
      node[ns][id].delay = value;
    }));
  };

  d3_transitionPrototype.duration = function (value) {
    var id = this.id,
        ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].duration;
    return d3_selection_each(this, typeof value === "function" ? function (node, i, j) {
      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function (node) {
      node[ns][id].duration = value;
    }));
  };

  d3_transitionPrototype.each = function (type, listener) {
    var id = this.id,
        ns = this.namespace;

    if (arguments.length < 2) {
      var inherit = d3_transitionInherit,
          inheritId = d3_transitionInheritId;

      try {
        d3_transitionInheritId = id;
        d3_selection_each(this, function (node, i, j) {
          d3_transitionInherit = node[ns][id];
          type.call(node, node.__data__, i, j);
        });
      } finally {
        d3_transitionInherit = inherit;
        d3_transitionInheritId = inheritId;
      }
    } else {
      d3_selection_each(this, function (node) {
        var transition = node[ns][id];
        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
      });
    }

    return this;
  };

  d3_transitionPrototype.transition = function () {
    var id0 = this.id,
        id1 = ++d3_transitionId,
        ns = this.namespace,
        subgroups = [],
        subgroup,
        group,
        node,
        transition;

    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);

      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = node[ns][id0];
          d3_transitionNode(node, i, ns, id1, {
            time: transition.time,
            ease: transition.ease,
            delay: transition.delay + transition.duration,
            duration: transition.duration
          });
        }

        subgroup.push(node);
      }
    }

    return d3_transition(subgroups, ns, id1);
  };

  function d3_transitionNamespace(name) {
    return name == null ? "__transition__" : "__transition_" + name + "__";
  }

  function d3_transitionNode(node, i, ns, id, inherit) {
    var lock = node[ns] || (node[ns] = {
      active: 0,
      count: 0
    }),
        transition = lock[id];

    if (!transition) {
      var time = inherit.time;
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        delay: inherit.delay,
        duration: inherit.duration,
        ease: inherit.ease,
        index: i
      };
      inherit = null;
      ++lock.count;
      d3.timer(function (elapsed) {
        var delay = transition.delay,
            duration,
            ease,
            timer = d3_timer_active,
            tweened = [];
        timer.t = delay + time;
        if (delay <= elapsed) return start(elapsed - delay);
        timer.c = start;

        function start(elapsed) {
          if (lock.active > id) return stop();
          var active = lock[lock.active];

          if (active) {
            --lock.count;
            delete lock[lock.active];
            active.event && active.event.interrupt.call(node, node.__data__, active.index);
          }

          lock.active = id;
          transition.event && transition.event.start.call(node, node.__data__, i);
          transition.tween.forEach(function (key, value) {
            if (value = value.call(node, node.__data__, i)) {
              tweened.push(value);
            }
          });
          ease = transition.ease;
          duration = transition.duration;
          d3.timer(function () {
            timer.c = tick(elapsed || 1) ? d3_true : tick;
            return 1;
          }, 0, time);
        }

        function tick(elapsed) {
          if (lock.active !== id) return 1;
          var t = elapsed / duration,
              e = ease(t),
              n = tweened.length;

          while (n > 0) {
            tweened[--n].call(node, e);
          }

          if (t >= 1) {
            transition.event && transition.event.end.call(node, node.__data__, i);
            return stop();
          }
        }

        function stop() {
          if (--lock.count) delete lock[id];else delete node[ns];
          return 1;
        }
      }, 0, time);
    }
  }

  d3.svg.axis = function () {
    var scale = d3.scale.linear(),
        orient = d3_svg_axisDefaultOrient,
        innerTickSize = 6,
        outerTickSize = 6,
        tickPadding = 3,
        tickArguments_ = [10],
        tickValues = null,
        tickFormat_;

    function axis(g) {
      g.each(function () {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale,
            scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,
            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,
            tick = g.selectAll(".tick").data(ticks, scale1),
            tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε),
            tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(),
            tickUpdate = d3.transition(tick.order()).style("opacity", 1),
            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,
            tickTransform;
        var range = d3_scaleRange(scale1),
            path = g.selectAll(".domain").data([0]),
            pathUpdate = (path.enter().append("path").attr("class", "domain"), d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"),
            lineUpdate = tickUpdate.select("line"),
            text = tick.select("text").text(tickFormat),
            textEnter = tickEnter.select("text"),
            textUpdate = tickUpdate.select("text"),
            sign = orient === "top" || orient === "left" ? -1 : 1,
            x1,
            x2,
            y1,
            y2;

        if (orient === "bottom" || orient === "top") {
          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
        } else {
          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
        }

        lineEnter.attr(y2, sign * innerTickSize);
        textEnter.attr(y1, sign * tickSpacing);
        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);

        if (scale1.rangeBand) {
          var x = scale1,
              dx = x.rangeBand() / 2;

          scale0 = scale1 = function (d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1, scale0);
        }

        tickEnter.call(tickTransform, scale0, scale1);
        tickUpdate.call(tickTransform, scale1, scale1);
      });
    }

    axis.scale = function (x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };

    axis.orient = function (x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };

    axis.ticks = function () {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = arguments;
      return axis;
    };

    axis.tickValues = function (x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };

    axis.tickFormat = function (x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };

    axis.tickSize = function (x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };

    axis.innerTickSize = function (x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };

    axis.outerTickSize = function (x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };

    axis.tickPadding = function (x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };

    axis.tickSubdivide = function () {
      return arguments.length && axis;
    };

    return axis;
  };

  var d3_svg_axisDefaultOrient = "bottom",
      d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };

  function d3_svg_axisX(selection, x0, x1) {
    selection.attr("transform", function (d) {
      var v0 = x0(d);
      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
    });
  }

  function d3_svg_axisY(selection, y0, y1) {
    selection.attr("transform", function (d) {
      var v0 = y0(d);
      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
    });
  }

  d3.svg.brush = function () {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"),
        x = null,
        y = null,
        xExtent = [0, 0],
        yExtent = [0, 0],
        xExtentDomain,
        yExtentDomain,
        xClamp = true,
        yClamp = true,
        resizes = d3_svg_brushResizes[0];

    function brush(g) {
      g.each(function () {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([0]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function (d) {
          return "resize " + d;
        }).style("cursor", function (d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function (d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function (d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g),
            backgroundUpdate = d3.transition(background),
            range;

        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }

        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }

        redraw(gUpdate);
      });
    }

    brush.event = function (g) {
      g.each(function () {
        var event_ = event.of(this, arguments),
            extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        },
            extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;

        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function () {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function () {
            var xi = d3_interpolateArray(xExtent, extent1.x),
                yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function (t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function () {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };

    function redraw(g) {
      g.selectAll(".resize").attr("transform", function (d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }

    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }

    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }

    function brushstart() {
      var target = this,
          eventTarget = d3.select(d3.event.target),
          event_ = event.of(target, arguments),
          g = d3.select(target),
          resizing = eventTarget.datum(),
          resizingX = !/^(n|s)$/.test(resizing) && x,
          resizingY = !/^(e|w)$/.test(resizing) && y,
          dragging = eventTarget.classed("extent"),
          dragRestore = d3_event_dragSuppress(),
          center,
          origin = d3.mouse(target),
          offset;
      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);

      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }

      g.interrupt().selectAll("*").interrupt();

      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing),
            ey = +/^n/.test(resizing);
        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();

      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();

      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }

          d3_eventPreventDefault();
        }
      }

      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }

      function brushmove() {
        var point = d3.mouse(target),
            moved = false;

        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }

        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }

        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }

        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }

        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }

      function move1(point, scale, i) {
        var range = d3_scaleRange(scale),
            r0 = range[0],
            r1 = range[1],
            position = origin[i],
            extent = i ? yExtent : xExtent,
            size = extent[1] - extent[0],
            min,
            max;

        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }

        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];

        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));

          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }

        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null;else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }

      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }

    brush.x = function (z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };

    brush.y = function (z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };

    brush.clamp = function (z) {
      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;
      return brush;
    };

    brush.extent = function (z) {
      var x0, x1, y0, y1, t;

      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }

        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }

        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];
      }

      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [x0, x1];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];
      }

      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [y0, y1];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];
      }

      return brush;
    };

    brush.clear = function () {
      if (!brush.empty()) {
        xExtent = [0, 0], yExtent = [0, 0];
        xExtentDomain = yExtentDomain = null;
      }

      return brush;
    };

    brush.empty = function () {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };

    return d3.rebind(brush, event, "on");
  };

  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;

  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }

  d3_time_formatIsoNative.parse = function (string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };

  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function (date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function (date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function (date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function (date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function (date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function (date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function (date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function (date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function (date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function (date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function (date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function (date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;

  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }

    scale.invert = function (x) {
      return d3_time_scaleDate(linear.invert(x));
    };

    scale.domain = function (x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };

    function tickMethod(extent, count) {
      var span = extent[1] - extent[0],
          target = span / count,
          i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {
        return d / 31536e6;
      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }

    scale.nice = function (interval, skip) {
      var domain = scale.domain(),
          extent = d3_scaleExtent(domain),
          method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];

      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }

      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function (date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);

          return date;
        },
        ceil: function (date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);

          return date;
        }
      } : interval));
    };

    scale.ticks = function (interval, skip) {
      var extent = d3_scaleExtent(scale.domain()),
          method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [{
        range: interval
      }, skip];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };

    scale.tickFormat = function () {
      return format;
    };

    scale.copy = function () {
      return d3_time_scale(linear.copy(), methods, format);
    };

    return d3_scale_linearRebind(scale, linear);
  }

  function d3_time_scaleDate(t) {
    return new Date(t);
  }

  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];
  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];
  var d3_time_scaleLocalFormat = d3_time_format.multi([[".%L", function (d) {
    return d.getMilliseconds();
  }], [":%S", function (d) {
    return d.getSeconds();
  }], ["%I:%M", function (d) {
    return d.getMinutes();
  }], ["%I %p", function (d) {
    return d.getHours();
  }], ["%a %d", function (d) {
    return d.getDay() && d.getDate() != 1;
  }], ["%b %d", function (d) {
    return d.getDate() != 1;
  }], ["%B", function (d) {
    return d.getMonth();
  }], ["%Y", d3_true]]);
  var d3_time_scaleMilliseconds = {
    range: function (start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;

  d3_time.scale = function () {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };

  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {
    return [m[0].utc, m[1]];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[".%L", function (d) {
    return d.getUTCMilliseconds();
  }], [":%S", function (d) {
    return d.getUTCSeconds();
  }], ["%I:%M", function (d) {
    return d.getUTCMinutes();
  }], ["%I %p", function (d) {
    return d.getUTCHours();
  }], ["%a %d", function (d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  }], ["%b %d", function (d) {
    return d.getUTCDate() != 1;
  }], ["%B", function (d) {
    return d.getUTCMonth();
  }], ["%Y", d3_true]]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;

  d3_time.scale.utc = function () {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };

  d3.text = d3_xhrType(function (request) {
    return request.responseText;
  });

  d3.json = function (url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };

  function d3_json(request) {
    return JSON.parse(request.responseText);
  }

  d3.html = function (url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };

  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }

  d3.xml = d3_xhrType(function (request) {
    return request.responseXML;
  });
  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
  this.d3 = d3;
}();

/***/ }),

/***/ "./public/js/login.js":
/*!****************************!*\
  !*** ./public/js/login.js ***!
  \****************************/
/*! namespace exports */
/*! export loadLoginDiv [provided] [no usage info] [missing usage info prevents renaming] */
/*! export login [provided] [no usage info] [missing usage info prevents renaming] */
/*! export logout [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "login": () => /* binding */ login,
/* harmony export */   "logout": () => /* binding */ logout,
/* harmony export */   "loadLoginDiv": () => /* binding */ loadLoginDiv
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* eslint-disable */
;
const login = async (emailOrUsername, password) => {
  try {
    const data = {
      password
    };

    if (emailOrUsername.match(/@/)) {
      data.email = emailOrUsername;
    } else {
      data.username = emailOrUsername;
    }

    const res = await axios__WEBPACK_IMPORTED_MODULE_0___default()({
      method: 'POST',
      url: '/api/v1/users/login',
      data
    });

    if (res.data.status === 'success') {
      console.log('success', 'Logged in successfully!');
      window.setTimeout(() => {
        location.assign('/');
      }, 1500);
    }
  } catch (err) {
    console.log('error', err);
  }
};
const logout = async () => {
  try {
    location.assign('/api/v1/users/logout');
  } catch (err) {
    console.log('error', err);
  }
};
const loadLoginDiv = divID => {
  let loginDivs = {};
  loginDivs.loginDiv = `<div class="body bg-white" style=" border-radius:5px; padding:30px;">
  <form action="/login" method="post">
   <div style="margin:auto; height:80px; padding-top:20px;">
       <h2 class="text-center">Log In</h2>
   </div>
   <div class="form-group" style="margin-top:20px;">
       <input id="usernameoremail" name="username" class="form-control" placeholder="E-mail/Username" required>
   </div>
   <div class="form-group">
       <input id="password" type="password" name="password" class="form-control" placeholder="Password" minlength='6' required>
   </div>
   <div class="footer">
       <button id="loginBtn" type="submit" name="login" class="btn btn-info" style="float:right;">Login</button>
   </div>
  </form>
  
</div>`;
  /* <div class="text-center" style="margin-top:30%;">Don't have an account <button type="submit" name="signup" id="signupBtn" class="btn btn-light" style="margin-left:10px;">Sign Up</button>
  </div> */

  loginDivs.registerDiv = `<div class="body bg-white" style=" border-radius:5px; padding:30px;"
  <form>
  <div class="body bg-white" style=" border-radius:5px;">
      <div style="margin:auto; height:80px; padding-top:20px;">
        <h2 class="text-center">Sign Up</h2>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="text" name="firstname" class="form-control" placeholder="First name" maxlength="25" value="" required>
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="text" name="lastname" class="form-control" placeholder="Last name" maxlength="20" value="" required>
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="text" name="username" class="form-control" placeholder="Username" maxlength="45" value="" required>
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="email" name="email" class="form-control" maxlength="45" placeholder="Email" value="" required>
        </div>                
      </div>                
      <div class="text-center form-group">
        <div>
          <input type="text" maxlength="45" name="institute" class="form-control" placeholder="Institute" required>
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="text" name="lab" class="form-control" placeholder="Lab/Department" maxlength="45" value="">
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="password" name="password" class="form-control password" placeholder="Password" required>
        </div>
      </div>
      <div class="text-center form-group">
        <div>
          <input type="password" name="passwordConfirm" class="form-control password" placeholder="Verify Password"  required>
        </div>
      </div>
      <div class="text-center form-group" style="margin-top:10%;">
          <button id="registerBtn" type="submit" name="request" class="btn btn-info btn-block">Submit Request</button>
          <button type="submit" name="ok" class="signInBackBtn btn btn-light btn-block">Back</button>
      </div>
  </div>
</form>
</div>`;
  loginDivs.successSignUpDiv = `
  <div class="body bg-white" style=" border-radius:5px; padding:30px;">
    <div style="margin:auto; height:80px; padding-top:20px;">
        <h2 class="text-center">Confirm your email address</h2>
    </div>
    <div class="text-center form-group">
      <p> We have sent an email with a confirmation link to your email address. In order to complete the sign-up process, please click the confirmation link.</p>
    </div>
    <div class="text-center form-group">
      <p> If you do not receive a confirmation email, please check your spam folder.</p>
    </div>
    <div class="text-center form-group" style="margin-top:10%;">
      <button type="submit" name="ok" class="signInBackBtn btn btn-info btn-block">OK</button>
    </div>
  </div>`;

  if (loginDivs[divID]) {
    $('#loginOuterDiv').html(loginDivs[divID]);
  }
};

/***/ }),

/***/ "./public/js/profile.js":
/*!******************************!*\
  !*** ./public/js/profile.js ***!
  \******************************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements:  */
/***/ (() => {

throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\nSyntaxError: /mac/biocore/dmeta/dmeta/public/js/profile.js: Identifier 'fomatted_data' has already been declared (194:6)\n\n\u001b[0m \u001b[90m 192 | \u001b[39m  \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39m$s\u001b[33m.\u001b[39mserver) $s\u001b[33m.\u001b[39mserver \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 193 | \u001b[39m  \u001b[36mconst\u001b[39m fomatted_data \u001b[33m=\u001b[39m $s\u001b[33m.\u001b[39mserver\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 | \u001b[39m  let fomatted_data \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 195 | \u001b[39m  \u001b[36mif\u001b[39m ($\u001b[33m.\u001b[39mfn\u001b[33m.\u001b[39m\u001b[33mDataTable\u001b[39m\u001b[33m.\u001b[39misDataTable(\u001b[32m`#${TableID}`\u001b[39m)) {\u001b[0m\n\u001b[0m \u001b[90m 196 | \u001b[39m    $(\u001b[32m`#${TableID}`\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m 197 | \u001b[39m      \u001b[33m.\u001b[39m\u001b[33mDataTable\u001b[39m()\u001b[0m\n    at Parser._raise (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:790:17)\n    at Parser.raiseWithData (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:783:17)\n    at Parser.raise (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:777:17)\n    at ScopeHandler.checkRedeclarationInScope (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:4915:12)\n    at ScopeHandler.declareName (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:4881:12)\n    at Parser.checkLVal (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:9550:22)\n    at Parser.parseVarId (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:12327:10)\n    at Parser.parseVar (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:12302:12)\n    at Parser.parseVarStatement (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:12114:10)\n    at Parser.parseStatementContent (/mac/biocore/dmeta/dmeta/node_modules/@babel/core/node_modules/@babel/parser/lib/index.js:11706:21)");

/***/ }),

/***/ "./public/js/treeView.js":
/*!*******************************!*\
  !*** ./public/js/treeView.js ***!
  \*******************************/
/*! namespace exports */
/*! export refreshTreeView [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "refreshTreeView": () => /* binding */ refreshTreeView
/* harmony export */ });
/* harmony import */ var _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./library/d3_3.5.3 */ "./public/js/library/d3_3.5.3.js");
/* harmony import */ var _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var d3_mitch_tree_dist_css_d3_mitch_tree_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-mitch-tree/dist/css/d3-mitch-tree.min.css */ "./node_modules/d3-mitch-tree/dist/css/d3-mitch-tree.min.css");
/* harmony import */ var d3_mitch_tree_dist_css_d3_mitch_tree_theme_default_min_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-mitch-tree/dist/css/d3-mitch-tree-theme-default.min.css */ "./node_modules/d3-mitch-tree/dist/css/d3-mitch-tree-theme-default.min.css");
/* harmony import */ var _jsfuncs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./jsfuncs */ "./public/js/jsfuncs.js");
/* harmony import */ var _dashboard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dashboard */ "./public/js/dashboard.js");
/* eslint-disable */
;


(_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().mitchTree) = __webpack_require__(/*! d3-mitch-tree/dist/js/d3-mitch-tree.min.js */ "./node_modules/d3-mitch-tree/dist/js/d3-mitch-tree.min.js");


let $s = {
  tree: {},
  dataTree: {},
  collectionFlatTree: [],
  scope: {},
  treePlugin: {}
};

const getChildrenOfCollection = collID => {
  let childCollections = $s.collectionFlatTree.filter(d => d.parentIds.includes(collID));
  return childCollections;
};

const getRefField = (collID, childColls) => {
  const parentIds = childColls.parentIds;
  const refFieldNames = childColls.refFieldNames;

  for (let k = 0; k < parentIds.length; k++) {
    if (parentIds[k] == collID) {
      return refFieldNames[k];
    }
  }

  return '';
};

(_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().contextMenu) = function (type, openCallback) {
  // create the div element that will hold the context menu
  _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().selectAll('.d3-context-menu').data([1]).enter().append('div').attr('class', 'd3-context-menu'); // close menu

  _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().select('body').on('click.d3-context-menu', function () {
    _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().select('.d3-context-menu').style('display', 'none');
  }); // this gets executed when a contextmenu event occurs

  return function (data, index) {
    const parentIds = data.data.parentIds;
    const parentLabels = data.data.parentLabels;
    const parentId = data.data.parentId;
    let menu = [];

    if (type == 'collection') {
      menu.push({
        title: 'Edit Fields',
        action: function (elm, d, i) {
          $('.nav-tabs a[href="#collTab_' + data.data.id + '"]').tab('show');
        }
      });

      if (parentLabels.length > 1) {
        for (let k = 0; k < parentLabels.length; k++) {
          const selparentIds = parentIds[k];

          if (parentId != selparentIds) {
            menu.push({
              title: `Change View for ${parentLabels[k]} Branch`,
              action: function (elm, d, i) {
                $s.tree[data.data.projectID][data.data.id]['parentId'] = selparentIds;
                refreshTreeView(data.data.projectID, $s.scope, true);
              }
            });
          }
        }
      }
    } else if (type == 'data') {
      let collID = data.data.id.split('-')[0];
      if (collID == 'all_data') return; //main parent collections doesn't have name info

      if (!data.data.name) {
        menu.push({
          title: `Insert ${data.data.description}`,
          action: async function (elm, d, i) {
            const collectionID = data.data.id;
            let button = $(`button.insert-data[collid*=${collectionID}]`);

            const callbackOnSuccess = function (scope, collectID, dataID) {
              refreshTreeView(data.data.projectID, scope, true, {
                collectionID: collectID,
                dataID: dataID
              });
            };

            await (0,_dashboard__WEBPACK_IMPORTED_MODULE_4__.insertDataModal)(button, true, callbackOnSuccess);
          }
        });
      } else {
        let dataName = data.data.dataName;
        const childColls = getChildrenOfCollection(collID);

        for (let k = 0; k < childColls.length; k++) {
          const refField = getRefField(collID, childColls[k]);
          const childrenCollID = childColls[k].id;
          menu.push({
            title: `Insert ${childColls[k].description}`,
            action: async function (elm, d, i) {
              const collectionID = data.data.id.split('-')[0];
              let button = $(`button.insert-data[collid*=${collectionID}]`);

              if (childrenCollID) {
                button = $(`button.insert-data[collid*=${childrenCollID}]`);
              } // const dataID = data.data.id.split('-')[1];


              const callbackOnSuccess = function (scope, collectID, dataID) {
                refreshTreeView(data.data.projectID, scope, true, {
                  collectionID: collectID,
                  dataID: dataID
                });
              };

              await (0,_dashboard__WEBPACK_IMPORTED_MODULE_4__.insertDataModal)(button, false, callbackOnSuccess);

              if (refField) {
                const selData = {};
                selData[refField] = dataName;
                console.log(selData);
                (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_3__.fillFormByName)('#crudModal', 'input, select', selData, true);
                (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_3__.prepareClickToActivateModal)('#crudModal', '#crudModalBody', 'input, select', selData);
              }
            }
          });
        }

        menu.push({
          title: 'Edit',
          action: function (elm, d, i) {
            const collectionID = data.data.id.split('-')[0];
            const button = $(`button.edit-data[collid*=${collectionID}]`);
            const dataID = data.data.id.split('-')[1];

            const callback = function (scope) {
              refreshTreeView(data.data.projectID, scope, true, {
                collectionID,
                dataID
              });
            };

            (0,_dashboard__WEBPACK_IMPORTED_MODULE_4__.editDataModal)(button, [dataID], callback);
          }
        });
        menu.push({
          title: 'Delete',
          action: async function (elm, d, i) {
            const parentID = data.parent.data.id;
            const parentCollId = parentID.split('-')[0];
            const parentDataId = parentID.split('-')[1];
            const collectionID = data.data.id.split('-')[0];
            const button = $(`button.delete-data[collid*=${collectionID}]`);
            const dataID = data.data.id.split('-')[1];

            const callback = function (scope) {
              if (parentCollId) {
                refreshTreeView(data.data.projectID, scope, true, {
                  collectionID: parentCollId,
                  dataID: parentDataId
                });
              }
            };

            await (0,_dashboard__WEBPACK_IMPORTED_MODULE_4__.deleteDataModal)(button, [dataID], callback);
          }
        });

        if (parentLabels && parentLabels.length > 1) {
          for (let k = 0; k < parentLabels.length; k++) {
            const selparentIds = parentIds[k];

            if (parentId != selparentIds) {
              menu.push({
                title: `Change View for ${parentLabels[k]} Branch`,
                action: function (elm, d, i) {
                  const collectionID = data.data.id.split('-')[0];
                  const dataID = data.data.id.split('-')[1];
                  $s.dataTree[data.data.projectID][collectionID]['parentId'] = k;
                  refreshTreeView(data.data.projectID, $s.scope, true, {
                    collectionID,
                    dataID
                  });
                }
              });
            }
          }
        }
      }
    }

    var elm = this;
    _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().selectAll('.d3-context-menu').html('');
    var list = _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().selectAll('.d3-context-menu').append('ul');
    list.selectAll('li').data(menu).enter().append('li').html(function (d) {
      return typeof d.title === 'string' ? d.title : d.title(data);
    }).on('click', function (d, i) {
      d.action(elm, data, index);
      _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().select('.d3-context-menu').style('display', 'none');
    }); // the openCallback allows an action to fire before the menu is displayed
    // an example usage would be closing a tooltip

    if (openCallback) {
      if (openCallback(data, index) === false) {
        return;
      }
    } // display context menu


    _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().select('.d3-context-menu').style('left', (_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().event.pageX) - 2 + 'px').style('top', (_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().event.pageY) - 2 + 'px').style('display', 'block');
    _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().event.preventDefault();
    _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().event.stopPropagation();
  };
};

const getProjectCollectionFlatTree = ($scope, projectID) => {
  let treeData = [];
  const projectData = $scope.projects.filter(e => e._id == projectID);
  const projectName = projectData[0].name;
  const projectCollections = $scope.collections.filter(e => e.projectID == projectID);
  const projectCollectionsIDs = projectCollections.map(e => e._id);
  treeData.push({
    id: 'project',
    description: projectName,
    parentId: null,
    parentIds: []
  });
  let rootIds = [];

  for (var i = 0; i < projectCollections.length; i++) {
    const collectionID = projectCollections[i]._id;
    let obj = {
      id: collectionID
    };
    const refFields = $scope.fields.filter(e => e.collectionID == collectionID && e.ref);
    const refCollectionIDs = [];
    const refCollectionLabels = [];
    const refFieldNames = [];

    for (var k = 0; k < refFields.length; k++) {
      let ref = refFields[k].ref;
      let refName = refFields[k].name;
      const PREFIX = `${projectName}_`;

      if (ref.indexOf(PREFIX) == 0) {
        const refCollectionName = ref.slice(PREFIX.length);
        const refColl = projectCollections.filter(e => e.name == refCollectionName);

        if (refColl && refColl[0]) {
          refCollectionIDs.push(refColl[0]._id);
          refCollectionLabels.push(refColl[0].label);
          refFieldNames.push(refName);
        }
      }
    }

    obj['parentIds'] = refCollectionIDs;
    obj['parentLabels'] = refCollectionLabels;
    obj['refFieldNames'] = refFieldNames; // obj['name'] = projectCollections[i].name;

    obj['description'] = projectCollections[i].label;
    obj['projectID'] = projectID;

    if (refCollectionIDs[0] && projectCollectionsIDs.includes(refCollectionIDs[0])) {
      if ($s.tree[projectID][collectionID] && $s.tree[projectID][collectionID]['parentId']) {
        obj['parentId'] = $s.tree[projectID][collectionID]['parentId'];
      } else {
        obj['parentId'] = refCollectionIDs[0];
        $s.tree[projectID][collectionID] = {};
        $s.tree[projectID][collectionID]['parentId'] = refCollectionIDs[0];
      }
    } else {
      obj['parentId'] = 'project';
      rootIds.push(collectionID);
    }

    treeData.push(obj);
  }

  return treeData;
};

const getProjectDataFlatTree = ($scope, projectID, collectionTree) => {
  let treeData = [];
  treeData.push({
    id: 'all_data',
    description: 'All Data',
    parentId: null,
    parentIds: []
  });

  for (let i = 0; i < collectionTree.length; i++) {
    const collID = collectionTree[i].id;
    const collDetails = $scope.collections.filter(i => i._id === collID);
    let collLabel = '';
    if (collDetails && collDetails[0] && collDetails[0].label) collLabel = collDetails[0].label;
    const parentCollIds = collectionTree[i].parentIds;
    const parentCollLabels = collectionTree[i].parentLabels;
    const refFieldNames = collectionTree[i].refFieldNames;
    const collData = $scope.data[collID];
    const fieldsOfCollection = $scope.fields.filter(f => f.collectionID === collID);
    let showFields = ['name'];

    if (collID != 'project' && fieldsOfCollection) {
      const showFieldsData = (0,_jsfuncs__WEBPACK_IMPORTED_MODULE_3__.getDropdownFields)(collData[0], fieldsOfCollection);
      if (showFieldsData && showFieldsData[0]) showFields = showFieldsData;
    }

    if (collectionTree[i].parentId == 'project') {
      treeData.push({
        id: collID,
        description: collectionTree[i].description,
        parentId: 'all_data',
        parentIds: [],
        projectID: projectID
      });
    }

    if (collID != 'project' && collData) {
      for (let k = 0; k < collData.length; k++) {
        const dataID = collData[k]._id;
        let dataName = collData[k][showFields[0]];
        let obj = {};
        obj['dataName'] = dataName;
        if (collData[k][showFields[1]]) dataName = `${dataName}\n${collData[k][showFields[1]]}`;
        let parentDataIds = [];
        let parentLabels = [];
        let id = `${collID}-${dataID}`;
        obj.id = id;
        obj.description = dataName;
        obj.projectID = projectID;
        obj.name = collLabel;

        for (let n = 0; n < refFieldNames.length; n++) {
          let refField = refFieldNames[n];
          const refData = collData[k][refField];

          if (refData && refData._id) {
            parentDataIds.push(`${parentCollIds[n]}-${refData._id}`);
            parentLabels.push(parentCollLabels[n]);
          } else {
            console.log(refField);
            console.log(collData[k]);
            console.log(refData);
          }
        }

        obj['parentIds'] = parentDataIds;
        obj['parentLabels'] = parentLabels;

        if (parentDataIds[0]) {
          if ($s.dataTree[projectID][collID] && $s.dataTree[projectID][collID]['parentId'] !== undefined) {
            obj['parentId'] = parentDataIds[$s.dataTree[projectID][collID]['parentId']];
          } else {
            obj['parentId'] = parentDataIds[0];
            $s.dataTree[projectID][collID] = {};
            $s.dataTree[projectID][collID]['parentId'] = 0;
          }
        } else {
          obj['parentId'] = collID;
        }

        treeData.push(obj);
      }
    }
  }

  console.log('treeData', treeData);
  return treeData;
};

const getTreeData = ($scope, projectID, collData) => {
  let treeData = [];
  $s.collectionFlatTree = getProjectCollectionFlatTree($scope, projectID); // Collection data for dashboard

  if (collData) {
    treeData = getProjectDataFlatTree($scope, projectID, $s.collectionFlatTree); // Project Collections for admin page
  } else {
    treeData = $s.collectionFlatTree;
  }

  const arrayToTree = (items, id = null, link = 'parentId') => items.filter(item => item[link] === id).map(item => ({ ...item,
    children: arrayToTree(items, item.id)
  }));

  const data = arrayToTree(treeData);

  if (data[0]) {
    return data[0];
  }

  return data;
};

const refreshTreeView = (projectID, $scope, reload, collData) => {
  $s.scope = $scope;
  let type = 'collection';
  if (collData) type = 'data';

  if (document.getElementById(`d3-tree-${projectID}`)) {
    const isTreeViewInitialized = $(`#d3-tree-${projectID}`).html();

    if (!isTreeViewInitialized || reload) {
      if (!$s.tree[projectID]) $s.tree[projectID] = {};
      if (!$s.dataTree[projectID]) $s.dataTree[projectID] = {};
      var data = getTreeData($scope, projectID, collData);
      var treePlugin = new (_library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().mitchTree.boxedTree)().setData(data).setMinScale(0.001).setElement(document.getElementById(`d3-tree-${projectID}`)).setIdAccessor(function (data) {
        return data.id;
      }).setChildrenAccessor(function (data) {
        return data.children;
      }).setBodyDisplayTextAccessor(function (data) {
        return data.description;
      }).setTitleDisplayTextAccessor(function (data) {
        return data.name;
      }) //.setOrientation('topToBottom')
      // .setMargins({
      //   top: 0,
      //   right: 0,
      //   bottom: 0,
      //   left: 0
      // })
      .getNodeSettings().setSizingMode('nodesize').setVerticalSpacing(25).setHorizontalSpacing(10).back().initialize();
      treePlugin.getZoomListener().scaleTo(treePlugin.getSvg(), 1.6);
      treePlugin.getZoomListener().translateTo(treePlugin.getSvg(), treePlugin.getWidthWithoutMargins() / 2, 0); // Expand all nodes

      if (type === 'collection') {
        var nodes = treePlugin.getNodes();
        nodes.forEach(function (node, index, arr) {
          treePlugin.expand(node);
        });
        treePlugin.update(treePlugin.getRoot());
      } // events: {
      //   nodeClick: function(data, index, arr) {
      //     this.removeSelection(this.getRoot());
      //     event.nodeDataItem.selected = true;
      //     this.centerNode(event.nodeDataItem);
      //     // Cancel the collapse event
      //     if (event.type === 'collapse') event.preventDefault();
      //   }
      // }


      function updateTreeClasses(treePlugin) {
        treePlugin.getPanningContainer().selectAll('g.node').attr('class', function (data, index, arr) {
          var existingClasses = this.getAttribute('class');
          let multiParent = '';

          if (data.data.parentIds && data.data.parentIds.length > 1) {
            multiParent = 'multi-parent';
          }

          return existingClasses + ' ' + multiParent;
        });
        _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().selectAll('g.node').on('contextmenu', _library_d3_3_5_3__WEBPACK_IMPORTED_MODULE_0___default().contextMenu(type));
      } //Override the core update method, so it'd call our custom update method


      treePlugin.update = function (nodeDataItem) {
        // Call the original update method
        this.__proto__.update.call(this, nodeDataItem);

        updateTreeClasses(this);
      };

      updateTreeClasses(treePlugin);
    }

    if (collData) {
      const {
        collectionID,
        dataID
      } = collData;

      const focusNode = value => {
        var nodeMatchingText = treePlugin.getNodes().find(function (node) {
          return node.data.id == value;
        });
        if (nodeMatchingText) treePlugin.focusToNode(nodeMatchingText); // else if (value != null) treePlugin.focusToNode(value);
      };

      if (collectionID && dataID) {
        focusNode(`${collectionID}-${dataID}`);
      } else if (collectionID && !dataID) {
        focusNode(`${collectionID}`);
      }
    }
  }
};

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/brand.min.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/brand.min.css ***!
  \**********************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, module.id, __webpack_require__.d, __webpack_require__.*, module */
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _fonts_CoreUI_Icons_Brand_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Brand.eot?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.eot?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Brand_ttf_64h6xh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Brand.ttf?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.ttf?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Brand_woff_64h6xh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Brand.woff?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.woff?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Brand_svg_64h6xh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Brand.svg?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.svg?64h6xh");
// Imports
;






var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Brand_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__.default);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Brand_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__.default, { hash: "#iefix" });
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Brand_ttf_64h6xh__WEBPACK_IMPORTED_MODULE_4__.default);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Brand_woff_64h6xh__WEBPACK_IMPORTED_MODULE_5__.default);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Brand_svg_64h6xh__WEBPACK_IMPORTED_MODULE_6__.default, { hash: "#CoreUI-Icons-Linear" });
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";/*!\n * CoreUI Icons - Brand Icons\n * @version v1.0.1\n * @link https://coreui.io/icons/brand/\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under CC0 1.0 Universal\n */@font-face{font-family:CoreUI-Icons-Brand;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"truetype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"svg\");font-weight:400;font-style:normal}[class*=\" cib-\"],[class^=cib-]{font-family:CoreUI-Icons-Brand!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cib-500px-5:before{content:\"\\e900\"}.cib-500px:before{content:\"\\e901\"}.cib-about-me:before{content:\"\\e902\"}.cib-abstract:before{content:\"\\e903\"}.cib-acm:before{content:\"\\e904\"}.cib-addthis:before{content:\"\\e905\"}.cib-adguard:before{content:\"\\e906\"}.cib-adobe-acrobat-reader:before{content:\"\\e907\"}.cib-adobe-aftere-ffects:before{content:\"\\e908\"}.cib-adobe-audition:before{content:\"\\e909\"}.cib-adobe-creative-cloud:before{content:\"\\e90a\"}.cib-adobe-dreamweaver:before{content:\"\\e90b\"}.cib-adobe-illustrator:before{content:\"\\e90c\"}.cib-adobe-indesign:before{content:\"\\e90d\"}.cib-adobe-lightroom-classic:before{content:\"\\e90e\"}.cib-adobe-lightroom:before{content:\"\\e90f\"}.cib-adobe-photoshop:before{content:\"\\e910\"}.cib-adobe-premiere:before{content:\"\\e911\"}.cib-adobe-typekit:before{content:\"\\e912\"}.cib-adobe-xd:before{content:\"\\e913\"}.cib-adobe:before{content:\"\\e914\"}.cib-airbnb:before{content:\"\\e915\"}.cib-algolia:before{content:\"\\e916\"}.cib-alipay:before{content:\"\\e917\"}.cib-allocine:before{content:\"\\e918\"}.cib-amazon-aws:before{content:\"\\e919\"}.cib-amazon-pay:before{content:\"\\e91a\"}.cib-amazon:before{content:\"\\e91b\"}.cib-amd:before{content:\"\\e91c\"}.cib-american-express:before{content:\"\\e91d\"}.cib-anaconda:before{content:\"\\e91e\"}.cib-analogue:before{content:\"\\e91f\"}.cib-android-alt:before{content:\"\\e920\"}.cib-android:before{content:\"\\e921\"}.cib-angellist:before{content:\"\\e922\"}.cib-angular-universal:before{content:\"\\e923\"}.cib-angular:before{content:\"\\e924\"}.cib-ansible:before{content:\"\\e925\"}.cib-apache-airflow:before{content:\"\\e926\"}.cib-apache-flink:before{content:\"\\e927\"}.cib-apache-spark:before{content:\"\\e928\"}.cib-apache:before{content:\"\\e929\"}.cib-app-store-ios:before{content:\"\\e92a\"}.cib-app-store:before{content:\"\\e92b\"}.cib-apple-music:before{content:\"\\e92c\"}.cib-apple-pay:before{content:\"\\e92d\"}.cib-apple-podcasts:before{content:\"\\e92e\"}.cib-apple:before{content:\"\\e92f\"}.cib-appveyor:before{content:\"\\e930\"}.cib-aral:before{content:\"\\e931\"}.cib-arch-linux:before{content:\"\\e932\"}.cib-archive-of-our-own:before{content:\"\\e933\"}.cib-arduino:before{content:\"\\e934\"}.cib-artstation:before{content:\"\\e935\"}.cib-arxiv:before{content:\"\\e936\"}.cib-asana:before{content:\"\\e937\"}.cib-at-and-t:before{content:\"\\e938\"}.cib-atlassian:before{content:\"\\e939\"}.cib-atom:before{content:\"\\e93a\"}.cib-audible:before{content:\"\\e93b\"}.cib-aurelia:before{content:\"\\e93c\"}.cib-auth0:before{content:\"\\e93d\"}.cib-automatic:before{content:\"\\e93e\"}.cib-autotask:before{content:\"\\e93f\"}.cib-aventrix:before{content:\"\\e940\"}.cib-azure-artifacts:before{content:\"\\e941\"}.cib-azure-devops:before{content:\"\\e942\"}.cib-azure-pipelines:before{content:\"\\e943\"}.cib-babel:before{content:\"\\e944\"}.cib-baidu:before{content:\"\\e945\"}.cib-bamboo:before{content:\"\\e946\"}.cib-bancontact:before{content:\"\\e947\"}.cib-bandcamp:before{content:\"\\e948\"}.cib-basecamp:before{content:\"\\e949\"}.cib-bathasu:before{content:\"\\e94a\"}.cib-behance:before{content:\"\\e94b\"}.cib-big-cartel:before{content:\"\\e94c\"}.cib-bing:before{content:\"\\e94d\"}.cib-bit:before{content:\"\\e94e\"}.cib-bitbucket:before{content:\"\\e94f\"}.cib-bitcoin:before{content:\"\\e950\"}.cib-bitdefender:before{content:\"\\e951\"}.cib-bitly:before{content:\"\\e952\"}.cib-blackberry:before{content:\"\\e953\"}.cib-blender:before{content:\"\\e954\"}.cib-blogger-b:before{content:\"\\e955\"}.cib-blogger:before{content:\"\\e956\"}.cib-bluetooth-b:before{content:\"\\e957\"}.cib-bluetooth:before{content:\"\\e958\"}.cib-boeing:before{content:\"\\e959\"}.cib-boost:before{content:\"\\e95a\"}.cib-bootstrap:before{content:\"\\e95b\"}.cib-bower:before{content:\"\\e95c\"}.cib-brand-ai:before{content:\"\\e95d\"}.cib-brave:before{content:\"\\e95e\"}.cib-btc:before{content:\"\\e95f\"}.cib-buddy:before{content:\"\\e960\"}.cib-buffer:before{content:\"\\e961\"}.cib-buy-me-a-coffee:before{content:\"\\e962\"}.cib-buysellads:before{content:\"\\e963\"}.cib-buzzfeed:before{content:\"\\e964\"}.cib-c:before{content:\"\\e965\"}.cib-cakephp:before{content:\"\\e966\"}.cib-campaign-monitor:before{content:\"\\e967\"}.cib-canva:before{content:\"\\e968\"}.cib-cashapp:before{content:\"\\e969\"}.cib-cassandra:before{content:\"\\e96a\"}.cib-castro:before{content:\"\\e96b\"}.cib-cc-amazon-pay:before{content:\"\\e96c\"}.cib-cc-amex:before{content:\"\\e96d\"}.cib-cc-apple-pay:before{content:\"\\e96e\"}.cib-cc-diners-club:before{content:\"\\e96f\"}.cib-cc-discover:before{content:\"\\e970\"}.cib-cc-jcb:before{content:\"\\e971\"}.cib-cc-mastercard:before{content:\"\\e972\"}.cib-cc-paypal:before{content:\"\\e973\"}.cib-cc-stripe:before{content:\"\\e974\"}.cib-cc-visa:before{content:\"\\e975\"}.cib-centos:before{content:\"\\e976\"}.cib-cevo:before{content:\"\\e977\"}.cib-chase:before{content:\"\\e978\"}.cib-chef:before{content:\"\\e979\"}.cib-chromecast:before{content:\"\\e97a\"}.cib-circle:before{content:\"\\e97b\"}.cib-circleci:before{content:\"\\e97c\"}.cib-cirrusci:before{content:\"\\e97d\"}.cib-cisco:before{content:\"\\e97e\"}.cib-civicrm:before{content:\"\\e97f\"}.cib-clockify:before{content:\"\\e980\"}.cib-clojure:before{content:\"\\e981\"}.cib-cloudbees:before{content:\"\\e982\"}.cib-cloudflare:before{content:\"\\e983\"}.cib-cmake:before{content:\"\\e984\"}.cib-co-op:before{content:\"\\e985\"}.cib-codacy:before{content:\"\\e986\"}.cib-code-climate:before{content:\"\\e987\"}.cib-codecademy:before{content:\"\\e988\"}.cib-codecov:before{content:\"\\e989\"}.cib-codeigniter:before{content:\"\\e98a\"}.cib-codepen:before{content:\"\\e98b\"}.cib-coderwall:before{content:\"\\e98c\"}.cib-codesandbox:before{content:\"\\e98d\"}.cib-codeship:before{content:\"\\e98e\"}.cib-codewars:before{content:\"\\e98f\"}.cib-codio:before{content:\"\\e990\"}.cib-coffeescript:before{content:\"\\e991\"}.cib-common-workflow-language:before{content:\"\\e992\"}.cib-composer:before{content:\"\\e993\"}.cib-conda-forge:before{content:\"\\e994\"}.cib-conekta:before{content:\"\\e995\"}.cib-confluence:before{content:\"\\e996\"}.cib-coreui-c:before{content:\"\\e997\"}.cib-coreui:before{content:\"\\e998\"}.cib-coursera:before{content:\"\\e999\"}.cib-coveralls:before{content:\"\\e99a\"}.cib-cpanel:before{content:\"\\e99b\"}.cib-cplusplus:before{content:\"\\e99c\"}.cib-creative-commons-by:before{content:\"\\e99d\"}.cib-creative-commons-nc-eu:before{content:\"\\e99e\"}.cib-creative-commons-nc-jp:before{content:\"\\e99f\"}.cib-creative-commons-nc:before{content:\"\\e9a0\"}.cib-creative-commons-nd:before{content:\"\\e9a1\"}.cib-creative-commons-pd-alt:before{content:\"\\e9a2\"}.cib-creative-commons-pd:before{content:\"\\e9a3\"}.cib-creative-commons-remix:before{content:\"\\e9a4\"}.cib-creative-commons-sa:before{content:\"\\e9a5\"}.cib-creative-commons-sampling-plus:before{content:\"\\e9a6\"}.cib-creative-commons-sampling:before{content:\"\\e9a7\"}.cib-creative-commons-share:before{content:\"\\e9a8\"}.cib-creative-commons-zero:before{content:\"\\e9a9\"}.cib-creative-commons:before{content:\"\\e9aa\"}.cib-crunchbase:before{content:\"\\e9ab\"}.cib-crunchyroll:before{content:\"\\e9ac\"}.cib-css3-shiled:before{content:\"\\e9ad\"}.cib-css3:before{content:\"\\e9ae\"}.cib-csswizardry:before{content:\"\\e9af\"}.cib-d3-js:before{content:\"\\e9b0\"}.cib-dailymotion:before{content:\"\\e9b1\"}.cib-dashlane:before{content:\"\\e9b2\"}.cib-dazn:before{content:\"\\e9b3\"}.cib-dblp:before{content:\"\\e9b4\"}.cib-debian:before{content:\"\\e9b5\"}.cib-deepin:before{content:\"\\e9b6\"}.cib-deezer:before{content:\"\\e9b7\"}.cib-delicious:before{content:\"\\e9b8\"}.cib-dell:before{content:\"\\e9b9\"}.cib-deno:before{content:\"\\e9ba\"}.cib-dependabot:before{content:\"\\e9bb\"}.cib-designer-news:before{content:\"\\e9bc\"}.cib-dev-to:before{content:\"\\e9bd\"}.cib-deviantart:before{content:\"\\e9be\"}.cib-devrant:before{content:\"\\e9bf\"}.cib-diaspora:before{content:\"\\e9c0\"}.cib-digg:before{content:\"\\e9c1\"}.cib-digital-ocean:before{content:\"\\e9c2\"}.cib-discord:before{content:\"\\e9c3\"}.cib-discourse:before{content:\"\\e9c4\"}.cib-discover:before{content:\"\\e9c5\"}.cib-disqus:before{content:\"\\e9c6\"}.cib-disroot:before{content:\"\\e9c7\"}.cib-django:before{content:\"\\e9c8\"}.cib-docker:before{content:\"\\e9c9\"}.cib-docusign:before{content:\"\\e9ca\"}.cib-dot-net:before{content:\"\\e9cb\"}.cib-draugiem-lv:before{content:\"\\e9cc\"}.cib-dribbble:before{content:\"\\e9cd\"}.cib-drone:before{content:\"\\e9ce\"}.cib-dropbox:before{content:\"\\e9cf\"}.cib-drupal:before{content:\"\\e9d0\"}.cib-dtube:before{content:\"\\e9d1\"}.cib-duckduckgo:before{content:\"\\e9d2\"}.cib-dynatrace:before{content:\"\\e9d3\"}.cib-ebay:before{content:\"\\e9d4\"}.cib-eclipseide:before{content:\"\\e9d5\"}.cib-elastic-cloud:before{content:\"\\e9d6\"}.cib-elastic-search:before{content:\"\\e9d7\"}.cib-elastic-stack:before{content:\"\\e9d8\"}.cib-elastic:before{content:\"\\e9d9\"}.cib-electron:before{content:\"\\e9da\"}.cib-elementary:before{content:\"\\e9db\"}.cib-eleventy:before{content:\"\\e9dc\"}.cib-ello:before{content:\"\\e9dd\"}.cib-elsevier:before{content:\"\\e9de\"}.cib-emlakjet:before{content:\"\\e9df\"}.cib-empirekred:before{content:\"\\e9e0\"}.cib-envato:before{content:\"\\e9e1\"}.cib-epic-games:before{content:\"\\e9e2\"}.cib-epson:before{content:\"\\e9e3\"}.cib-esea:before{content:\"\\e9e4\"}.cib-eslint:before{content:\"\\e9e5\"}.cib-ethereum:before{content:\"\\e9e6\"}.cib-etsy:before{content:\"\\e9e7\"}.cib-event-store:before{content:\"\\e9e8\"}.cib-eventbrite:before{content:\"\\e9e9\"}.cib-evernote:before{content:\"\\e9ea\"}.cib-everplaces:before{content:\"\\e9eb\"}.cib-evry:before{content:\"\\e9ec\"}.cib-exercism:before{content:\"\\e9ed\"}.cib-experts-exchange:before{content:\"\\e9ee\"}.cib-expo:before{content:\"\\e9ef\"}.cib-eyeem:before{content:\"\\e9f0\"}.cib-f-secure:before{content:\"\\e9f1\"}.cib-facebook-f:before{content:\"\\e9f2\"}.cib-facebook:before{content:\"\\e9f3\"}.cib-faceit:before{content:\"\\e9f4\"}.cib-fandango:before{content:\"\\e9f5\"}.cib-favro:before{content:\"\\e9f6\"}.cib-feathub:before{content:\"\\e9f7\"}.cib-fedex:before{content:\"\\e9f8\"}.cib-fedora:before{content:\"\\e9f9\"}.cib-feedly:before{content:\"\\e9fa\"}.cib-fido-alliance:before{content:\"\\e9fb\"}.cib-figma:before{content:\"\\e9fc\"}.cib-filezilla:before{content:\"\\e9fd\"}.cib-firebase:before{content:\"\\e9fe\"}.cib-fitbit:before{content:\"\\e9ff\"}.cib-flask:before{content:\"\\ea00\"}.cib-flattr:before{content:\"\\ea01\"}.cib-flickr:before{content:\"\\ea02\"}.cib-flipboard:before{content:\"\\ea03\"}.cib-flutter:before{content:\"\\ea04\"}.cib-fnac:before{content:\"\\ea05\"}.cib-foursquare:before{content:\"\\ea06\"}.cib-framer:before{content:\"\\ea07\"}.cib-freebsd:before{content:\"\\ea08\"}.cib-freecodecamp:before{content:\"\\ea09\"}.cib-fur-affinity:before{content:\"\\ea0a\"}.cib-furry-network:before{content:\"\\ea0b\"}.cib-garmin:before{content:\"\\ea0c\"}.cib-gatsby:before{content:\"\\ea0d\"}.cib-gauges:before{content:\"\\ea0e\"}.cib-genius:before{content:\"\\ea0f\"}.cib-gentoo:before{content:\"\\ea10\"}.cib-geocaching:before{content:\"\\ea11\"}.cib-gerrit:before{content:\"\\ea12\"}.cib-gg:before{content:\"\\ea13\"}.cib-ghost:before{content:\"\\ea14\"}.cib-gimp:before{content:\"\\ea15\"}.cib-git:before{content:\"\\ea16\"}.cib-gitea:before{content:\"\\ea17\"}.cib-github:before{content:\"\\ea18\"}.cib-gitkraken:before{content:\"\\ea19\"}.cib-gitlab:before{content:\"\\ea1a\"}.cib-gitpod:before{content:\"\\ea1b\"}.cib-gitter:before{content:\"\\ea1c\"}.cib-glassdoor:before{content:\"\\ea1d\"}.cib-glitch:before{content:\"\\ea1e\"}.cib-gmail:before{content:\"\\ea1f\"}.cib-gnu-privacy-guard:before{content:\"\\ea20\"}.cib-gnu-social:before{content:\"\\ea21\"}.cib-gnu:before{content:\"\\ea22\"}.cib-go:before{content:\"\\ea23\"}.cib-godot-engine:before{content:\"\\ea24\"}.cib-gog-com:before{content:\"\\ea25\"}.cib-goldenline:before{content:\"\\ea26\"}.cib-goodreads:before{content:\"\\ea27\"}.cib-google-ads:before{content:\"\\ea28\"}.cib-google-allo:before{content:\"\\ea29\"}.cib-google-analytics:before{content:\"\\ea2a\"}.cib-google-chrome:before{content:\"\\ea2b\"}.cib-google-cloud:before{content:\"\\ea2c\"}.cib-google-keep:before{content:\"\\ea2d\"}.cib-google-pay:before{content:\"\\ea2e\"}.cib-google-play:before{content:\"\\ea2f\"}.cib-google-podcasts:before{content:\"\\ea30\"}.cib-google:before{content:\"\\ea31\"}.cib-googles-cholar:before{content:\"\\ea32\"}.cib-gov-uk:before{content:\"\\ea33\"}.cib-gradle:before{content:\"\\ea34\"}.cib-grafana:before{content:\"\\ea35\"}.cib-graphcool:before{content:\"\\ea36\"}.cib-graphql:before{content:\"\\ea37\"}.cib-grav:before{content:\"\\ea38\"}.cib-gravatar:before{content:\"\\ea39\"}.cib-greenkeeper:before{content:\"\\ea3a\"}.cib-greensock:before{content:\"\\ea3b\"}.cib-groovy:before{content:\"\\ea3c\"}.cib-groupon:before{content:\"\\ea3d\"}.cib-grunt:before{content:\"\\ea3e\"}.cib-gulp:before{content:\"\\ea3f\"}.cib-gumroad:before{content:\"\\ea40\"}.cib-gumtree:before{content:\"\\ea41\"}.cib-habr:before{content:\"\\ea42\"}.cib-hackaday:before{content:\"\\ea43\"}.cib-hackerearth:before{content:\"\\ea44\"}.cib-hackerone:before{content:\"\\ea45\"}.cib-hackerrank:before{content:\"\\ea46\"}.cib-hackhands:before{content:\"\\ea47\"}.cib-hackster:before{content:\"\\ea48\"}.cib-happycow:before{content:\"\\ea49\"}.cib-hashnode:before{content:\"\\ea4a\"}.cib-haskell:before{content:\"\\ea4b\"}.cib-hatena-bookmark:before{content:\"\\ea4c\"}.cib-haxe:before{content:\"\\ea4d\"}.cib-helm:before{content:\"\\ea4e\"}.cib-here:before{content:\"\\ea4f\"}.cib-heroku:before{content:\"\\ea50\"}.cib-hexo:before{content:\"\\ea51\"}.cib-highly:before{content:\"\\ea52\"}.cib-hipchat:before{content:\"\\ea53\"}.cib-hitachi:before{content:\"\\ea54\"}.cib-hockeyapp:before{content:\"\\ea55\"}.cib-homify:before{content:\"\\ea56\"}.cib-hootsuite:before{content:\"\\ea57\"}.cib-hotjar:before{content:\"\\ea58\"}.cib-houzz:before{content:\"\\ea59\"}.cib-hp:before{content:\"\\ea5a\"}.cib-html5-shield:before{content:\"\\ea5b\"}.cib-html5:before{content:\"\\ea5c\"}.cib-htmlacademy:before{content:\"\\ea5d\"}.cib-huawei:before{content:\"\\ea5e\"}.cib-hubspot:before{content:\"\\ea5f\"}.cib-hulu:before{content:\"\\ea60\"}.cib-humble-bundle:before{content:\"\\ea61\"}.cib-iata:before{content:\"\\ea62\"}.cib-ibm:before{content:\"\\ea63\"}.cib-icloud:before{content:\"\\ea64\"}.cib-iconjar:before{content:\"\\ea65\"}.cib-icq:before{content:\"\\ea66\"}.cib-ideal:before{content:\"\\ea67\"}.cib-ifixit:before{content:\"\\ea68\"}.cib-imdb:before{content:\"\\ea69\"}.cib-indeed:before{content:\"\\ea6a\"}.cib-inkscape:before{content:\"\\ea6b\"}.cib-instacart:before{content:\"\\ea6c\"}.cib-instagram:before{content:\"\\ea6d\"}.cib-instapaper:before{content:\"\\ea6e\"}.cib-intel:before{content:\"\\ea6f\"}.cib-intellijidea:before{content:\"\\ea70\"}.cib-intercom:before{content:\"\\ea71\"}.cib-internet-explorer:before{content:\"\\ea72\"}.cib-invision:before{content:\"\\ea73\"}.cib-ionic:before{content:\"\\ea74\"}.cib-issuu:before{content:\"\\ea75\"}.cib-itch-io:before{content:\"\\ea76\"}.cib-jabber:before{content:\"\\ea77\"}.cib-java:before{content:\"\\ea78\"}.cib-javascript:before{content:\"\\ea79\"}.cib-jekyll:before{content:\"\\ea7a\"}.cib-jenkins:before{content:\"\\ea7b\"}.cib-jest:before{content:\"\\ea7c\"}.cib-jet:before{content:\"\\ea7d\"}.cib-jetbrains:before{content:\"\\ea7e\"}.cib-jira:before{content:\"\\ea7f\"}.cib-joomla:before{content:\"\\ea80\"}.cib-jquery:before{content:\"\\ea81\"}.cib-js:before{content:\"\\ea82\"}.cib-jsdelivr:before{content:\"\\ea83\"}.cib-jsfiddle:before{content:\"\\ea84\"}.cib-json:before{content:\"\\ea85\"}.cib-jupyter:before{content:\"\\ea86\"}.cib-justgiving:before{content:\"\\ea87\"}.cib-kaggle:before{content:\"\\ea88\"}.cib-kaios:before{content:\"\\ea89\"}.cib-kaspersky:before{content:\"\\ea8a\"}.cib-kentico:before{content:\"\\ea8b\"}.cib-keras:before{content:\"\\ea8c\"}.cib-keybase:before{content:\"\\ea8d\"}.cib-keycdn:before{content:\"\\ea8e\"}.cib-khan-academy:before{content:\"\\ea8f\"}.cib-kibana:before{content:\"\\ea90\"}.cib-kickstarter:before{content:\"\\ea91\"}.cib-kik:before{content:\"\\ea92\"}.cib-kirby:before{content:\"\\ea93\"}.cib-klout:before{content:\"\\ea94\"}.cib-known:before{content:\"\\ea95\"}.cib-ko-fi:before{content:\"\\ea96\"}.cib-kodi:before{content:\"\\ea97\"}.cib-koding:before{content:\"\\ea98\"}.cib-kotlin:before{content:\"\\ea99\"}.cib-krita:before{content:\"\\ea9a\"}.cib-kubernetes:before{content:\"\\ea9b\"}.cib-lanyrd:before{content:\"\\ea9c\"}.cib-laravel-horizon:before{content:\"\\ea9d\"}.cib-laravel-nova:before{content:\"\\ea9e\"}.cib-laravel:before{content:\"\\ea9f\"}.cib-last-fm:before{content:\"\\eaa0\"}.cib-latex:before{content:\"\\eaa1\"}.cib-launchpad:before{content:\"\\eaa2\"}.cib-leetcode:before{content:\"\\eaa3\"}.cib-lenovo:before{content:\"\\eaa4\"}.cib-less:before{content:\"\\eaa5\"}.cib-lets-encrypt:before{content:\"\\eaa6\"}.cib-letterboxd:before{content:\"\\eaa7\"}.cib-lgtm:before{content:\"\\eaa8\"}.cib-liberapay:before{content:\"\\eaa9\"}.cib-librarything:before{content:\"\\eaaa\"}.cib-libreoffice:before{content:\"\\eaab\"}.cib-line:before{content:\"\\eaac\"}.cib-linkedin-in:before{content:\"\\eaad\"}.cib-linkedin:before{content:\"\\eaae\"}.cib-linux-foundation:before{content:\"\\eaaf\"}.cib-linux-mint:before{content:\"\\eab0\"}.cib-linux:before{content:\"\\eab1\"}.cib-livejournal:before{content:\"\\eab2\"}.cib-livestream:before{content:\"\\eab3\"}.cib-logstash:before{content:\"\\eab4\"}.cib-lua:before{content:\"\\eab5\"}.cib-lumen:before{content:\"\\eab6\"}.cib-lyft:before{content:\"\\eab7\"}.cib-macys:before{content:\"\\eab8\"}.cib-magento:before{content:\"\\eab9\"}.cib-magisk:before{content:\"\\eaba\"}.cib-mail-ru:before{content:\"\\eabb\"}.cib-mailchimp:before{content:\"\\eabc\"}.cib-makerbot:before{content:\"\\eabd\"}.cib-manjaro:before{content:\"\\eabe\"}.cib-markdown:before{content:\"\\eabf\"}.cib-marketo:before{content:\"\\eac0\"}.cib-mastercard:before{content:\"\\eac1\"}.cib-mastodon:before{content:\"\\eac2\"}.cib-material-design:before{content:\"\\eac3\"}.cib-mathworks:before{content:\"\\eac4\"}.cib-matrix:before{content:\"\\eac5\"}.cib-mattermost:before{content:\"\\eac6\"}.cib-matternet:before{content:\"\\eac7\"}.cib-maxcdn:before{content:\"\\eac8\"}.cib-mcafee:before{content:\"\\eac9\"}.cib-media-temple:before{content:\"\\eaca\"}.cib-mediafire:before{content:\"\\eacb\"}.cib-medium-m:before{content:\"\\eacc\"}.cib-medium:before{content:\"\\eacd\"}.cib-meetup:before{content:\"\\eace\"}.cib-mega:before{content:\"\\eacf\"}.cib-mendeley:before{content:\"\\ead0\"}.cib-messenger:before{content:\"\\ead1\"}.cib-meteor:before{content:\"\\ead2\"}.cib-micro-blog:before{content:\"\\ead3\"}.cib-microgenetics:before{content:\"\\ead4\"}.cib-microsoft-edge:before{content:\"\\ead5\"}.cib-microsoft:before{content:\"\\ead6\"}.cib-minetest:before{content:\"\\ead7\"}.cib-minutemailer:before{content:\"\\ead8\"}.cib-mix:before{content:\"\\ead9\"}.cib-mixcloud:before{content:\"\\eada\"}.cib-mixer:before{content:\"\\eadb\"}.cib-mojang:before{content:\"\\eadc\"}.cib-monero:before{content:\"\\eadd\"}.cib-mongodb:before{content:\"\\eade\"}.cib-monkeytie:before{content:\"\\eadf\"}.cib-monogram:before{content:\"\\eae0\"}.cib-monzo:before{content:\"\\eae1\"}.cib-moo:before{content:\"\\eae2\"}.cib-mozilla-firefox:before{content:\"\\eae3\"}.cib-mozilla:before{content:\"\\eae4\"}.cib-musescore:before{content:\"\\eae5\"}.cib-mxlinux:before{content:\"\\eae6\"}.cib-myspace:before{content:\"\\eae7\"}.cib-mysql:before{content:\"\\eae8\"}.cib-nativescript:before{content:\"\\eae9\"}.cib-nec:before{content:\"\\eaea\"}.cib-neo4j:before{content:\"\\eaeb\"}.cib-netflix:before{content:\"\\eaec\"}.cib-netlify:before{content:\"\\eaed\"}.cib-next-js:before{content:\"\\eaee\"}.cib-nextcloud:before{content:\"\\eaef\"}.cib-nextdoor:before{content:\"\\eaf0\"}.cib-nginx:before{content:\"\\eaf1\"}.cib-nim:before{content:\"\\eaf2\"}.cib-nintendo-3ds:before{content:\"\\eaf3\"}.cib-nintendo-gamecube:before{content:\"\\eaf4\"}.cib-nintendo-switch:before{content:\"\\eaf5\"}.cib-nintendo:before{content:\"\\eaf6\"}.cib-node-js:before{content:\"\\eaf7\"}.cib-node-red:before{content:\"\\eaf8\"}.cib-nodemon:before{content:\"\\eaf9\"}.cib-nokia:before{content:\"\\eafa\"}.cib-notion:before{content:\"\\eafb\"}.cib-npm:before{content:\"\\eafc\"}.cib-nucleo:before{content:\"\\eafd\"}.cib-nuget:before{content:\"\\eafe\"}.cib-nuxt-js:before{content:\"\\eaff\"}.cib-nvidia:before{content:\"\\eb00\"}.cib-ocaml:before{content:\"\\eb01\"}.cib-octave:before{content:\"\\eb02\"}.cib-octopus-deploy:before{content:\"\\eb03\"}.cib-oculus:before{content:\"\\eb04\"}.cib-odnoklassniki:before{content:\"\\eb05\"}.cib-open-access:before{content:\"\\eb06\"}.cib-open-collective:before{content:\"\\eb07\"}.cib-open-id:before{content:\"\\eb08\"}.cib-open-source-initiative:before{content:\"\\eb09\"}.cib-openstreetmap:before{content:\"\\eb0a\"}.cib-opensuse:before{content:\"\\eb0b\"}.cib-openvpn:before{content:\"\\eb0c\"}.cib-opera:before{content:\"\\eb0d\"}.cib-opsgenie:before{content:\"\\eb0e\"}.cib-oracle:before{content:\"\\eb0f\"}.cib-orcid:before{content:\"\\eb10\"}.cib-origin:before{content:\"\\eb11\"}.cib-osi:before{content:\"\\eb12\"}.cib-osmc:before{content:\"\\eb13\"}.cib-overcast:before{content:\"\\eb14\"}.cib-overleaf:before{content:\"\\eb15\"}.cib-ovh:before{content:\"\\eb16\"}.cib-pagekit:before{content:\"\\eb17\"}.cib-palantir:before{content:\"\\eb18\"}.cib-pandora:before{content:\"\\eb19\"}.cib-pantheon:before{content:\"\\eb1a\"}.cib-patreon:before{content:\"\\eb1b\"}.cib-paypal:before{content:\"\\eb1c\"}.cib-periscope:before{content:\"\\eb1d\"}.cib-php:before{content:\"\\eb1e\"}.cib-picarto-tv:before{content:\"\\eb1f\"}.cib-pinboard:before{content:\"\\eb20\"}.cib-pingdom:before{content:\"\\eb21\"}.cib-pingup:before{content:\"\\eb22\"}.cib-pinterest-p:before{content:\"\\eb23\"}.cib-pinterest:before{content:\"\\eb24\"}.cib-pivotaltracker:before{content:\"\\eb25\"}.cib-plangrid:before{content:\"\\eb26\"}.cib-player-me:before{content:\"\\eb27\"}.cib-playerfm:before{content:\"\\eb28\"}.cib-playstation:before{content:\"\\eb29\"}.cib-playstation3:before{content:\"\\eb2a\"}.cib-playstation4:before{content:\"\\eb2b\"}.cib-plesk:before{content:\"\\eb2c\"}.cib-plex:before{content:\"\\eb2d\"}.cib-pluralsight:before{content:\"\\eb2e\"}.cib-plurk:before{content:\"\\eb2f\"}.cib-pocket:before{content:\"\\eb30\"}.cib-postgresql:before{content:\"\\eb31\"}.cib-postman:before{content:\"\\eb32\"}.cib-postwoman:before{content:\"\\eb33\"}.cib-powershell:before{content:\"\\eb34\"}.cib-prettier:before{content:\"\\eb35\"}.cib-prismic:before{content:\"\\eb36\"}.cib-probot:before{content:\"\\eb37\"}.cib-processwire:before{content:\"\\eb38\"}.cib-product-hunt:before{content:\"\\eb39\"}.cib-proto-io:before{content:\"\\eb3a\"}.cib-protonmail:before{content:\"\\eb3b\"}.cib-proxmox:before{content:\"\\eb3c\"}.cib-pypi:before{content:\"\\eb3d\"}.cib-python:before{content:\"\\eb3e\"}.cib-pytorch:before{content:\"\\eb3f\"}.cib-qgis:before{content:\"\\eb40\"}.cib-qiita:before{content:\"\\eb41\"}.cib-qq:before{content:\"\\eb42\"}.cib-qualcomm:before{content:\"\\eb43\"}.cib-quantcast:before{content:\"\\eb44\"}.cib-quantopian:before{content:\"\\eb45\"}.cib-quarkus:before{content:\"\\eb46\"}.cib-quora:before{content:\"\\eb47\"}.cib-qwiklabs:before{content:\"\\eb48\"}.cib-qzone:before{content:\"\\eb49\"}.cib-r:before{content:\"\\eb4a\"}.cib-radiopublic:before{content:\"\\eb4b\"}.cib-rails:before{content:\"\\eb4c\"}.cib-raspberry-pi:before{content:\"\\eb4d\"}.cib-react:before{content:\"\\eb4e\"}.cib-read-the-docs:before{content:\"\\eb4f\"}.cib-readme:before{content:\"\\eb50\"}.cib-realm:before{content:\"\\eb51\"}.cib-reason:before{content:\"\\eb52\"}.cib-redbubble:before{content:\"\\eb53\"}.cib-reddit-alt:before{content:\"\\eb54\"}.cib-reddit:before{content:\"\\eb55\"}.cib-redhat:before{content:\"\\eb56\"}.cib-redis:before{content:\"\\eb57\"}.cib-redux:before{content:\"\\eb58\"}.cib-renren:before{content:\"\\eb59\"}.cib-reverbnation:before{content:\"\\eb5a\"}.cib-riot:before{content:\"\\eb5b\"}.cib-ripple:before{content:\"\\eb5c\"}.cib-riseup:before{content:\"\\eb5d\"}.cib-rollup-js:before{content:\"\\eb5e\"}.cib-roots:before{content:\"\\eb5f\"}.cib-roundcube:before{content:\"\\eb60\"}.cib-rss:before{content:\"\\eb61\"}.cib-rstudio:before{content:\"\\eb62\"}.cib-ruby:before{content:\"\\eb63\"}.cib-rubygems:before{content:\"\\eb64\"}.cib-runkeeper:before{content:\"\\eb65\"}.cib-rust:before{content:\"\\eb66\"}.cib-safari:before{content:\"\\eb67\"}.cib-sahibinden:before{content:\"\\eb68\"}.cib-salesforce:before{content:\"\\eb69\"}.cib-saltstack:before{content:\"\\eb6a\"}.cib-samsung-pay:before{content:\"\\eb6b\"}.cib-samsung:before{content:\"\\eb6c\"}.cib-sap:before{content:\"\\eb6d\"}.cib-sass-alt:before{content:\"\\eb6e\"}.cib-sass:before{content:\"\\eb6f\"}.cib-saucelabs:before{content:\"\\eb70\"}.cib-scala:before{content:\"\\eb71\"}.cib-scaleway:before{content:\"\\eb72\"}.cib-scribd:before{content:\"\\eb73\"}.cib-scrutinizerci:before{content:\"\\eb74\"}.cib-seagate:before{content:\"\\eb75\"}.cib-sega:before{content:\"\\eb76\"}.cib-sellfy:before{content:\"\\eb77\"}.cib-semaphoreci:before{content:\"\\eb78\"}.cib-sensu:before{content:\"\\eb79\"}.cib-sentry:before{content:\"\\eb7a\"}.cib-server-fault:before{content:\"\\eb7b\"}.cib-shazam:before{content:\"\\eb7c\"}.cib-shell:before{content:\"\\eb7d\"}.cib-shopify:before{content:\"\\eb7e\"}.cib-showpad:before{content:\"\\eb7f\"}.cib-siemens:before{content:\"\\eb80\"}.cib-signal:before{content:\"\\eb81\"}.cib-sina-weibo:before{content:\"\\eb82\"}.cib-sitepoint:before{content:\"\\eb83\"}.cib-sketch:before{content:\"\\eb84\"}.cib-skillshare:before{content:\"\\eb85\"}.cib-skyliner:before{content:\"\\eb86\"}.cib-skype:before{content:\"\\eb87\"}.cib-slack:before{content:\"\\eb88\"}.cib-slashdot:before{content:\"\\eb89\"}.cib-slickpic:before{content:\"\\eb8a\"}.cib-slides:before{content:\"\\eb8b\"}.cib-slideshare:before{content:\"\\eb8c\"}.cib-smashingmagazine:before{content:\"\\eb8d\"}.cib-snapchat:before{content:\"\\eb8e\"}.cib-snapcraft:before{content:\"\\eb8f\"}.cib-snyk:before{content:\"\\eb90\"}.cib-society6:before{content:\"\\eb91\"}.cib-socket-io:before{content:\"\\eb92\"}.cib-sogou:before{content:\"\\eb93\"}.cib-solus:before{content:\"\\eb94\"}.cib-songkick:before{content:\"\\eb95\"}.cib-sonos:before{content:\"\\eb96\"}.cib-soundcloud:before{content:\"\\eb97\"}.cib-sourceforge:before{content:\"\\eb98\"}.cib-sourcegraph:before{content:\"\\eb99\"}.cib-spacemacs:before{content:\"\\eb9a\"}.cib-spacex:before{content:\"\\eb9b\"}.cib-sparkfun:before{content:\"\\eb9c\"}.cib-sparkpost:before{content:\"\\eb9d\"}.cib-spdx:before{content:\"\\eb9e\"}.cib-speaker-deck:before{content:\"\\eb9f\"}.cib-spectrum:before{content:\"\\eba0\"}.cib-spotify:before{content:\"\\eba1\"}.cib-spotlight:before{content:\"\\eba2\"}.cib-spreaker:before{content:\"\\eba3\"}.cib-spring:before{content:\"\\eba4\"}.cib-sprint:before{content:\"\\eba5\"}.cib-squarespace:before{content:\"\\eba6\"}.cib-stackbit:before{content:\"\\eba7\"}.cib-stackexchange:before{content:\"\\eba8\"}.cib-stackoverflow:before{content:\"\\eba9\"}.cib-stackpath:before{content:\"\\ebaa\"}.cib-stackshare:before{content:\"\\ebab\"}.cib-stadia:before{content:\"\\ebac\"}.cib-statamic:before{content:\"\\ebad\"}.cib-staticman:before{content:\"\\ebae\"}.cib-statuspage:before{content:\"\\ebaf\"}.cib-steam:before{content:\"\\ebb0\"}.cib-steem:before{content:\"\\ebb1\"}.cib-steemit:before{content:\"\\ebb2\"}.cib-stitcher:before{content:\"\\ebb3\"}.cib-storify:before{content:\"\\ebb4\"}.cib-storybook:before{content:\"\\ebb5\"}.cib-strapi:before{content:\"\\ebb6\"}.cib-strava:before{content:\"\\ebb7\"}.cib-stripe-s:before{content:\"\\ebb8\"}.cib-stripe:before{content:\"\\ebb9\"}.cib-stubhub:before{content:\"\\ebba\"}.cib-stumbleupon:before{content:\"\\ebbb\"}.cib-styleshare:before{content:\"\\ebbc\"}.cib-stylus:before{content:\"\\ebbd\"}.cib-sublime-text:before{content:\"\\ebbe\"}.cib-subversion:before{content:\"\\ebbf\"}.cib-superuser:before{content:\"\\ebc0\"}.cib-svelte:before{content:\"\\ebc1\"}.cib-svg:before{content:\"\\ebc2\"}.cib-swagger:before{content:\"\\ebc3\"}.cib-swarm:before{content:\"\\ebc4\"}.cib-swift:before{content:\"\\ebc5\"}.cib-symantec:before{content:\"\\ebc6\"}.cib-symfony:before{content:\"\\ebc7\"}.cib-synology:before{content:\"\\ebc8\"}.cib-t-mobile:before{content:\"\\ebc9\"}.cib-tableau:before{content:\"\\ebca\"}.cib-tails:before{content:\"\\ebcb\"}.cib-tapas:before{content:\"\\ebcc\"}.cib-teamviewer:before{content:\"\\ebcd\"}.cib-ted:before{content:\"\\ebce\"}.cib-teespring:before{content:\"\\ebcf\"}.cib-telegram-plane:before{content:\"\\ebd0\"}.cib-telegram:before{content:\"\\ebd1\"}.cib-tencent-qq:before{content:\"\\ebd2\"}.cib-tencent-weibo:before{content:\"\\ebd3\"}.cib-tensorflow:before{content:\"\\ebd4\"}.cib-terraform:before{content:\"\\ebd5\"}.cib-tesla:before{content:\"\\ebd6\"}.cib-the-mighty:before{content:\"\\ebd7\"}.cib-the-movie-database:before{content:\"\\ebd8\"}.cib-tidal:before{content:\"\\ebd9\"}.cib-tiktok:before{content:\"\\ebda\"}.cib-tinder:before{content:\"\\ebdb\"}.cib-todoist:before{content:\"\\ebdc\"}.cib-toggl:before{content:\"\\ebdd\"}.cib-topcoder:before{content:\"\\ebde\"}.cib-toptal:before{content:\"\\ebdf\"}.cib-tor:before{content:\"\\ebe0\"}.cib-toshiba:before{content:\"\\ebe1\"}.cib-trainerroad:before{content:\"\\ebe2\"}.cib-trakt:before{content:\"\\ebe3\"}.cib-travisci:before{content:\"\\ebe4\"}.cib-treehouse:before{content:\"\\ebe5\"}.cib-trello:before{content:\"\\ebe6\"}.cib-tripadvisor:before{content:\"\\ebe7\"}.cib-trulia:before{content:\"\\ebe8\"}.cib-tumblr:before{content:\"\\ebe9\"}.cib-twilio:before{content:\"\\ebea\"}.cib-twitch:before{content:\"\\ebeb\"}.cib-twitter:before{content:\"\\ebec\"}.cib-twoo:before{content:\"\\ebed\"}.cib-typescript:before{content:\"\\ebee\"}.cib-typo3:before{content:\"\\ebef\"}.cib-uber:before{content:\"\\ebf0\"}.cib-ubisoft:before{content:\"\\ebf1\"}.cib-ublock-origin:before{content:\"\\ebf2\"}.cib-ubuntu:before{content:\"\\ebf3\"}.cib-udacity:before{content:\"\\ebf4\"}.cib-udemy:before{content:\"\\ebf5\"}.cib-uikit:before{content:\"\\ebf6\"}.cib-umbraco:before{content:\"\\ebf7\"}.cib-unity:before{content:\"\\ebf8\"}.cib-unreal-engine:before{content:\"\\ebf9\"}.cib-unsplash:before{content:\"\\ebfa\"}.cib-untappd:before{content:\"\\ebfb\"}.cib-upwork:before{content:\"\\ebfc\"}.cib-usb:before{content:\"\\ebfd\"}.cib-v8:before{content:\"\\ebfe\"}.cib-vagrant:before{content:\"\\ebff\"}.cib-venmo:before{content:\"\\ec00\"}.cib-verizon:before{content:\"\\ec01\"}.cib-viadeo:before{content:\"\\ec02\"}.cib-viber:before{content:\"\\ec03\"}.cib-vim:before{content:\"\\ec04\"}.cib-vimeo-v:before{content:\"\\ec05\"}.cib-vimeo:before{content:\"\\ec06\"}.cib-vine:before{content:\"\\ec07\"}.cib-virb:before{content:\"\\ec08\"}.cib-visa:before{content:\"\\ec09\"}.cib-visual-studio-code:before{content:\"\\ec0a\"}.cib-visual-studio:before{content:\"\\ec0b\"}.cib-vk:before{content:\"\\ec0c\"}.cib-vlc:before{content:\"\\ec0d\"}.cib-vsco:before{content:\"\\ec0e\"}.cib-vue-js:before{content:\"\\ec0f\"}.cib-wattpad:before{content:\"\\ec10\"}.cib-weasyl:before{content:\"\\ec11\"}.cib-webcomponents-org:before{content:\"\\ec12\"}.cib-webpack:before{content:\"\\ec13\"}.cib-webstorm:before{content:\"\\ec14\"}.cib-wechat:before{content:\"\\ec15\"}.cib-whatsapp:before{content:\"\\ec16\"}.cib-when-i-work:before{content:\"\\ec17\"}.cib-wii:before{content:\"\\ec18\"}.cib-wiiu:before{content:\"\\ec19\"}.cib-wikipedia:before{content:\"\\ec1a\"}.cib-windows:before{content:\"\\ec1b\"}.cib-wire:before{content:\"\\ec1c\"}.cib-wireguard:before{content:\"\\ec1d\"}.cib-wix:before{content:\"\\ec1e\"}.cib-wolfram-language:before{content:\"\\ec1f\"}.cib-wolfram-mathematica:before{content:\"\\ec20\"}.cib-wolfram:before{content:\"\\ec21\"}.cib-wordpress:before{content:\"\\ec22\"}.cib-wpengine:before{content:\"\\ec23\"}.cib-x-pack:before{content:\"\\ec24\"}.cib-xbox:before{content:\"\\ec25\"}.cib-xcode:before{content:\"\\ec26\"}.cib-xero:before{content:\"\\ec27\"}.cib-xiaomi:before{content:\"\\ec28\"}.cib-xing:before{content:\"\\ec29\"}.cib-xrp:before{content:\"\\ec2a\"}.cib-xsplit:before{content:\"\\ec2b\"}.cib-y-combinator:before{content:\"\\ec2c\"}.cib-yahoo:before{content:\"\\ec2d\"}.cib-yammer:before{content:\"\\ec2e\"}.cib-yandex:before{content:\"\\ec2f\"}.cib-yarn:before{content:\"\\ec30\"}.cib-yelp:before{content:\"\\ec31\"}.cib-youtube:before{content:\"\\ec32\"}.cib-zalando:before{content:\"\\ec33\"}.cib-zapier:before{content:\"\\ec34\"}.cib-zeit:before{content:\"\\ec35\"}.cib-zendesk:before{content:\"\\ec36\"}.cib-zerply:before{content:\"\\ec37\"}.cib-zillow:before{content:\"\\ec38\"}.cib-zingat:before{content:\"\\ec39\"}.cib-zoom:before{content:\"\\ec3a\"}.cib-zorin:before{content:\"\\ec3b\"}.cib-zulip:before{content:\"\\ec3c\"}\n/*# sourceMappingURL=brand.min.css.map */", "",{"version":3,"sources":["webpack://./public/vendors/@coreui/icons/css/brand.min.css"],"names":[],"mappings":"AAAA,gBAAgB,CAAC;;;;;;EAMf,CAAC,WAAW,8BAA8B,CAAC,2CAA+C,CAAC,+OAA0R,CAAC,eAAe,CAAC,iBAAiB,CAAC,+BAA+B,wCAAwC,CAAC,UAAU,CAAC,iBAAiB,CAAC,eAAe,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,aAAa,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iCAAiC,eAAe,CAAC,gCAAgC,eAAe,CAAC,2BAA2B,eAAe,CAAC,iCAAiC,eAAe,CAAC,8BAA8B,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,oCAAoC,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,6BAA6B,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,8BAA8B,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,+BAA+B,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,yBAAyB,eAAe,CAAC,4BAA4B,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,4BAA4B,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,cAAc,eAAe,CAAC,oBAAoB,eAAe,CAAC,6BAA6B,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qCAAqC,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gCAAgC,eAAe,CAAC,mCAAmC,eAAe,CAAC,mCAAmC,eAAe,CAAC,gCAAgC,eAAe,CAAC,gCAAgC,eAAe,CAAC,oCAAoC,eAAe,CAAC,gCAAgC,eAAe,CAAC,mCAAmC,eAAe,CAAC,gCAAgC,eAAe,CAAC,2CAA2C,eAAe,CAAC,sCAAsC,eAAe,CAAC,mCAAmC,eAAe,CAAC,kCAAkC,eAAe,CAAC,6BAA6B,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,6BAA6B,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,8BAA8B,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,eAAe,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,6BAA6B,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,4BAA4B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,8BAA8B,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,4BAA4B,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,6BAA6B,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,4BAA4B,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,mCAAmC,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,cAAc,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,6BAA6B,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,+BAA+B,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,+BAA+B,eAAe,CAAC,0BAA0B,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,8BAA8B,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,6BAA6B,eAAe,CAAC,gCAAgC,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe;AAC/k9B,wCAAwC","sourcesContent":["@charset \"UTF-8\";/*!\n * CoreUI Icons - Brand Icons\n * @version v1.0.1\n * @link https://coreui.io/icons/brand/\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under CC0 1.0 Universal\n */@font-face{font-family:CoreUI-Icons-Brand;src:url(../fonts/CoreUI-Icons-Brand.eot?64h6xh);src:url(../fonts/CoreUI-Icons-Brand.eot?64h6xh#iefix) format(\"embedded-opentype\"),url(../fonts/CoreUI-Icons-Brand.ttf?64h6xh) format(\"truetype\"),url(../fonts/CoreUI-Icons-Brand.woff?64h6xh) format(\"woff\"),url(../fonts/CoreUI-Icons-Brand.svg?64h6xh#CoreUI-Icons-Linear) format(\"svg\");font-weight:400;font-style:normal}[class*=\" cib-\"],[class^=cib-]{font-family:CoreUI-Icons-Brand!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cib-500px-5:before{content:\"\\e900\"}.cib-500px:before{content:\"\\e901\"}.cib-about-me:before{content:\"\\e902\"}.cib-abstract:before{content:\"\\e903\"}.cib-acm:before{content:\"\\e904\"}.cib-addthis:before{content:\"\\e905\"}.cib-adguard:before{content:\"\\e906\"}.cib-adobe-acrobat-reader:before{content:\"\\e907\"}.cib-adobe-aftere-ffects:before{content:\"\\e908\"}.cib-adobe-audition:before{content:\"\\e909\"}.cib-adobe-creative-cloud:before{content:\"\\e90a\"}.cib-adobe-dreamweaver:before{content:\"\\e90b\"}.cib-adobe-illustrator:before{content:\"\\e90c\"}.cib-adobe-indesign:before{content:\"\\e90d\"}.cib-adobe-lightroom-classic:before{content:\"\\e90e\"}.cib-adobe-lightroom:before{content:\"\\e90f\"}.cib-adobe-photoshop:before{content:\"\\e910\"}.cib-adobe-premiere:before{content:\"\\e911\"}.cib-adobe-typekit:before{content:\"\\e912\"}.cib-adobe-xd:before{content:\"\\e913\"}.cib-adobe:before{content:\"\\e914\"}.cib-airbnb:before{content:\"\\e915\"}.cib-algolia:before{content:\"\\e916\"}.cib-alipay:before{content:\"\\e917\"}.cib-allocine:before{content:\"\\e918\"}.cib-amazon-aws:before{content:\"\\e919\"}.cib-amazon-pay:before{content:\"\\e91a\"}.cib-amazon:before{content:\"\\e91b\"}.cib-amd:before{content:\"\\e91c\"}.cib-american-express:before{content:\"\\e91d\"}.cib-anaconda:before{content:\"\\e91e\"}.cib-analogue:before{content:\"\\e91f\"}.cib-android-alt:before{content:\"\\e920\"}.cib-android:before{content:\"\\e921\"}.cib-angellist:before{content:\"\\e922\"}.cib-angular-universal:before{content:\"\\e923\"}.cib-angular:before{content:\"\\e924\"}.cib-ansible:before{content:\"\\e925\"}.cib-apache-airflow:before{content:\"\\e926\"}.cib-apache-flink:before{content:\"\\e927\"}.cib-apache-spark:before{content:\"\\e928\"}.cib-apache:before{content:\"\\e929\"}.cib-app-store-ios:before{content:\"\\e92a\"}.cib-app-store:before{content:\"\\e92b\"}.cib-apple-music:before{content:\"\\e92c\"}.cib-apple-pay:before{content:\"\\e92d\"}.cib-apple-podcasts:before{content:\"\\e92e\"}.cib-apple:before{content:\"\\e92f\"}.cib-appveyor:before{content:\"\\e930\"}.cib-aral:before{content:\"\\e931\"}.cib-arch-linux:before{content:\"\\e932\"}.cib-archive-of-our-own:before{content:\"\\e933\"}.cib-arduino:before{content:\"\\e934\"}.cib-artstation:before{content:\"\\e935\"}.cib-arxiv:before{content:\"\\e936\"}.cib-asana:before{content:\"\\e937\"}.cib-at-and-t:before{content:\"\\e938\"}.cib-atlassian:before{content:\"\\e939\"}.cib-atom:before{content:\"\\e93a\"}.cib-audible:before{content:\"\\e93b\"}.cib-aurelia:before{content:\"\\e93c\"}.cib-auth0:before{content:\"\\e93d\"}.cib-automatic:before{content:\"\\e93e\"}.cib-autotask:before{content:\"\\e93f\"}.cib-aventrix:before{content:\"\\e940\"}.cib-azure-artifacts:before{content:\"\\e941\"}.cib-azure-devops:before{content:\"\\e942\"}.cib-azure-pipelines:before{content:\"\\e943\"}.cib-babel:before{content:\"\\e944\"}.cib-baidu:before{content:\"\\e945\"}.cib-bamboo:before{content:\"\\e946\"}.cib-bancontact:before{content:\"\\e947\"}.cib-bandcamp:before{content:\"\\e948\"}.cib-basecamp:before{content:\"\\e949\"}.cib-bathasu:before{content:\"\\e94a\"}.cib-behance:before{content:\"\\e94b\"}.cib-big-cartel:before{content:\"\\e94c\"}.cib-bing:before{content:\"\\e94d\"}.cib-bit:before{content:\"\\e94e\"}.cib-bitbucket:before{content:\"\\e94f\"}.cib-bitcoin:before{content:\"\\e950\"}.cib-bitdefender:before{content:\"\\e951\"}.cib-bitly:before{content:\"\\e952\"}.cib-blackberry:before{content:\"\\e953\"}.cib-blender:before{content:\"\\e954\"}.cib-blogger-b:before{content:\"\\e955\"}.cib-blogger:before{content:\"\\e956\"}.cib-bluetooth-b:before{content:\"\\e957\"}.cib-bluetooth:before{content:\"\\e958\"}.cib-boeing:before{content:\"\\e959\"}.cib-boost:before{content:\"\\e95a\"}.cib-bootstrap:before{content:\"\\e95b\"}.cib-bower:before{content:\"\\e95c\"}.cib-brand-ai:before{content:\"\\e95d\"}.cib-brave:before{content:\"\\e95e\"}.cib-btc:before{content:\"\\e95f\"}.cib-buddy:before{content:\"\\e960\"}.cib-buffer:before{content:\"\\e961\"}.cib-buy-me-a-coffee:before{content:\"\\e962\"}.cib-buysellads:before{content:\"\\e963\"}.cib-buzzfeed:before{content:\"\\e964\"}.cib-c:before{content:\"\\e965\"}.cib-cakephp:before{content:\"\\e966\"}.cib-campaign-monitor:before{content:\"\\e967\"}.cib-canva:before{content:\"\\e968\"}.cib-cashapp:before{content:\"\\e969\"}.cib-cassandra:before{content:\"\\e96a\"}.cib-castro:before{content:\"\\e96b\"}.cib-cc-amazon-pay:before{content:\"\\e96c\"}.cib-cc-amex:before{content:\"\\e96d\"}.cib-cc-apple-pay:before{content:\"\\e96e\"}.cib-cc-diners-club:before{content:\"\\e96f\"}.cib-cc-discover:before{content:\"\\e970\"}.cib-cc-jcb:before{content:\"\\e971\"}.cib-cc-mastercard:before{content:\"\\e972\"}.cib-cc-paypal:before{content:\"\\e973\"}.cib-cc-stripe:before{content:\"\\e974\"}.cib-cc-visa:before{content:\"\\e975\"}.cib-centos:before{content:\"\\e976\"}.cib-cevo:before{content:\"\\e977\"}.cib-chase:before{content:\"\\e978\"}.cib-chef:before{content:\"\\e979\"}.cib-chromecast:before{content:\"\\e97a\"}.cib-circle:before{content:\"\\e97b\"}.cib-circleci:before{content:\"\\e97c\"}.cib-cirrusci:before{content:\"\\e97d\"}.cib-cisco:before{content:\"\\e97e\"}.cib-civicrm:before{content:\"\\e97f\"}.cib-clockify:before{content:\"\\e980\"}.cib-clojure:before{content:\"\\e981\"}.cib-cloudbees:before{content:\"\\e982\"}.cib-cloudflare:before{content:\"\\e983\"}.cib-cmake:before{content:\"\\e984\"}.cib-co-op:before{content:\"\\e985\"}.cib-codacy:before{content:\"\\e986\"}.cib-code-climate:before{content:\"\\e987\"}.cib-codecademy:before{content:\"\\e988\"}.cib-codecov:before{content:\"\\e989\"}.cib-codeigniter:before{content:\"\\e98a\"}.cib-codepen:before{content:\"\\e98b\"}.cib-coderwall:before{content:\"\\e98c\"}.cib-codesandbox:before{content:\"\\e98d\"}.cib-codeship:before{content:\"\\e98e\"}.cib-codewars:before{content:\"\\e98f\"}.cib-codio:before{content:\"\\e990\"}.cib-coffeescript:before{content:\"\\e991\"}.cib-common-workflow-language:before{content:\"\\e992\"}.cib-composer:before{content:\"\\e993\"}.cib-conda-forge:before{content:\"\\e994\"}.cib-conekta:before{content:\"\\e995\"}.cib-confluence:before{content:\"\\e996\"}.cib-coreui-c:before{content:\"\\e997\"}.cib-coreui:before{content:\"\\e998\"}.cib-coursera:before{content:\"\\e999\"}.cib-coveralls:before{content:\"\\e99a\"}.cib-cpanel:before{content:\"\\e99b\"}.cib-cplusplus:before{content:\"\\e99c\"}.cib-creative-commons-by:before{content:\"\\e99d\"}.cib-creative-commons-nc-eu:before{content:\"\\e99e\"}.cib-creative-commons-nc-jp:before{content:\"\\e99f\"}.cib-creative-commons-nc:before{content:\"\\e9a0\"}.cib-creative-commons-nd:before{content:\"\\e9a1\"}.cib-creative-commons-pd-alt:before{content:\"\\e9a2\"}.cib-creative-commons-pd:before{content:\"\\e9a3\"}.cib-creative-commons-remix:before{content:\"\\e9a4\"}.cib-creative-commons-sa:before{content:\"\\e9a5\"}.cib-creative-commons-sampling-plus:before{content:\"\\e9a6\"}.cib-creative-commons-sampling:before{content:\"\\e9a7\"}.cib-creative-commons-share:before{content:\"\\e9a8\"}.cib-creative-commons-zero:before{content:\"\\e9a9\"}.cib-creative-commons:before{content:\"\\e9aa\"}.cib-crunchbase:before{content:\"\\e9ab\"}.cib-crunchyroll:before{content:\"\\e9ac\"}.cib-css3-shiled:before{content:\"\\e9ad\"}.cib-css3:before{content:\"\\e9ae\"}.cib-csswizardry:before{content:\"\\e9af\"}.cib-d3-js:before{content:\"\\e9b0\"}.cib-dailymotion:before{content:\"\\e9b1\"}.cib-dashlane:before{content:\"\\e9b2\"}.cib-dazn:before{content:\"\\e9b3\"}.cib-dblp:before{content:\"\\e9b4\"}.cib-debian:before{content:\"\\e9b5\"}.cib-deepin:before{content:\"\\e9b6\"}.cib-deezer:before{content:\"\\e9b7\"}.cib-delicious:before{content:\"\\e9b8\"}.cib-dell:before{content:\"\\e9b9\"}.cib-deno:before{content:\"\\e9ba\"}.cib-dependabot:before{content:\"\\e9bb\"}.cib-designer-news:before{content:\"\\e9bc\"}.cib-dev-to:before{content:\"\\e9bd\"}.cib-deviantart:before{content:\"\\e9be\"}.cib-devrant:before{content:\"\\e9bf\"}.cib-diaspora:before{content:\"\\e9c0\"}.cib-digg:before{content:\"\\e9c1\"}.cib-digital-ocean:before{content:\"\\e9c2\"}.cib-discord:before{content:\"\\e9c3\"}.cib-discourse:before{content:\"\\e9c4\"}.cib-discover:before{content:\"\\e9c5\"}.cib-disqus:before{content:\"\\e9c6\"}.cib-disroot:before{content:\"\\e9c7\"}.cib-django:before{content:\"\\e9c8\"}.cib-docker:before{content:\"\\e9c9\"}.cib-docusign:before{content:\"\\e9ca\"}.cib-dot-net:before{content:\"\\e9cb\"}.cib-draugiem-lv:before{content:\"\\e9cc\"}.cib-dribbble:before{content:\"\\e9cd\"}.cib-drone:before{content:\"\\e9ce\"}.cib-dropbox:before{content:\"\\e9cf\"}.cib-drupal:before{content:\"\\e9d0\"}.cib-dtube:before{content:\"\\e9d1\"}.cib-duckduckgo:before{content:\"\\e9d2\"}.cib-dynatrace:before{content:\"\\e9d3\"}.cib-ebay:before{content:\"\\e9d4\"}.cib-eclipseide:before{content:\"\\e9d5\"}.cib-elastic-cloud:before{content:\"\\e9d6\"}.cib-elastic-search:before{content:\"\\e9d7\"}.cib-elastic-stack:before{content:\"\\e9d8\"}.cib-elastic:before{content:\"\\e9d9\"}.cib-electron:before{content:\"\\e9da\"}.cib-elementary:before{content:\"\\e9db\"}.cib-eleventy:before{content:\"\\e9dc\"}.cib-ello:before{content:\"\\e9dd\"}.cib-elsevier:before{content:\"\\e9de\"}.cib-emlakjet:before{content:\"\\e9df\"}.cib-empirekred:before{content:\"\\e9e0\"}.cib-envato:before{content:\"\\e9e1\"}.cib-epic-games:before{content:\"\\e9e2\"}.cib-epson:before{content:\"\\e9e3\"}.cib-esea:before{content:\"\\e9e4\"}.cib-eslint:before{content:\"\\e9e5\"}.cib-ethereum:before{content:\"\\e9e6\"}.cib-etsy:before{content:\"\\e9e7\"}.cib-event-store:before{content:\"\\e9e8\"}.cib-eventbrite:before{content:\"\\e9e9\"}.cib-evernote:before{content:\"\\e9ea\"}.cib-everplaces:before{content:\"\\e9eb\"}.cib-evry:before{content:\"\\e9ec\"}.cib-exercism:before{content:\"\\e9ed\"}.cib-experts-exchange:before{content:\"\\e9ee\"}.cib-expo:before{content:\"\\e9ef\"}.cib-eyeem:before{content:\"\\e9f0\"}.cib-f-secure:before{content:\"\\e9f1\"}.cib-facebook-f:before{content:\"\\e9f2\"}.cib-facebook:before{content:\"\\e9f3\"}.cib-faceit:before{content:\"\\e9f4\"}.cib-fandango:before{content:\"\\e9f5\"}.cib-favro:before{content:\"\\e9f6\"}.cib-feathub:before{content:\"\\e9f7\"}.cib-fedex:before{content:\"\\e9f8\"}.cib-fedora:before{content:\"\\e9f9\"}.cib-feedly:before{content:\"\\e9fa\"}.cib-fido-alliance:before{content:\"\\e9fb\"}.cib-figma:before{content:\"\\e9fc\"}.cib-filezilla:before{content:\"\\e9fd\"}.cib-firebase:before{content:\"\\e9fe\"}.cib-fitbit:before{content:\"\\e9ff\"}.cib-flask:before{content:\"\\ea00\"}.cib-flattr:before{content:\"\\ea01\"}.cib-flickr:before{content:\"\\ea02\"}.cib-flipboard:before{content:\"\\ea03\"}.cib-flutter:before{content:\"\\ea04\"}.cib-fnac:before{content:\"\\ea05\"}.cib-foursquare:before{content:\"\\ea06\"}.cib-framer:before{content:\"\\ea07\"}.cib-freebsd:before{content:\"\\ea08\"}.cib-freecodecamp:before{content:\"\\ea09\"}.cib-fur-affinity:before{content:\"\\ea0a\"}.cib-furry-network:before{content:\"\\ea0b\"}.cib-garmin:before{content:\"\\ea0c\"}.cib-gatsby:before{content:\"\\ea0d\"}.cib-gauges:before{content:\"\\ea0e\"}.cib-genius:before{content:\"\\ea0f\"}.cib-gentoo:before{content:\"\\ea10\"}.cib-geocaching:before{content:\"\\ea11\"}.cib-gerrit:before{content:\"\\ea12\"}.cib-gg:before{content:\"\\ea13\"}.cib-ghost:before{content:\"\\ea14\"}.cib-gimp:before{content:\"\\ea15\"}.cib-git:before{content:\"\\ea16\"}.cib-gitea:before{content:\"\\ea17\"}.cib-github:before{content:\"\\ea18\"}.cib-gitkraken:before{content:\"\\ea19\"}.cib-gitlab:before{content:\"\\ea1a\"}.cib-gitpod:before{content:\"\\ea1b\"}.cib-gitter:before{content:\"\\ea1c\"}.cib-glassdoor:before{content:\"\\ea1d\"}.cib-glitch:before{content:\"\\ea1e\"}.cib-gmail:before{content:\"\\ea1f\"}.cib-gnu-privacy-guard:before{content:\"\\ea20\"}.cib-gnu-social:before{content:\"\\ea21\"}.cib-gnu:before{content:\"\\ea22\"}.cib-go:before{content:\"\\ea23\"}.cib-godot-engine:before{content:\"\\ea24\"}.cib-gog-com:before{content:\"\\ea25\"}.cib-goldenline:before{content:\"\\ea26\"}.cib-goodreads:before{content:\"\\ea27\"}.cib-google-ads:before{content:\"\\ea28\"}.cib-google-allo:before{content:\"\\ea29\"}.cib-google-analytics:before{content:\"\\ea2a\"}.cib-google-chrome:before{content:\"\\ea2b\"}.cib-google-cloud:before{content:\"\\ea2c\"}.cib-google-keep:before{content:\"\\ea2d\"}.cib-google-pay:before{content:\"\\ea2e\"}.cib-google-play:before{content:\"\\ea2f\"}.cib-google-podcasts:before{content:\"\\ea30\"}.cib-google:before{content:\"\\ea31\"}.cib-googles-cholar:before{content:\"\\ea32\"}.cib-gov-uk:before{content:\"\\ea33\"}.cib-gradle:before{content:\"\\ea34\"}.cib-grafana:before{content:\"\\ea35\"}.cib-graphcool:before{content:\"\\ea36\"}.cib-graphql:before{content:\"\\ea37\"}.cib-grav:before{content:\"\\ea38\"}.cib-gravatar:before{content:\"\\ea39\"}.cib-greenkeeper:before{content:\"\\ea3a\"}.cib-greensock:before{content:\"\\ea3b\"}.cib-groovy:before{content:\"\\ea3c\"}.cib-groupon:before{content:\"\\ea3d\"}.cib-grunt:before{content:\"\\ea3e\"}.cib-gulp:before{content:\"\\ea3f\"}.cib-gumroad:before{content:\"\\ea40\"}.cib-gumtree:before{content:\"\\ea41\"}.cib-habr:before{content:\"\\ea42\"}.cib-hackaday:before{content:\"\\ea43\"}.cib-hackerearth:before{content:\"\\ea44\"}.cib-hackerone:before{content:\"\\ea45\"}.cib-hackerrank:before{content:\"\\ea46\"}.cib-hackhands:before{content:\"\\ea47\"}.cib-hackster:before{content:\"\\ea48\"}.cib-happycow:before{content:\"\\ea49\"}.cib-hashnode:before{content:\"\\ea4a\"}.cib-haskell:before{content:\"\\ea4b\"}.cib-hatena-bookmark:before{content:\"\\ea4c\"}.cib-haxe:before{content:\"\\ea4d\"}.cib-helm:before{content:\"\\ea4e\"}.cib-here:before{content:\"\\ea4f\"}.cib-heroku:before{content:\"\\ea50\"}.cib-hexo:before{content:\"\\ea51\"}.cib-highly:before{content:\"\\ea52\"}.cib-hipchat:before{content:\"\\ea53\"}.cib-hitachi:before{content:\"\\ea54\"}.cib-hockeyapp:before{content:\"\\ea55\"}.cib-homify:before{content:\"\\ea56\"}.cib-hootsuite:before{content:\"\\ea57\"}.cib-hotjar:before{content:\"\\ea58\"}.cib-houzz:before{content:\"\\ea59\"}.cib-hp:before{content:\"\\ea5a\"}.cib-html5-shield:before{content:\"\\ea5b\"}.cib-html5:before{content:\"\\ea5c\"}.cib-htmlacademy:before{content:\"\\ea5d\"}.cib-huawei:before{content:\"\\ea5e\"}.cib-hubspot:before{content:\"\\ea5f\"}.cib-hulu:before{content:\"\\ea60\"}.cib-humble-bundle:before{content:\"\\ea61\"}.cib-iata:before{content:\"\\ea62\"}.cib-ibm:before{content:\"\\ea63\"}.cib-icloud:before{content:\"\\ea64\"}.cib-iconjar:before{content:\"\\ea65\"}.cib-icq:before{content:\"\\ea66\"}.cib-ideal:before{content:\"\\ea67\"}.cib-ifixit:before{content:\"\\ea68\"}.cib-imdb:before{content:\"\\ea69\"}.cib-indeed:before{content:\"\\ea6a\"}.cib-inkscape:before{content:\"\\ea6b\"}.cib-instacart:before{content:\"\\ea6c\"}.cib-instagram:before{content:\"\\ea6d\"}.cib-instapaper:before{content:\"\\ea6e\"}.cib-intel:before{content:\"\\ea6f\"}.cib-intellijidea:before{content:\"\\ea70\"}.cib-intercom:before{content:\"\\ea71\"}.cib-internet-explorer:before{content:\"\\ea72\"}.cib-invision:before{content:\"\\ea73\"}.cib-ionic:before{content:\"\\ea74\"}.cib-issuu:before{content:\"\\ea75\"}.cib-itch-io:before{content:\"\\ea76\"}.cib-jabber:before{content:\"\\ea77\"}.cib-java:before{content:\"\\ea78\"}.cib-javascript:before{content:\"\\ea79\"}.cib-jekyll:before{content:\"\\ea7a\"}.cib-jenkins:before{content:\"\\ea7b\"}.cib-jest:before{content:\"\\ea7c\"}.cib-jet:before{content:\"\\ea7d\"}.cib-jetbrains:before{content:\"\\ea7e\"}.cib-jira:before{content:\"\\ea7f\"}.cib-joomla:before{content:\"\\ea80\"}.cib-jquery:before{content:\"\\ea81\"}.cib-js:before{content:\"\\ea82\"}.cib-jsdelivr:before{content:\"\\ea83\"}.cib-jsfiddle:before{content:\"\\ea84\"}.cib-json:before{content:\"\\ea85\"}.cib-jupyter:before{content:\"\\ea86\"}.cib-justgiving:before{content:\"\\ea87\"}.cib-kaggle:before{content:\"\\ea88\"}.cib-kaios:before{content:\"\\ea89\"}.cib-kaspersky:before{content:\"\\ea8a\"}.cib-kentico:before{content:\"\\ea8b\"}.cib-keras:before{content:\"\\ea8c\"}.cib-keybase:before{content:\"\\ea8d\"}.cib-keycdn:before{content:\"\\ea8e\"}.cib-khan-academy:before{content:\"\\ea8f\"}.cib-kibana:before{content:\"\\ea90\"}.cib-kickstarter:before{content:\"\\ea91\"}.cib-kik:before{content:\"\\ea92\"}.cib-kirby:before{content:\"\\ea93\"}.cib-klout:before{content:\"\\ea94\"}.cib-known:before{content:\"\\ea95\"}.cib-ko-fi:before{content:\"\\ea96\"}.cib-kodi:before{content:\"\\ea97\"}.cib-koding:before{content:\"\\ea98\"}.cib-kotlin:before{content:\"\\ea99\"}.cib-krita:before{content:\"\\ea9a\"}.cib-kubernetes:before{content:\"\\ea9b\"}.cib-lanyrd:before{content:\"\\ea9c\"}.cib-laravel-horizon:before{content:\"\\ea9d\"}.cib-laravel-nova:before{content:\"\\ea9e\"}.cib-laravel:before{content:\"\\ea9f\"}.cib-last-fm:before{content:\"\\eaa0\"}.cib-latex:before{content:\"\\eaa1\"}.cib-launchpad:before{content:\"\\eaa2\"}.cib-leetcode:before{content:\"\\eaa3\"}.cib-lenovo:before{content:\"\\eaa4\"}.cib-less:before{content:\"\\eaa5\"}.cib-lets-encrypt:before{content:\"\\eaa6\"}.cib-letterboxd:before{content:\"\\eaa7\"}.cib-lgtm:before{content:\"\\eaa8\"}.cib-liberapay:before{content:\"\\eaa9\"}.cib-librarything:before{content:\"\\eaaa\"}.cib-libreoffice:before{content:\"\\eaab\"}.cib-line:before{content:\"\\eaac\"}.cib-linkedin-in:before{content:\"\\eaad\"}.cib-linkedin:before{content:\"\\eaae\"}.cib-linux-foundation:before{content:\"\\eaaf\"}.cib-linux-mint:before{content:\"\\eab0\"}.cib-linux:before{content:\"\\eab1\"}.cib-livejournal:before{content:\"\\eab2\"}.cib-livestream:before{content:\"\\eab3\"}.cib-logstash:before{content:\"\\eab4\"}.cib-lua:before{content:\"\\eab5\"}.cib-lumen:before{content:\"\\eab6\"}.cib-lyft:before{content:\"\\eab7\"}.cib-macys:before{content:\"\\eab8\"}.cib-magento:before{content:\"\\eab9\"}.cib-magisk:before{content:\"\\eaba\"}.cib-mail-ru:before{content:\"\\eabb\"}.cib-mailchimp:before{content:\"\\eabc\"}.cib-makerbot:before{content:\"\\eabd\"}.cib-manjaro:before{content:\"\\eabe\"}.cib-markdown:before{content:\"\\eabf\"}.cib-marketo:before{content:\"\\eac0\"}.cib-mastercard:before{content:\"\\eac1\"}.cib-mastodon:before{content:\"\\eac2\"}.cib-material-design:before{content:\"\\eac3\"}.cib-mathworks:before{content:\"\\eac4\"}.cib-matrix:before{content:\"\\eac5\"}.cib-mattermost:before{content:\"\\eac6\"}.cib-matternet:before{content:\"\\eac7\"}.cib-maxcdn:before{content:\"\\eac8\"}.cib-mcafee:before{content:\"\\eac9\"}.cib-media-temple:before{content:\"\\eaca\"}.cib-mediafire:before{content:\"\\eacb\"}.cib-medium-m:before{content:\"\\eacc\"}.cib-medium:before{content:\"\\eacd\"}.cib-meetup:before{content:\"\\eace\"}.cib-mega:before{content:\"\\eacf\"}.cib-mendeley:before{content:\"\\ead0\"}.cib-messenger:before{content:\"\\ead1\"}.cib-meteor:before{content:\"\\ead2\"}.cib-micro-blog:before{content:\"\\ead3\"}.cib-microgenetics:before{content:\"\\ead4\"}.cib-microsoft-edge:before{content:\"\\ead5\"}.cib-microsoft:before{content:\"\\ead6\"}.cib-minetest:before{content:\"\\ead7\"}.cib-minutemailer:before{content:\"\\ead8\"}.cib-mix:before{content:\"\\ead9\"}.cib-mixcloud:before{content:\"\\eada\"}.cib-mixer:before{content:\"\\eadb\"}.cib-mojang:before{content:\"\\eadc\"}.cib-monero:before{content:\"\\eadd\"}.cib-mongodb:before{content:\"\\eade\"}.cib-monkeytie:before{content:\"\\eadf\"}.cib-monogram:before{content:\"\\eae0\"}.cib-monzo:before{content:\"\\eae1\"}.cib-moo:before{content:\"\\eae2\"}.cib-mozilla-firefox:before{content:\"\\eae3\"}.cib-mozilla:before{content:\"\\eae4\"}.cib-musescore:before{content:\"\\eae5\"}.cib-mxlinux:before{content:\"\\eae6\"}.cib-myspace:before{content:\"\\eae7\"}.cib-mysql:before{content:\"\\eae8\"}.cib-nativescript:before{content:\"\\eae9\"}.cib-nec:before{content:\"\\eaea\"}.cib-neo4j:before{content:\"\\eaeb\"}.cib-netflix:before{content:\"\\eaec\"}.cib-netlify:before{content:\"\\eaed\"}.cib-next-js:before{content:\"\\eaee\"}.cib-nextcloud:before{content:\"\\eaef\"}.cib-nextdoor:before{content:\"\\eaf0\"}.cib-nginx:before{content:\"\\eaf1\"}.cib-nim:before{content:\"\\eaf2\"}.cib-nintendo-3ds:before{content:\"\\eaf3\"}.cib-nintendo-gamecube:before{content:\"\\eaf4\"}.cib-nintendo-switch:before{content:\"\\eaf5\"}.cib-nintendo:before{content:\"\\eaf6\"}.cib-node-js:before{content:\"\\eaf7\"}.cib-node-red:before{content:\"\\eaf8\"}.cib-nodemon:before{content:\"\\eaf9\"}.cib-nokia:before{content:\"\\eafa\"}.cib-notion:before{content:\"\\eafb\"}.cib-npm:before{content:\"\\eafc\"}.cib-nucleo:before{content:\"\\eafd\"}.cib-nuget:before{content:\"\\eafe\"}.cib-nuxt-js:before{content:\"\\eaff\"}.cib-nvidia:before{content:\"\\eb00\"}.cib-ocaml:before{content:\"\\eb01\"}.cib-octave:before{content:\"\\eb02\"}.cib-octopus-deploy:before{content:\"\\eb03\"}.cib-oculus:before{content:\"\\eb04\"}.cib-odnoklassniki:before{content:\"\\eb05\"}.cib-open-access:before{content:\"\\eb06\"}.cib-open-collective:before{content:\"\\eb07\"}.cib-open-id:before{content:\"\\eb08\"}.cib-open-source-initiative:before{content:\"\\eb09\"}.cib-openstreetmap:before{content:\"\\eb0a\"}.cib-opensuse:before{content:\"\\eb0b\"}.cib-openvpn:before{content:\"\\eb0c\"}.cib-opera:before{content:\"\\eb0d\"}.cib-opsgenie:before{content:\"\\eb0e\"}.cib-oracle:before{content:\"\\eb0f\"}.cib-orcid:before{content:\"\\eb10\"}.cib-origin:before{content:\"\\eb11\"}.cib-osi:before{content:\"\\eb12\"}.cib-osmc:before{content:\"\\eb13\"}.cib-overcast:before{content:\"\\eb14\"}.cib-overleaf:before{content:\"\\eb15\"}.cib-ovh:before{content:\"\\eb16\"}.cib-pagekit:before{content:\"\\eb17\"}.cib-palantir:before{content:\"\\eb18\"}.cib-pandora:before{content:\"\\eb19\"}.cib-pantheon:before{content:\"\\eb1a\"}.cib-patreon:before{content:\"\\eb1b\"}.cib-paypal:before{content:\"\\eb1c\"}.cib-periscope:before{content:\"\\eb1d\"}.cib-php:before{content:\"\\eb1e\"}.cib-picarto-tv:before{content:\"\\eb1f\"}.cib-pinboard:before{content:\"\\eb20\"}.cib-pingdom:before{content:\"\\eb21\"}.cib-pingup:before{content:\"\\eb22\"}.cib-pinterest-p:before{content:\"\\eb23\"}.cib-pinterest:before{content:\"\\eb24\"}.cib-pivotaltracker:before{content:\"\\eb25\"}.cib-plangrid:before{content:\"\\eb26\"}.cib-player-me:before{content:\"\\eb27\"}.cib-playerfm:before{content:\"\\eb28\"}.cib-playstation:before{content:\"\\eb29\"}.cib-playstation3:before{content:\"\\eb2a\"}.cib-playstation4:before{content:\"\\eb2b\"}.cib-plesk:before{content:\"\\eb2c\"}.cib-plex:before{content:\"\\eb2d\"}.cib-pluralsight:before{content:\"\\eb2e\"}.cib-plurk:before{content:\"\\eb2f\"}.cib-pocket:before{content:\"\\eb30\"}.cib-postgresql:before{content:\"\\eb31\"}.cib-postman:before{content:\"\\eb32\"}.cib-postwoman:before{content:\"\\eb33\"}.cib-powershell:before{content:\"\\eb34\"}.cib-prettier:before{content:\"\\eb35\"}.cib-prismic:before{content:\"\\eb36\"}.cib-probot:before{content:\"\\eb37\"}.cib-processwire:before{content:\"\\eb38\"}.cib-product-hunt:before{content:\"\\eb39\"}.cib-proto-io:before{content:\"\\eb3a\"}.cib-protonmail:before{content:\"\\eb3b\"}.cib-proxmox:before{content:\"\\eb3c\"}.cib-pypi:before{content:\"\\eb3d\"}.cib-python:before{content:\"\\eb3e\"}.cib-pytorch:before{content:\"\\eb3f\"}.cib-qgis:before{content:\"\\eb40\"}.cib-qiita:before{content:\"\\eb41\"}.cib-qq:before{content:\"\\eb42\"}.cib-qualcomm:before{content:\"\\eb43\"}.cib-quantcast:before{content:\"\\eb44\"}.cib-quantopian:before{content:\"\\eb45\"}.cib-quarkus:before{content:\"\\eb46\"}.cib-quora:before{content:\"\\eb47\"}.cib-qwiklabs:before{content:\"\\eb48\"}.cib-qzone:before{content:\"\\eb49\"}.cib-r:before{content:\"\\eb4a\"}.cib-radiopublic:before{content:\"\\eb4b\"}.cib-rails:before{content:\"\\eb4c\"}.cib-raspberry-pi:before{content:\"\\eb4d\"}.cib-react:before{content:\"\\eb4e\"}.cib-read-the-docs:before{content:\"\\eb4f\"}.cib-readme:before{content:\"\\eb50\"}.cib-realm:before{content:\"\\eb51\"}.cib-reason:before{content:\"\\eb52\"}.cib-redbubble:before{content:\"\\eb53\"}.cib-reddit-alt:before{content:\"\\eb54\"}.cib-reddit:before{content:\"\\eb55\"}.cib-redhat:before{content:\"\\eb56\"}.cib-redis:before{content:\"\\eb57\"}.cib-redux:before{content:\"\\eb58\"}.cib-renren:before{content:\"\\eb59\"}.cib-reverbnation:before{content:\"\\eb5a\"}.cib-riot:before{content:\"\\eb5b\"}.cib-ripple:before{content:\"\\eb5c\"}.cib-riseup:before{content:\"\\eb5d\"}.cib-rollup-js:before{content:\"\\eb5e\"}.cib-roots:before{content:\"\\eb5f\"}.cib-roundcube:before{content:\"\\eb60\"}.cib-rss:before{content:\"\\eb61\"}.cib-rstudio:before{content:\"\\eb62\"}.cib-ruby:before{content:\"\\eb63\"}.cib-rubygems:before{content:\"\\eb64\"}.cib-runkeeper:before{content:\"\\eb65\"}.cib-rust:before{content:\"\\eb66\"}.cib-safari:before{content:\"\\eb67\"}.cib-sahibinden:before{content:\"\\eb68\"}.cib-salesforce:before{content:\"\\eb69\"}.cib-saltstack:before{content:\"\\eb6a\"}.cib-samsung-pay:before{content:\"\\eb6b\"}.cib-samsung:before{content:\"\\eb6c\"}.cib-sap:before{content:\"\\eb6d\"}.cib-sass-alt:before{content:\"\\eb6e\"}.cib-sass:before{content:\"\\eb6f\"}.cib-saucelabs:before{content:\"\\eb70\"}.cib-scala:before{content:\"\\eb71\"}.cib-scaleway:before{content:\"\\eb72\"}.cib-scribd:before{content:\"\\eb73\"}.cib-scrutinizerci:before{content:\"\\eb74\"}.cib-seagate:before{content:\"\\eb75\"}.cib-sega:before{content:\"\\eb76\"}.cib-sellfy:before{content:\"\\eb77\"}.cib-semaphoreci:before{content:\"\\eb78\"}.cib-sensu:before{content:\"\\eb79\"}.cib-sentry:before{content:\"\\eb7a\"}.cib-server-fault:before{content:\"\\eb7b\"}.cib-shazam:before{content:\"\\eb7c\"}.cib-shell:before{content:\"\\eb7d\"}.cib-shopify:before{content:\"\\eb7e\"}.cib-showpad:before{content:\"\\eb7f\"}.cib-siemens:before{content:\"\\eb80\"}.cib-signal:before{content:\"\\eb81\"}.cib-sina-weibo:before{content:\"\\eb82\"}.cib-sitepoint:before{content:\"\\eb83\"}.cib-sketch:before{content:\"\\eb84\"}.cib-skillshare:before{content:\"\\eb85\"}.cib-skyliner:before{content:\"\\eb86\"}.cib-skype:before{content:\"\\eb87\"}.cib-slack:before{content:\"\\eb88\"}.cib-slashdot:before{content:\"\\eb89\"}.cib-slickpic:before{content:\"\\eb8a\"}.cib-slides:before{content:\"\\eb8b\"}.cib-slideshare:before{content:\"\\eb8c\"}.cib-smashingmagazine:before{content:\"\\eb8d\"}.cib-snapchat:before{content:\"\\eb8e\"}.cib-snapcraft:before{content:\"\\eb8f\"}.cib-snyk:before{content:\"\\eb90\"}.cib-society6:before{content:\"\\eb91\"}.cib-socket-io:before{content:\"\\eb92\"}.cib-sogou:before{content:\"\\eb93\"}.cib-solus:before{content:\"\\eb94\"}.cib-songkick:before{content:\"\\eb95\"}.cib-sonos:before{content:\"\\eb96\"}.cib-soundcloud:before{content:\"\\eb97\"}.cib-sourceforge:before{content:\"\\eb98\"}.cib-sourcegraph:before{content:\"\\eb99\"}.cib-spacemacs:before{content:\"\\eb9a\"}.cib-spacex:before{content:\"\\eb9b\"}.cib-sparkfun:before{content:\"\\eb9c\"}.cib-sparkpost:before{content:\"\\eb9d\"}.cib-spdx:before{content:\"\\eb9e\"}.cib-speaker-deck:before{content:\"\\eb9f\"}.cib-spectrum:before{content:\"\\eba0\"}.cib-spotify:before{content:\"\\eba1\"}.cib-spotlight:before{content:\"\\eba2\"}.cib-spreaker:before{content:\"\\eba3\"}.cib-spring:before{content:\"\\eba4\"}.cib-sprint:before{content:\"\\eba5\"}.cib-squarespace:before{content:\"\\eba6\"}.cib-stackbit:before{content:\"\\eba7\"}.cib-stackexchange:before{content:\"\\eba8\"}.cib-stackoverflow:before{content:\"\\eba9\"}.cib-stackpath:before{content:\"\\ebaa\"}.cib-stackshare:before{content:\"\\ebab\"}.cib-stadia:before{content:\"\\ebac\"}.cib-statamic:before{content:\"\\ebad\"}.cib-staticman:before{content:\"\\ebae\"}.cib-statuspage:before{content:\"\\ebaf\"}.cib-steam:before{content:\"\\ebb0\"}.cib-steem:before{content:\"\\ebb1\"}.cib-steemit:before{content:\"\\ebb2\"}.cib-stitcher:before{content:\"\\ebb3\"}.cib-storify:before{content:\"\\ebb4\"}.cib-storybook:before{content:\"\\ebb5\"}.cib-strapi:before{content:\"\\ebb6\"}.cib-strava:before{content:\"\\ebb7\"}.cib-stripe-s:before{content:\"\\ebb8\"}.cib-stripe:before{content:\"\\ebb9\"}.cib-stubhub:before{content:\"\\ebba\"}.cib-stumbleupon:before{content:\"\\ebbb\"}.cib-styleshare:before{content:\"\\ebbc\"}.cib-stylus:before{content:\"\\ebbd\"}.cib-sublime-text:before{content:\"\\ebbe\"}.cib-subversion:before{content:\"\\ebbf\"}.cib-superuser:before{content:\"\\ebc0\"}.cib-svelte:before{content:\"\\ebc1\"}.cib-svg:before{content:\"\\ebc2\"}.cib-swagger:before{content:\"\\ebc3\"}.cib-swarm:before{content:\"\\ebc4\"}.cib-swift:before{content:\"\\ebc5\"}.cib-symantec:before{content:\"\\ebc6\"}.cib-symfony:before{content:\"\\ebc7\"}.cib-synology:before{content:\"\\ebc8\"}.cib-t-mobile:before{content:\"\\ebc9\"}.cib-tableau:before{content:\"\\ebca\"}.cib-tails:before{content:\"\\ebcb\"}.cib-tapas:before{content:\"\\ebcc\"}.cib-teamviewer:before{content:\"\\ebcd\"}.cib-ted:before{content:\"\\ebce\"}.cib-teespring:before{content:\"\\ebcf\"}.cib-telegram-plane:before{content:\"\\ebd0\"}.cib-telegram:before{content:\"\\ebd1\"}.cib-tencent-qq:before{content:\"\\ebd2\"}.cib-tencent-weibo:before{content:\"\\ebd3\"}.cib-tensorflow:before{content:\"\\ebd4\"}.cib-terraform:before{content:\"\\ebd5\"}.cib-tesla:before{content:\"\\ebd6\"}.cib-the-mighty:before{content:\"\\ebd7\"}.cib-the-movie-database:before{content:\"\\ebd8\"}.cib-tidal:before{content:\"\\ebd9\"}.cib-tiktok:before{content:\"\\ebda\"}.cib-tinder:before{content:\"\\ebdb\"}.cib-todoist:before{content:\"\\ebdc\"}.cib-toggl:before{content:\"\\ebdd\"}.cib-topcoder:before{content:\"\\ebde\"}.cib-toptal:before{content:\"\\ebdf\"}.cib-tor:before{content:\"\\ebe0\"}.cib-toshiba:before{content:\"\\ebe1\"}.cib-trainerroad:before{content:\"\\ebe2\"}.cib-trakt:before{content:\"\\ebe3\"}.cib-travisci:before{content:\"\\ebe4\"}.cib-treehouse:before{content:\"\\ebe5\"}.cib-trello:before{content:\"\\ebe6\"}.cib-tripadvisor:before{content:\"\\ebe7\"}.cib-trulia:before{content:\"\\ebe8\"}.cib-tumblr:before{content:\"\\ebe9\"}.cib-twilio:before{content:\"\\ebea\"}.cib-twitch:before{content:\"\\ebeb\"}.cib-twitter:before{content:\"\\ebec\"}.cib-twoo:before{content:\"\\ebed\"}.cib-typescript:before{content:\"\\ebee\"}.cib-typo3:before{content:\"\\ebef\"}.cib-uber:before{content:\"\\ebf0\"}.cib-ubisoft:before{content:\"\\ebf1\"}.cib-ublock-origin:before{content:\"\\ebf2\"}.cib-ubuntu:before{content:\"\\ebf3\"}.cib-udacity:before{content:\"\\ebf4\"}.cib-udemy:before{content:\"\\ebf5\"}.cib-uikit:before{content:\"\\ebf6\"}.cib-umbraco:before{content:\"\\ebf7\"}.cib-unity:before{content:\"\\ebf8\"}.cib-unreal-engine:before{content:\"\\ebf9\"}.cib-unsplash:before{content:\"\\ebfa\"}.cib-untappd:before{content:\"\\ebfb\"}.cib-upwork:before{content:\"\\ebfc\"}.cib-usb:before{content:\"\\ebfd\"}.cib-v8:before{content:\"\\ebfe\"}.cib-vagrant:before{content:\"\\ebff\"}.cib-venmo:before{content:\"\\ec00\"}.cib-verizon:before{content:\"\\ec01\"}.cib-viadeo:before{content:\"\\ec02\"}.cib-viber:before{content:\"\\ec03\"}.cib-vim:before{content:\"\\ec04\"}.cib-vimeo-v:before{content:\"\\ec05\"}.cib-vimeo:before{content:\"\\ec06\"}.cib-vine:before{content:\"\\ec07\"}.cib-virb:before{content:\"\\ec08\"}.cib-visa:before{content:\"\\ec09\"}.cib-visual-studio-code:before{content:\"\\ec0a\"}.cib-visual-studio:before{content:\"\\ec0b\"}.cib-vk:before{content:\"\\ec0c\"}.cib-vlc:before{content:\"\\ec0d\"}.cib-vsco:before{content:\"\\ec0e\"}.cib-vue-js:before{content:\"\\ec0f\"}.cib-wattpad:before{content:\"\\ec10\"}.cib-weasyl:before{content:\"\\ec11\"}.cib-webcomponents-org:before{content:\"\\ec12\"}.cib-webpack:before{content:\"\\ec13\"}.cib-webstorm:before{content:\"\\ec14\"}.cib-wechat:before{content:\"\\ec15\"}.cib-whatsapp:before{content:\"\\ec16\"}.cib-when-i-work:before{content:\"\\ec17\"}.cib-wii:before{content:\"\\ec18\"}.cib-wiiu:before{content:\"\\ec19\"}.cib-wikipedia:before{content:\"\\ec1a\"}.cib-windows:before{content:\"\\ec1b\"}.cib-wire:before{content:\"\\ec1c\"}.cib-wireguard:before{content:\"\\ec1d\"}.cib-wix:before{content:\"\\ec1e\"}.cib-wolfram-language:before{content:\"\\ec1f\"}.cib-wolfram-mathematica:before{content:\"\\ec20\"}.cib-wolfram:before{content:\"\\ec21\"}.cib-wordpress:before{content:\"\\ec22\"}.cib-wpengine:before{content:\"\\ec23\"}.cib-x-pack:before{content:\"\\ec24\"}.cib-xbox:before{content:\"\\ec25\"}.cib-xcode:before{content:\"\\ec26\"}.cib-xero:before{content:\"\\ec27\"}.cib-xiaomi:before{content:\"\\ec28\"}.cib-xing:before{content:\"\\ec29\"}.cib-xrp:before{content:\"\\ec2a\"}.cib-xsplit:before{content:\"\\ec2b\"}.cib-y-combinator:before{content:\"\\ec2c\"}.cib-yahoo:before{content:\"\\ec2d\"}.cib-yammer:before{content:\"\\ec2e\"}.cib-yandex:before{content:\"\\ec2f\"}.cib-yarn:before{content:\"\\ec30\"}.cib-yelp:before{content:\"\\ec31\"}.cib-youtube:before{content:\"\\ec32\"}.cib-zalando:before{content:\"\\ec33\"}.cib-zapier:before{content:\"\\ec34\"}.cib-zeit:before{content:\"\\ec35\"}.cib-zendesk:before{content:\"\\ec36\"}.cib-zerply:before{content:\"\\ec37\"}.cib-zillow:before{content:\"\\ec38\"}.cib-zingat:before{content:\"\\ec39\"}.cib-zoom:before{content:\"\\ec3a\"}.cib-zorin:before{content:\"\\ec3b\"}.cib-zulip:before{content:\"\\ec3c\"}\n/*# sourceMappingURL=brand.min.css.map */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/flag.min.css":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/flag.min.css ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, module.id, __webpack_require__.d, __webpack_require__.*, module */
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _svg_flag_cif_af_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../svg/flag/cif-af.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-af.svg");
/* harmony import */ var _svg_flag_cif_al_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../svg/flag/cif-al.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-al.svg");
/* harmony import */ var _svg_flag_cif_dz_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../svg/flag/cif-dz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-dz.svg");
/* harmony import */ var _svg_flag_cif_ad_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../svg/flag/cif-ad.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ad.svg");
/* harmony import */ var _svg_flag_cif_ao_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../svg/flag/cif-ao.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ao.svg");
/* harmony import */ var _svg_flag_cif_ag_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../svg/flag/cif-ag.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ag.svg");
/* harmony import */ var _svg_flag_cif_ar_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../svg/flag/cif-ar.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ar.svg");
/* harmony import */ var _svg_flag_cif_am_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../svg/flag/cif-am.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-am.svg");
/* harmony import */ var _svg_flag_cif_au_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../svg/flag/cif-au.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-au.svg");
/* harmony import */ var _svg_flag_cif_at_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../svg/flag/cif-at.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-at.svg");
/* harmony import */ var _svg_flag_cif_az_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../svg/flag/cif-az.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-az.svg");
/* harmony import */ var _svg_flag_cif_bs_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../svg/flag/cif-bs.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bs.svg");
/* harmony import */ var _svg_flag_cif_bh_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../svg/flag/cif-bh.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bh.svg");
/* harmony import */ var _svg_flag_cif_bd_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../svg/flag/cif-bd.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bd.svg");
/* harmony import */ var _svg_flag_cif_bb_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../svg/flag/cif-bb.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bb.svg");
/* harmony import */ var _svg_flag_cif_by_svg__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../svg/flag/cif-by.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-by.svg");
/* harmony import */ var _svg_flag_cif_be_svg__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../svg/flag/cif-be.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-be.svg");
/* harmony import */ var _svg_flag_cif_bz_svg__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../svg/flag/cif-bz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bz.svg");
/* harmony import */ var _svg_flag_cif_bj_svg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../svg/flag/cif-bj.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bj.svg");
/* harmony import */ var _svg_flag_cif_bt_svg__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../svg/flag/cif-bt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bt.svg");
/* harmony import */ var _svg_flag_cif_bo_svg__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../svg/flag/cif-bo.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bo.svg");
/* harmony import */ var _svg_flag_cif_ba_svg__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../svg/flag/cif-ba.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ba.svg");
/* harmony import */ var _svg_flag_cif_bw_svg__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../svg/flag/cif-bw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bw.svg");
/* harmony import */ var _svg_flag_cif_br_svg__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../svg/flag/cif-br.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-br.svg");
/* harmony import */ var _svg_flag_cif_bn_svg__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../svg/flag/cif-bn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bn.svg");
/* harmony import */ var _svg_flag_cif_bg_svg__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../svg/flag/cif-bg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bg.svg");
/* harmony import */ var _svg_flag_cif_bf_svg__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../svg/flag/cif-bf.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bf.svg");
/* harmony import */ var _svg_flag_cif_bi_svg__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../svg/flag/cif-bi.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-bi.svg");
/* harmony import */ var _svg_flag_cif_kh_svg__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../svg/flag/cif-kh.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kh.svg");
/* harmony import */ var _svg_flag_cif_cm_svg__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../svg/flag/cif-cm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cm.svg");
/* harmony import */ var _svg_flag_cif_ca_svg__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../svg/flag/cif-ca.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ca.svg");
/* harmony import */ var _svg_flag_cif_cv_svg__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../svg/flag/cif-cv.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cv.svg");
/* harmony import */ var _svg_flag_cif_cf_svg__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../svg/flag/cif-cf.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cf.svg");
/* harmony import */ var _svg_flag_cif_td_svg__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../svg/flag/cif-td.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-td.svg");
/* harmony import */ var _svg_flag_cif_cl_svg__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../svg/flag/cif-cl.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cl.svg");
/* harmony import */ var _svg_flag_cif_cn_svg__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../svg/flag/cif-cn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cn.svg");
/* harmony import */ var _svg_flag_cif_co_svg__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../svg/flag/cif-co.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-co.svg");
/* harmony import */ var _svg_flag_cif_km_svg__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../svg/flag/cif-km.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-km.svg");
/* harmony import */ var _svg_flag_cif_cg_svg__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../svg/flag/cif-cg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cg.svg");
/* harmony import */ var _svg_flag_cif_cd_svg__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../svg/flag/cif-cd.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cd.svg");
/* harmony import */ var _svg_flag_cif_cr_svg__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../svg/flag/cif-cr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cr.svg");
/* harmony import */ var _svg_flag_cif_ci_svg__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../svg/flag/cif-ci.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ci.svg");
/* harmony import */ var _svg_flag_cif_hr_svg__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../svg/flag/cif-hr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-hr.svg");
/* harmony import */ var _svg_flag_cif_cu_svg__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../svg/flag/cif-cu.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cu.svg");
/* harmony import */ var _svg_flag_cif_cy_svg__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../svg/flag/cif-cy.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cy.svg");
/* harmony import */ var _svg_flag_cif_cz_svg__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../svg/flag/cif-cz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-cz.svg");
/* harmony import */ var _svg_flag_cif_dk_svg__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../svg/flag/cif-dk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-dk.svg");
/* harmony import */ var _svg_flag_cif_dj_svg__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../svg/flag/cif-dj.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-dj.svg");
/* harmony import */ var _svg_flag_cif_dm_svg__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../svg/flag/cif-dm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-dm.svg");
/* harmony import */ var _svg_flag_cif_do_svg__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../svg/flag/cif-do.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-do.svg");
/* harmony import */ var _svg_flag_cif_ec_svg__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../svg/flag/cif-ec.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ec.svg");
/* harmony import */ var _svg_flag_cif_eg_svg__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../svg/flag/cif-eg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-eg.svg");
/* harmony import */ var _svg_flag_cif_sv_svg__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../svg/flag/cif-sv.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sv.svg");
/* harmony import */ var _svg_flag_cif_gq_svg__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../svg/flag/cif-gq.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gq.svg");
/* harmony import */ var _svg_flag_cif_er_svg__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../svg/flag/cif-er.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-er.svg");
/* harmony import */ var _svg_flag_cif_ee_svg__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../svg/flag/cif-ee.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ee.svg");
/* harmony import */ var _svg_flag_cif_et_svg__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../svg/flag/cif-et.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-et.svg");
/* harmony import */ var _svg_flag_cif_fj_svg__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../svg/flag/cif-fj.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-fj.svg");
/* harmony import */ var _svg_flag_cif_fi_svg__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../svg/flag/cif-fi.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-fi.svg");
/* harmony import */ var _svg_flag_cif_fr_svg__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../svg/flag/cif-fr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-fr.svg");
/* harmony import */ var _svg_flag_cif_ga_svg__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../svg/flag/cif-ga.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ga.svg");
/* harmony import */ var _svg_flag_cif_gm_svg__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../svg/flag/cif-gm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gm.svg");
/* harmony import */ var _svg_flag_cif_ge_svg__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../svg/flag/cif-ge.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ge.svg");
/* harmony import */ var _svg_flag_cif_de_svg__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../svg/flag/cif-de.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-de.svg");
/* harmony import */ var _svg_flag_cif_gh_svg__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../svg/flag/cif-gh.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gh.svg");
/* harmony import */ var _svg_flag_cif_gr_svg__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../svg/flag/cif-gr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gr.svg");
/* harmony import */ var _svg_flag_cif_gd_svg__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../svg/flag/cif-gd.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gd.svg");
/* harmony import */ var _svg_flag_cif_gt_svg__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../svg/flag/cif-gt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gt.svg");
/* harmony import */ var _svg_flag_cif_gn_svg__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../svg/flag/cif-gn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gn.svg");
/* harmony import */ var _svg_flag_cif_gw_svg__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../svg/flag/cif-gw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gw.svg");
/* harmony import */ var _svg_flag_cif_gy_svg__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../svg/flag/cif-gy.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gy.svg");
/* harmony import */ var _svg_flag_cif_hk_svg__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../svg/flag/cif-hk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-hk.svg");
/* harmony import */ var _svg_flag_cif_ht_svg__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../svg/flag/cif-ht.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ht.svg");
/* harmony import */ var _svg_flag_cif_va_svg__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../svg/flag/cif-va.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-va.svg");
/* harmony import */ var _svg_flag_cif_hn_svg__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../svg/flag/cif-hn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-hn.svg");
/* harmony import */ var _svg_flag_cif_xk_svg__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../svg/flag/cif-xk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-xk.svg");
/* harmony import */ var _svg_flag_cif_hu_svg__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../svg/flag/cif-hu.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-hu.svg");
/* harmony import */ var _svg_flag_cif_is_svg__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../svg/flag/cif-is.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-is.svg");
/* harmony import */ var _svg_flag_cif_in_svg__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../svg/flag/cif-in.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-in.svg");
/* harmony import */ var _svg_flag_cif_id_svg__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../svg/flag/cif-id.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-id.svg");
/* harmony import */ var _svg_flag_cif_ir_svg__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../svg/flag/cif-ir.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ir.svg");
/* harmony import */ var _svg_flag_cif_iq_svg__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../svg/flag/cif-iq.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-iq.svg");
/* harmony import */ var _svg_flag_cif_ie_svg__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../svg/flag/cif-ie.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ie.svg");
/* harmony import */ var _svg_flag_cif_il_svg__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../svg/flag/cif-il.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-il.svg");
/* harmony import */ var _svg_flag_cif_it_svg__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../svg/flag/cif-it.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-it.svg");
/* harmony import */ var _svg_flag_cif_jm_svg__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../svg/flag/cif-jm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-jm.svg");
/* harmony import */ var _svg_flag_cif_jp_svg__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../svg/flag/cif-jp.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-jp.svg");
/* harmony import */ var _svg_flag_cif_jo_svg__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../svg/flag/cif-jo.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-jo.svg");
/* harmony import */ var _svg_flag_cif_kz_svg__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../svg/flag/cif-kz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kz.svg");
/* harmony import */ var _svg_flag_cif_ke_svg__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../svg/flag/cif-ke.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ke.svg");
/* harmony import */ var _svg_flag_cif_ki_svg__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../svg/flag/cif-ki.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ki.svg");
/* harmony import */ var _svg_flag_cif_kr_svg__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../svg/flag/cif-kr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kr.svg");
/* harmony import */ var _svg_flag_cif_kp_svg__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../svg/flag/cif-kp.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kp.svg");
/* harmony import */ var _svg_flag_cif_kw_svg__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../svg/flag/cif-kw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kw.svg");
/* harmony import */ var _svg_flag_cif_kg_svg__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../svg/flag/cif-kg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kg.svg");
/* harmony import */ var _svg_flag_cif_la_svg__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../svg/flag/cif-la.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-la.svg");
/* harmony import */ var _svg_flag_cif_lv_svg__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../svg/flag/cif-lv.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lv.svg");
/* harmony import */ var _svg_flag_cif_lb_svg__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../svg/flag/cif-lb.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lb.svg");
/* harmony import */ var _svg_flag_cif_ls_svg__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../svg/flag/cif-ls.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ls.svg");
/* harmony import */ var _svg_flag_cif_lr_svg__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../svg/flag/cif-lr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lr.svg");
/* harmony import */ var _svg_flag_cif_ly_svg__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ../svg/flag/cif-ly.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ly.svg");
/* harmony import */ var _svg_flag_cif_li_svg__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ../svg/flag/cif-li.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-li.svg");
/* harmony import */ var _svg_flag_cif_lt_svg__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ../svg/flag/cif-lt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lt.svg");
/* harmony import */ var _svg_flag_cif_lu_svg__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ../svg/flag/cif-lu.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lu.svg");
/* harmony import */ var _svg_flag_cif_mk_svg__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ../svg/flag/cif-mk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mk.svg");
/* harmony import */ var _svg_flag_cif_mg_svg__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ../svg/flag/cif-mg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mg.svg");
/* harmony import */ var _svg_flag_cif_mw_svg__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ../svg/flag/cif-mw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mw.svg");
/* harmony import */ var _svg_flag_cif_my_svg__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ../svg/flag/cif-my.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-my.svg");
/* harmony import */ var _svg_flag_cif_mv_svg__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ../svg/flag/cif-mv.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mv.svg");
/* harmony import */ var _svg_flag_cif_ml_svg__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ../svg/flag/cif-ml.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ml.svg");
/* harmony import */ var _svg_flag_cif_mt_svg__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ../svg/flag/cif-mt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mt.svg");
/* harmony import */ var _svg_flag_cif_mh_svg__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ../svg/flag/cif-mh.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mh.svg");
/* harmony import */ var _svg_flag_cif_mr_svg__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ../svg/flag/cif-mr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mr.svg");
/* harmony import */ var _svg_flag_cif_mu_svg__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ../svg/flag/cif-mu.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mu.svg");
/* harmony import */ var _svg_flag_cif_mx_svg__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ../svg/flag/cif-mx.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mx.svg");
/* harmony import */ var _svg_flag_cif_fm_svg__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ../svg/flag/cif-fm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-fm.svg");
/* harmony import */ var _svg_flag_cif_md_svg__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ../svg/flag/cif-md.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-md.svg");
/* harmony import */ var _svg_flag_cif_mc_svg__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ../svg/flag/cif-mc.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mc.svg");
/* harmony import */ var _svg_flag_cif_mn_svg__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ../svg/flag/cif-mn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mn.svg");
/* harmony import */ var _svg_flag_cif_me_svg__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ../svg/flag/cif-me.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-me.svg");
/* harmony import */ var _svg_flag_cif_ma_svg__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ../svg/flag/cif-ma.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ma.svg");
/* harmony import */ var _svg_flag_cif_mz_svg__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ../svg/flag/cif-mz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mz.svg");
/* harmony import */ var _svg_flag_cif_mm_svg__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ../svg/flag/cif-mm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-mm.svg");
/* harmony import */ var _svg_flag_cif_na_svg__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ../svg/flag/cif-na.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-na.svg");
/* harmony import */ var _svg_flag_cif_nr_svg__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ../svg/flag/cif-nr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-nr.svg");
/* harmony import */ var _svg_flag_cif_np_svg__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ../svg/flag/cif-np.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-np.svg");
/* harmony import */ var _svg_flag_cif_nl_svg__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ../svg/flag/cif-nl.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-nl.svg");
/* harmony import */ var _svg_flag_cif_nz_svg__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ../svg/flag/cif-nz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-nz.svg");
/* harmony import */ var _svg_flag_cif_ni_svg__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ../svg/flag/cif-ni.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ni.svg");
/* harmony import */ var _svg_flag_cif_ne_svg__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ../svg/flag/cif-ne.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ne.svg");
/* harmony import */ var _svg_flag_cif_ng_svg__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ../svg/flag/cif-ng.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ng.svg");
/* harmony import */ var _svg_flag_cif_nu_svg__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ../svg/flag/cif-nu.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-nu.svg");
/* harmony import */ var _svg_flag_cif_no_svg__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ../svg/flag/cif-no.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-no.svg");
/* harmony import */ var _svg_flag_cif_om_svg__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ../svg/flag/cif-om.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-om.svg");
/* harmony import */ var _svg_flag_cif_pk_svg__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ../svg/flag/cif-pk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pk.svg");
/* harmony import */ var _svg_flag_cif_pw_svg__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ../svg/flag/cif-pw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pw.svg");
/* harmony import */ var _svg_flag_cif_pa_svg__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ../svg/flag/cif-pa.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pa.svg");
/* harmony import */ var _svg_flag_cif_pg_svg__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ../svg/flag/cif-pg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pg.svg");
/* harmony import */ var _svg_flag_cif_py_svg__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ../svg/flag/cif-py.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-py.svg");
/* harmony import */ var _svg_flag_cif_pe_svg__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ../svg/flag/cif-pe.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pe.svg");
/* harmony import */ var _svg_flag_cif_ph_svg__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ../svg/flag/cif-ph.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ph.svg");
/* harmony import */ var _svg_flag_cif_pl_svg__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ../svg/flag/cif-pl.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pl.svg");
/* harmony import */ var _svg_flag_cif_pt_svg__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ../svg/flag/cif-pt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-pt.svg");
/* harmony import */ var _svg_flag_cif_qa_svg__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ../svg/flag/cif-qa.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-qa.svg");
/* harmony import */ var _svg_flag_cif_ro_svg__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ../svg/flag/cif-ro.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ro.svg");
/* harmony import */ var _svg_flag_cif_ru_svg__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ../svg/flag/cif-ru.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ru.svg");
/* harmony import */ var _svg_flag_cif_rw_svg__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ../svg/flag/cif-rw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-rw.svg");
/* harmony import */ var _svg_flag_cif_kn_svg__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ../svg/flag/cif-kn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-kn.svg");
/* harmony import */ var _svg_flag_cif_lc_svg__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ../svg/flag/cif-lc.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lc.svg");
/* harmony import */ var _svg_flag_cif_vc_svg__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ../svg/flag/cif-vc.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-vc.svg");
/* harmony import */ var _svg_flag_cif_ws_svg__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ../svg/flag/cif-ws.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ws.svg");
/* harmony import */ var _svg_flag_cif_sm_svg__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ../svg/flag/cif-sm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sm.svg");
/* harmony import */ var _svg_flag_cif_st_svg__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ../svg/flag/cif-st.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-st.svg");
/* harmony import */ var _svg_flag_cif_sa_svg__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ../svg/flag/cif-sa.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sa.svg");
/* harmony import */ var _svg_flag_cif_sn_svg__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ../svg/flag/cif-sn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sn.svg");
/* harmony import */ var _svg_flag_cif_rs_svg__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ../svg/flag/cif-rs.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-rs.svg");
/* harmony import */ var _svg_flag_cif_sc_svg__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ../svg/flag/cif-sc.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sc.svg");
/* harmony import */ var _svg_flag_cif_sl_svg__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ../svg/flag/cif-sl.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sl.svg");
/* harmony import */ var _svg_flag_cif_sg_svg__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ../svg/flag/cif-sg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sg.svg");
/* harmony import */ var _svg_flag_cif_sk_svg__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ../svg/flag/cif-sk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sk.svg");
/* harmony import */ var _svg_flag_cif_si_svg__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ../svg/flag/cif-si.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-si.svg");
/* harmony import */ var _svg_flag_cif_sb_svg__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ../svg/flag/cif-sb.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sb.svg");
/* harmony import */ var _svg_flag_cif_so_svg__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ../svg/flag/cif-so.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-so.svg");
/* harmony import */ var _svg_flag_cif_za_svg__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ../svg/flag/cif-za.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-za.svg");
/* harmony import */ var _svg_flag_cif_es_svg__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ../svg/flag/cif-es.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-es.svg");
/* harmony import */ var _svg_flag_cif_lk_svg__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ../svg/flag/cif-lk.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-lk.svg");
/* harmony import */ var _svg_flag_cif_sd_svg__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ../svg/flag/cif-sd.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sd.svg");
/* harmony import */ var _svg_flag_cif_ss_svg__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ../svg/flag/cif-ss.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ss.svg");
/* harmony import */ var _svg_flag_cif_sr_svg__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ../svg/flag/cif-sr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sr.svg");
/* harmony import */ var _svg_flag_cif_sz_svg__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ../svg/flag/cif-sz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sz.svg");
/* harmony import */ var _svg_flag_cif_se_svg__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ../svg/flag/cif-se.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-se.svg");
/* harmony import */ var _svg_flag_cif_ch_svg__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ../svg/flag/cif-ch.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ch.svg");
/* harmony import */ var _svg_flag_cif_sy_svg__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ../svg/flag/cif-sy.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-sy.svg");
/* harmony import */ var _svg_flag_cif_tw_svg__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ../svg/flag/cif-tw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tw.svg");
/* harmony import */ var _svg_flag_cif_tj_svg__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ../svg/flag/cif-tj.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tj.svg");
/* harmony import */ var _svg_flag_cif_tz_svg__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ../svg/flag/cif-tz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tz.svg");
/* harmony import */ var _svg_flag_cif_th_svg__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ../svg/flag/cif-th.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-th.svg");
/* harmony import */ var _svg_flag_cif_tl_svg__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ../svg/flag/cif-tl.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tl.svg");
/* harmony import */ var _svg_flag_cif_tg_svg__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ../svg/flag/cif-tg.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tg.svg");
/* harmony import */ var _svg_flag_cif_to_svg__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ../svg/flag/cif-to.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-to.svg");
/* harmony import */ var _svg_flag_cif_tt_svg__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ../svg/flag/cif-tt.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tt.svg");
/* harmony import */ var _svg_flag_cif_tn_svg__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ../svg/flag/cif-tn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tn.svg");
/* harmony import */ var _svg_flag_cif_tr_svg__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ../svg/flag/cif-tr.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tr.svg");
/* harmony import */ var _svg_flag_cif_tm_svg__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ../svg/flag/cif-tm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tm.svg");
/* harmony import */ var _svg_flag_cif_tv_svg__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ../svg/flag/cif-tv.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-tv.svg");
/* harmony import */ var _svg_flag_cif_ug_svg__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ../svg/flag/cif-ug.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ug.svg");
/* harmony import */ var _svg_flag_cif_ua_svg__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ../svg/flag/cif-ua.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ua.svg");
/* harmony import */ var _svg_flag_cif_ae_svg__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ../svg/flag/cif-ae.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ae.svg");
/* harmony import */ var _svg_flag_cif_gb_svg__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ../svg/flag/cif-gb.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-gb.svg");
/* harmony import */ var _svg_flag_cif_us_svg__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ../svg/flag/cif-us.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-us.svg");
/* harmony import */ var _svg_flag_cif_uy_svg__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ../svg/flag/cif-uy.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-uy.svg");
/* harmony import */ var _svg_flag_cif_uz_svg__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ../svg/flag/cif-uz.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-uz.svg");
/* harmony import */ var _svg_flag_cif_ve_svg__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ../svg/flag/cif-ve.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ve.svg");
/* harmony import */ var _svg_flag_cif_vn_svg__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ../svg/flag/cif-vn.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-vn.svg");
/* harmony import */ var _svg_flag_cif_ye_svg__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ../svg/flag/cif-ye.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-ye.svg");
/* harmony import */ var _svg_flag_cif_zm_svg__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ../svg/flag/cif-zm.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-zm.svg");
/* harmony import */ var _svg_flag_cif_zw_svg__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ../svg/flag/cif-zw.svg */ "./public/vendors/@coreui/icons/svg/flag/cif-zw.svg");
// Imports
;







































































































































































































var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_af_svg__WEBPACK_IMPORTED_MODULE_3__.default);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_al_svg__WEBPACK_IMPORTED_MODULE_4__.default);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_dz_svg__WEBPACK_IMPORTED_MODULE_5__.default);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ad_svg__WEBPACK_IMPORTED_MODULE_6__.default);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ao_svg__WEBPACK_IMPORTED_MODULE_7__.default);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ag_svg__WEBPACK_IMPORTED_MODULE_8__.default);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ar_svg__WEBPACK_IMPORTED_MODULE_9__.default);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_am_svg__WEBPACK_IMPORTED_MODULE_10__.default);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_au_svg__WEBPACK_IMPORTED_MODULE_11__.default);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_at_svg__WEBPACK_IMPORTED_MODULE_12__.default);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_az_svg__WEBPACK_IMPORTED_MODULE_13__.default);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bs_svg__WEBPACK_IMPORTED_MODULE_14__.default);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bh_svg__WEBPACK_IMPORTED_MODULE_15__.default);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bd_svg__WEBPACK_IMPORTED_MODULE_16__.default);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bb_svg__WEBPACK_IMPORTED_MODULE_17__.default);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_by_svg__WEBPACK_IMPORTED_MODULE_18__.default);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_be_svg__WEBPACK_IMPORTED_MODULE_19__.default);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bz_svg__WEBPACK_IMPORTED_MODULE_20__.default);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bj_svg__WEBPACK_IMPORTED_MODULE_21__.default);
var ___CSS_LOADER_URL_REPLACEMENT_19___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bt_svg__WEBPACK_IMPORTED_MODULE_22__.default);
var ___CSS_LOADER_URL_REPLACEMENT_20___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bo_svg__WEBPACK_IMPORTED_MODULE_23__.default);
var ___CSS_LOADER_URL_REPLACEMENT_21___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ba_svg__WEBPACK_IMPORTED_MODULE_24__.default);
var ___CSS_LOADER_URL_REPLACEMENT_22___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bw_svg__WEBPACK_IMPORTED_MODULE_25__.default);
var ___CSS_LOADER_URL_REPLACEMENT_23___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_br_svg__WEBPACK_IMPORTED_MODULE_26__.default);
var ___CSS_LOADER_URL_REPLACEMENT_24___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bn_svg__WEBPACK_IMPORTED_MODULE_27__.default);
var ___CSS_LOADER_URL_REPLACEMENT_25___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bg_svg__WEBPACK_IMPORTED_MODULE_28__.default);
var ___CSS_LOADER_URL_REPLACEMENT_26___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bf_svg__WEBPACK_IMPORTED_MODULE_29__.default);
var ___CSS_LOADER_URL_REPLACEMENT_27___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_bi_svg__WEBPACK_IMPORTED_MODULE_30__.default);
var ___CSS_LOADER_URL_REPLACEMENT_28___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kh_svg__WEBPACK_IMPORTED_MODULE_31__.default);
var ___CSS_LOADER_URL_REPLACEMENT_29___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cm_svg__WEBPACK_IMPORTED_MODULE_32__.default);
var ___CSS_LOADER_URL_REPLACEMENT_30___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ca_svg__WEBPACK_IMPORTED_MODULE_33__.default);
var ___CSS_LOADER_URL_REPLACEMENT_31___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cv_svg__WEBPACK_IMPORTED_MODULE_34__.default);
var ___CSS_LOADER_URL_REPLACEMENT_32___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cf_svg__WEBPACK_IMPORTED_MODULE_35__.default);
var ___CSS_LOADER_URL_REPLACEMENT_33___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_td_svg__WEBPACK_IMPORTED_MODULE_36__.default);
var ___CSS_LOADER_URL_REPLACEMENT_34___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cl_svg__WEBPACK_IMPORTED_MODULE_37__.default);
var ___CSS_LOADER_URL_REPLACEMENT_35___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cn_svg__WEBPACK_IMPORTED_MODULE_38__.default);
var ___CSS_LOADER_URL_REPLACEMENT_36___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_co_svg__WEBPACK_IMPORTED_MODULE_39__.default);
var ___CSS_LOADER_URL_REPLACEMENT_37___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_km_svg__WEBPACK_IMPORTED_MODULE_40__.default);
var ___CSS_LOADER_URL_REPLACEMENT_38___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cg_svg__WEBPACK_IMPORTED_MODULE_41__.default);
var ___CSS_LOADER_URL_REPLACEMENT_39___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cd_svg__WEBPACK_IMPORTED_MODULE_42__.default);
var ___CSS_LOADER_URL_REPLACEMENT_40___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cr_svg__WEBPACK_IMPORTED_MODULE_43__.default);
var ___CSS_LOADER_URL_REPLACEMENT_41___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ci_svg__WEBPACK_IMPORTED_MODULE_44__.default);
var ___CSS_LOADER_URL_REPLACEMENT_42___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_hr_svg__WEBPACK_IMPORTED_MODULE_45__.default);
var ___CSS_LOADER_URL_REPLACEMENT_43___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cu_svg__WEBPACK_IMPORTED_MODULE_46__.default);
var ___CSS_LOADER_URL_REPLACEMENT_44___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cy_svg__WEBPACK_IMPORTED_MODULE_47__.default);
var ___CSS_LOADER_URL_REPLACEMENT_45___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_cz_svg__WEBPACK_IMPORTED_MODULE_48__.default);
var ___CSS_LOADER_URL_REPLACEMENT_46___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_dk_svg__WEBPACK_IMPORTED_MODULE_49__.default);
var ___CSS_LOADER_URL_REPLACEMENT_47___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_dj_svg__WEBPACK_IMPORTED_MODULE_50__.default);
var ___CSS_LOADER_URL_REPLACEMENT_48___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_dm_svg__WEBPACK_IMPORTED_MODULE_51__.default);
var ___CSS_LOADER_URL_REPLACEMENT_49___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_do_svg__WEBPACK_IMPORTED_MODULE_52__.default);
var ___CSS_LOADER_URL_REPLACEMENT_50___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ec_svg__WEBPACK_IMPORTED_MODULE_53__.default);
var ___CSS_LOADER_URL_REPLACEMENT_51___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_eg_svg__WEBPACK_IMPORTED_MODULE_54__.default);
var ___CSS_LOADER_URL_REPLACEMENT_52___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sv_svg__WEBPACK_IMPORTED_MODULE_55__.default);
var ___CSS_LOADER_URL_REPLACEMENT_53___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gq_svg__WEBPACK_IMPORTED_MODULE_56__.default);
var ___CSS_LOADER_URL_REPLACEMENT_54___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_er_svg__WEBPACK_IMPORTED_MODULE_57__.default);
var ___CSS_LOADER_URL_REPLACEMENT_55___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ee_svg__WEBPACK_IMPORTED_MODULE_58__.default);
var ___CSS_LOADER_URL_REPLACEMENT_56___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_et_svg__WEBPACK_IMPORTED_MODULE_59__.default);
var ___CSS_LOADER_URL_REPLACEMENT_57___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_fj_svg__WEBPACK_IMPORTED_MODULE_60__.default);
var ___CSS_LOADER_URL_REPLACEMENT_58___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_fi_svg__WEBPACK_IMPORTED_MODULE_61__.default);
var ___CSS_LOADER_URL_REPLACEMENT_59___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_fr_svg__WEBPACK_IMPORTED_MODULE_62__.default);
var ___CSS_LOADER_URL_REPLACEMENT_60___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ga_svg__WEBPACK_IMPORTED_MODULE_63__.default);
var ___CSS_LOADER_URL_REPLACEMENT_61___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gm_svg__WEBPACK_IMPORTED_MODULE_64__.default);
var ___CSS_LOADER_URL_REPLACEMENT_62___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ge_svg__WEBPACK_IMPORTED_MODULE_65__.default);
var ___CSS_LOADER_URL_REPLACEMENT_63___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_de_svg__WEBPACK_IMPORTED_MODULE_66__.default);
var ___CSS_LOADER_URL_REPLACEMENT_64___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gh_svg__WEBPACK_IMPORTED_MODULE_67__.default);
var ___CSS_LOADER_URL_REPLACEMENT_65___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gr_svg__WEBPACK_IMPORTED_MODULE_68__.default);
var ___CSS_LOADER_URL_REPLACEMENT_66___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gd_svg__WEBPACK_IMPORTED_MODULE_69__.default);
var ___CSS_LOADER_URL_REPLACEMENT_67___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gt_svg__WEBPACK_IMPORTED_MODULE_70__.default);
var ___CSS_LOADER_URL_REPLACEMENT_68___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gn_svg__WEBPACK_IMPORTED_MODULE_71__.default);
var ___CSS_LOADER_URL_REPLACEMENT_69___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gw_svg__WEBPACK_IMPORTED_MODULE_72__.default);
var ___CSS_LOADER_URL_REPLACEMENT_70___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gy_svg__WEBPACK_IMPORTED_MODULE_73__.default);
var ___CSS_LOADER_URL_REPLACEMENT_71___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_hk_svg__WEBPACK_IMPORTED_MODULE_74__.default);
var ___CSS_LOADER_URL_REPLACEMENT_72___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ht_svg__WEBPACK_IMPORTED_MODULE_75__.default);
var ___CSS_LOADER_URL_REPLACEMENT_73___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_va_svg__WEBPACK_IMPORTED_MODULE_76__.default);
var ___CSS_LOADER_URL_REPLACEMENT_74___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_hn_svg__WEBPACK_IMPORTED_MODULE_77__.default);
var ___CSS_LOADER_URL_REPLACEMENT_75___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_xk_svg__WEBPACK_IMPORTED_MODULE_78__.default);
var ___CSS_LOADER_URL_REPLACEMENT_76___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_hu_svg__WEBPACK_IMPORTED_MODULE_79__.default);
var ___CSS_LOADER_URL_REPLACEMENT_77___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_is_svg__WEBPACK_IMPORTED_MODULE_80__.default);
var ___CSS_LOADER_URL_REPLACEMENT_78___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_in_svg__WEBPACK_IMPORTED_MODULE_81__.default);
var ___CSS_LOADER_URL_REPLACEMENT_79___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_id_svg__WEBPACK_IMPORTED_MODULE_82__.default);
var ___CSS_LOADER_URL_REPLACEMENT_80___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ir_svg__WEBPACK_IMPORTED_MODULE_83__.default);
var ___CSS_LOADER_URL_REPLACEMENT_81___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_iq_svg__WEBPACK_IMPORTED_MODULE_84__.default);
var ___CSS_LOADER_URL_REPLACEMENT_82___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ie_svg__WEBPACK_IMPORTED_MODULE_85__.default);
var ___CSS_LOADER_URL_REPLACEMENT_83___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_il_svg__WEBPACK_IMPORTED_MODULE_86__.default);
var ___CSS_LOADER_URL_REPLACEMENT_84___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_it_svg__WEBPACK_IMPORTED_MODULE_87__.default);
var ___CSS_LOADER_URL_REPLACEMENT_85___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_jm_svg__WEBPACK_IMPORTED_MODULE_88__.default);
var ___CSS_LOADER_URL_REPLACEMENT_86___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_jp_svg__WEBPACK_IMPORTED_MODULE_89__.default);
var ___CSS_LOADER_URL_REPLACEMENT_87___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_jo_svg__WEBPACK_IMPORTED_MODULE_90__.default);
var ___CSS_LOADER_URL_REPLACEMENT_88___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kz_svg__WEBPACK_IMPORTED_MODULE_91__.default);
var ___CSS_LOADER_URL_REPLACEMENT_89___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ke_svg__WEBPACK_IMPORTED_MODULE_92__.default);
var ___CSS_LOADER_URL_REPLACEMENT_90___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ki_svg__WEBPACK_IMPORTED_MODULE_93__.default);
var ___CSS_LOADER_URL_REPLACEMENT_91___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kr_svg__WEBPACK_IMPORTED_MODULE_94__.default);
var ___CSS_LOADER_URL_REPLACEMENT_92___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kp_svg__WEBPACK_IMPORTED_MODULE_95__.default);
var ___CSS_LOADER_URL_REPLACEMENT_93___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kw_svg__WEBPACK_IMPORTED_MODULE_96__.default);
var ___CSS_LOADER_URL_REPLACEMENT_94___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kg_svg__WEBPACK_IMPORTED_MODULE_97__.default);
var ___CSS_LOADER_URL_REPLACEMENT_95___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_la_svg__WEBPACK_IMPORTED_MODULE_98__.default);
var ___CSS_LOADER_URL_REPLACEMENT_96___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lv_svg__WEBPACK_IMPORTED_MODULE_99__.default);
var ___CSS_LOADER_URL_REPLACEMENT_97___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lb_svg__WEBPACK_IMPORTED_MODULE_100__.default);
var ___CSS_LOADER_URL_REPLACEMENT_98___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ls_svg__WEBPACK_IMPORTED_MODULE_101__.default);
var ___CSS_LOADER_URL_REPLACEMENT_99___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lr_svg__WEBPACK_IMPORTED_MODULE_102__.default);
var ___CSS_LOADER_URL_REPLACEMENT_100___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ly_svg__WEBPACK_IMPORTED_MODULE_103__.default);
var ___CSS_LOADER_URL_REPLACEMENT_101___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_li_svg__WEBPACK_IMPORTED_MODULE_104__.default);
var ___CSS_LOADER_URL_REPLACEMENT_102___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lt_svg__WEBPACK_IMPORTED_MODULE_105__.default);
var ___CSS_LOADER_URL_REPLACEMENT_103___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lu_svg__WEBPACK_IMPORTED_MODULE_106__.default);
var ___CSS_LOADER_URL_REPLACEMENT_104___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mk_svg__WEBPACK_IMPORTED_MODULE_107__.default);
var ___CSS_LOADER_URL_REPLACEMENT_105___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mg_svg__WEBPACK_IMPORTED_MODULE_108__.default);
var ___CSS_LOADER_URL_REPLACEMENT_106___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mw_svg__WEBPACK_IMPORTED_MODULE_109__.default);
var ___CSS_LOADER_URL_REPLACEMENT_107___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_my_svg__WEBPACK_IMPORTED_MODULE_110__.default);
var ___CSS_LOADER_URL_REPLACEMENT_108___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mv_svg__WEBPACK_IMPORTED_MODULE_111__.default);
var ___CSS_LOADER_URL_REPLACEMENT_109___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ml_svg__WEBPACK_IMPORTED_MODULE_112__.default);
var ___CSS_LOADER_URL_REPLACEMENT_110___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mt_svg__WEBPACK_IMPORTED_MODULE_113__.default);
var ___CSS_LOADER_URL_REPLACEMENT_111___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mh_svg__WEBPACK_IMPORTED_MODULE_114__.default);
var ___CSS_LOADER_URL_REPLACEMENT_112___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mr_svg__WEBPACK_IMPORTED_MODULE_115__.default);
var ___CSS_LOADER_URL_REPLACEMENT_113___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mu_svg__WEBPACK_IMPORTED_MODULE_116__.default);
var ___CSS_LOADER_URL_REPLACEMENT_114___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mx_svg__WEBPACK_IMPORTED_MODULE_117__.default);
var ___CSS_LOADER_URL_REPLACEMENT_115___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_fm_svg__WEBPACK_IMPORTED_MODULE_118__.default);
var ___CSS_LOADER_URL_REPLACEMENT_116___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_md_svg__WEBPACK_IMPORTED_MODULE_119__.default);
var ___CSS_LOADER_URL_REPLACEMENT_117___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mc_svg__WEBPACK_IMPORTED_MODULE_120__.default);
var ___CSS_LOADER_URL_REPLACEMENT_118___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mn_svg__WEBPACK_IMPORTED_MODULE_121__.default);
var ___CSS_LOADER_URL_REPLACEMENT_119___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_me_svg__WEBPACK_IMPORTED_MODULE_122__.default);
var ___CSS_LOADER_URL_REPLACEMENT_120___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ma_svg__WEBPACK_IMPORTED_MODULE_123__.default);
var ___CSS_LOADER_URL_REPLACEMENT_121___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mz_svg__WEBPACK_IMPORTED_MODULE_124__.default);
var ___CSS_LOADER_URL_REPLACEMENT_122___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_mm_svg__WEBPACK_IMPORTED_MODULE_125__.default);
var ___CSS_LOADER_URL_REPLACEMENT_123___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_na_svg__WEBPACK_IMPORTED_MODULE_126__.default);
var ___CSS_LOADER_URL_REPLACEMENT_124___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_nr_svg__WEBPACK_IMPORTED_MODULE_127__.default);
var ___CSS_LOADER_URL_REPLACEMENT_125___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_np_svg__WEBPACK_IMPORTED_MODULE_128__.default);
var ___CSS_LOADER_URL_REPLACEMENT_126___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_nl_svg__WEBPACK_IMPORTED_MODULE_129__.default);
var ___CSS_LOADER_URL_REPLACEMENT_127___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_nz_svg__WEBPACK_IMPORTED_MODULE_130__.default);
var ___CSS_LOADER_URL_REPLACEMENT_128___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ni_svg__WEBPACK_IMPORTED_MODULE_131__.default);
var ___CSS_LOADER_URL_REPLACEMENT_129___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ne_svg__WEBPACK_IMPORTED_MODULE_132__.default);
var ___CSS_LOADER_URL_REPLACEMENT_130___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ng_svg__WEBPACK_IMPORTED_MODULE_133__.default);
var ___CSS_LOADER_URL_REPLACEMENT_131___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_nu_svg__WEBPACK_IMPORTED_MODULE_134__.default);
var ___CSS_LOADER_URL_REPLACEMENT_132___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_no_svg__WEBPACK_IMPORTED_MODULE_135__.default);
var ___CSS_LOADER_URL_REPLACEMENT_133___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_om_svg__WEBPACK_IMPORTED_MODULE_136__.default);
var ___CSS_LOADER_URL_REPLACEMENT_134___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pk_svg__WEBPACK_IMPORTED_MODULE_137__.default);
var ___CSS_LOADER_URL_REPLACEMENT_135___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pw_svg__WEBPACK_IMPORTED_MODULE_138__.default);
var ___CSS_LOADER_URL_REPLACEMENT_136___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pa_svg__WEBPACK_IMPORTED_MODULE_139__.default);
var ___CSS_LOADER_URL_REPLACEMENT_137___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pg_svg__WEBPACK_IMPORTED_MODULE_140__.default);
var ___CSS_LOADER_URL_REPLACEMENT_138___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_py_svg__WEBPACK_IMPORTED_MODULE_141__.default);
var ___CSS_LOADER_URL_REPLACEMENT_139___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pe_svg__WEBPACK_IMPORTED_MODULE_142__.default);
var ___CSS_LOADER_URL_REPLACEMENT_140___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ph_svg__WEBPACK_IMPORTED_MODULE_143__.default);
var ___CSS_LOADER_URL_REPLACEMENT_141___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pl_svg__WEBPACK_IMPORTED_MODULE_144__.default);
var ___CSS_LOADER_URL_REPLACEMENT_142___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_pt_svg__WEBPACK_IMPORTED_MODULE_145__.default);
var ___CSS_LOADER_URL_REPLACEMENT_143___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_qa_svg__WEBPACK_IMPORTED_MODULE_146__.default);
var ___CSS_LOADER_URL_REPLACEMENT_144___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ro_svg__WEBPACK_IMPORTED_MODULE_147__.default);
var ___CSS_LOADER_URL_REPLACEMENT_145___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ru_svg__WEBPACK_IMPORTED_MODULE_148__.default);
var ___CSS_LOADER_URL_REPLACEMENT_146___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_rw_svg__WEBPACK_IMPORTED_MODULE_149__.default);
var ___CSS_LOADER_URL_REPLACEMENT_147___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_kn_svg__WEBPACK_IMPORTED_MODULE_150__.default);
var ___CSS_LOADER_URL_REPLACEMENT_148___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lc_svg__WEBPACK_IMPORTED_MODULE_151__.default);
var ___CSS_LOADER_URL_REPLACEMENT_149___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_vc_svg__WEBPACK_IMPORTED_MODULE_152__.default);
var ___CSS_LOADER_URL_REPLACEMENT_150___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ws_svg__WEBPACK_IMPORTED_MODULE_153__.default);
var ___CSS_LOADER_URL_REPLACEMENT_151___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sm_svg__WEBPACK_IMPORTED_MODULE_154__.default);
var ___CSS_LOADER_URL_REPLACEMENT_152___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_st_svg__WEBPACK_IMPORTED_MODULE_155__.default);
var ___CSS_LOADER_URL_REPLACEMENT_153___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sa_svg__WEBPACK_IMPORTED_MODULE_156__.default);
var ___CSS_LOADER_URL_REPLACEMENT_154___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sn_svg__WEBPACK_IMPORTED_MODULE_157__.default);
var ___CSS_LOADER_URL_REPLACEMENT_155___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_rs_svg__WEBPACK_IMPORTED_MODULE_158__.default);
var ___CSS_LOADER_URL_REPLACEMENT_156___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sc_svg__WEBPACK_IMPORTED_MODULE_159__.default);
var ___CSS_LOADER_URL_REPLACEMENT_157___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sl_svg__WEBPACK_IMPORTED_MODULE_160__.default);
var ___CSS_LOADER_URL_REPLACEMENT_158___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sg_svg__WEBPACK_IMPORTED_MODULE_161__.default);
var ___CSS_LOADER_URL_REPLACEMENT_159___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sk_svg__WEBPACK_IMPORTED_MODULE_162__.default);
var ___CSS_LOADER_URL_REPLACEMENT_160___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_si_svg__WEBPACK_IMPORTED_MODULE_163__.default);
var ___CSS_LOADER_URL_REPLACEMENT_161___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sb_svg__WEBPACK_IMPORTED_MODULE_164__.default);
var ___CSS_LOADER_URL_REPLACEMENT_162___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_so_svg__WEBPACK_IMPORTED_MODULE_165__.default);
var ___CSS_LOADER_URL_REPLACEMENT_163___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_za_svg__WEBPACK_IMPORTED_MODULE_166__.default);
var ___CSS_LOADER_URL_REPLACEMENT_164___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_es_svg__WEBPACK_IMPORTED_MODULE_167__.default);
var ___CSS_LOADER_URL_REPLACEMENT_165___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_lk_svg__WEBPACK_IMPORTED_MODULE_168__.default);
var ___CSS_LOADER_URL_REPLACEMENT_166___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sd_svg__WEBPACK_IMPORTED_MODULE_169__.default);
var ___CSS_LOADER_URL_REPLACEMENT_167___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ss_svg__WEBPACK_IMPORTED_MODULE_170__.default);
var ___CSS_LOADER_URL_REPLACEMENT_168___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sr_svg__WEBPACK_IMPORTED_MODULE_171__.default);
var ___CSS_LOADER_URL_REPLACEMENT_169___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sz_svg__WEBPACK_IMPORTED_MODULE_172__.default);
var ___CSS_LOADER_URL_REPLACEMENT_170___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_se_svg__WEBPACK_IMPORTED_MODULE_173__.default);
var ___CSS_LOADER_URL_REPLACEMENT_171___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ch_svg__WEBPACK_IMPORTED_MODULE_174__.default);
var ___CSS_LOADER_URL_REPLACEMENT_172___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_sy_svg__WEBPACK_IMPORTED_MODULE_175__.default);
var ___CSS_LOADER_URL_REPLACEMENT_173___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tw_svg__WEBPACK_IMPORTED_MODULE_176__.default);
var ___CSS_LOADER_URL_REPLACEMENT_174___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tj_svg__WEBPACK_IMPORTED_MODULE_177__.default);
var ___CSS_LOADER_URL_REPLACEMENT_175___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tz_svg__WEBPACK_IMPORTED_MODULE_178__.default);
var ___CSS_LOADER_URL_REPLACEMENT_176___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_th_svg__WEBPACK_IMPORTED_MODULE_179__.default);
var ___CSS_LOADER_URL_REPLACEMENT_177___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tl_svg__WEBPACK_IMPORTED_MODULE_180__.default);
var ___CSS_LOADER_URL_REPLACEMENT_178___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tg_svg__WEBPACK_IMPORTED_MODULE_181__.default);
var ___CSS_LOADER_URL_REPLACEMENT_179___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_to_svg__WEBPACK_IMPORTED_MODULE_182__.default);
var ___CSS_LOADER_URL_REPLACEMENT_180___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tt_svg__WEBPACK_IMPORTED_MODULE_183__.default);
var ___CSS_LOADER_URL_REPLACEMENT_181___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tn_svg__WEBPACK_IMPORTED_MODULE_184__.default);
var ___CSS_LOADER_URL_REPLACEMENT_182___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tr_svg__WEBPACK_IMPORTED_MODULE_185__.default);
var ___CSS_LOADER_URL_REPLACEMENT_183___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tm_svg__WEBPACK_IMPORTED_MODULE_186__.default);
var ___CSS_LOADER_URL_REPLACEMENT_184___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_tv_svg__WEBPACK_IMPORTED_MODULE_187__.default);
var ___CSS_LOADER_URL_REPLACEMENT_185___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ug_svg__WEBPACK_IMPORTED_MODULE_188__.default);
var ___CSS_LOADER_URL_REPLACEMENT_186___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ua_svg__WEBPACK_IMPORTED_MODULE_189__.default);
var ___CSS_LOADER_URL_REPLACEMENT_187___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ae_svg__WEBPACK_IMPORTED_MODULE_190__.default);
var ___CSS_LOADER_URL_REPLACEMENT_188___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_gb_svg__WEBPACK_IMPORTED_MODULE_191__.default);
var ___CSS_LOADER_URL_REPLACEMENT_189___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_us_svg__WEBPACK_IMPORTED_MODULE_192__.default);
var ___CSS_LOADER_URL_REPLACEMENT_190___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_uy_svg__WEBPACK_IMPORTED_MODULE_193__.default);
var ___CSS_LOADER_URL_REPLACEMENT_191___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_uz_svg__WEBPACK_IMPORTED_MODULE_194__.default);
var ___CSS_LOADER_URL_REPLACEMENT_192___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ve_svg__WEBPACK_IMPORTED_MODULE_195__.default);
var ___CSS_LOADER_URL_REPLACEMENT_193___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_vn_svg__WEBPACK_IMPORTED_MODULE_196__.default);
var ___CSS_LOADER_URL_REPLACEMENT_194___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_ye_svg__WEBPACK_IMPORTED_MODULE_197__.default);
var ___CSS_LOADER_URL_REPLACEMENT_195___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_zm_svg__WEBPACK_IMPORTED_MODULE_198__.default);
var ___CSS_LOADER_URL_REPLACEMENT_196___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_svg_flag_cif_zw_svg__WEBPACK_IMPORTED_MODULE_199__.default);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";/*!\n * CoreUI Icons - Flag Icons\n * @version v1.0.1\n * @link https://coreui.io/icons/flag/\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under CC0 1.0 Universal\n */[class*=\" cif-\"],[class^=cif-]{background-size:contain;background-position:50%;background-repeat:no-repeat;position:relative;display:inline-block;width:1.33333333em;line-height:1em}.cif-af{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ")}.cif-al{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ")}.cif-dz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ")}.cif-ad{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ")}.cif-ao{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ")}.cif-ag{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ")}.cif-ar{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ")}.cif-am{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ")}.cif-au{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ")}.cif-at{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ")}.cif-az{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ")}.cif-bs{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ")}.cif-bh{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ")}.cif-bd{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ")}.cif-bb{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ")}.cif-by{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ")}.cif-be{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_16___ + ")}.cif-bz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_17___ + ")}.cif-bj{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_18___ + ")}.cif-bt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_19___ + ")}.cif-bo{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_20___ + ")}.cif-ba{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_21___ + ")}.cif-bw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_22___ + ")}.cif-br{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_23___ + ")}.cif-bn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_24___ + ")}.cif-bg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_25___ + ")}.cif-bf{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_26___ + ")}.cif-bi{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_27___ + ")}.cif-kh{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_28___ + ")}.cif-cm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_29___ + ")}.cif-ca{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_30___ + ")}.cif-cv{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_31___ + ")}.cif-cf{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_32___ + ")}.cif-td{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_33___ + ")}.cif-cl{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_34___ + ")}.cif-cn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_35___ + ")}.cif-co{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_36___ + ")}.cif-km{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_37___ + ")}.cif-cg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_38___ + ")}.cif-cd{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_39___ + ")}.cif-cr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_40___ + ")}.cif-ci{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_41___ + ")}.cif-hr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_42___ + ")}.cif-cu{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_43___ + ")}.cif-cy{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_44___ + ")}.cif-cz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_45___ + ")}.cif-dk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_46___ + ")}.cif-dj{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_47___ + ")}.cif-dm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_48___ + ")}.cif-do{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_49___ + ")}.cif-ec{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_50___ + ")}.cif-eg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_51___ + ")}.cif-sv{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_52___ + ")}.cif-gq{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_53___ + ")}.cif-er{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_54___ + ")}.cif-ee{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_55___ + ")}.cif-et{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_56___ + ")}.cif-fj{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_57___ + ")}.cif-fi{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_58___ + ")}.cif-fr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_59___ + ")}.cif-ga{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_60___ + ")}.cif-gm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_61___ + ")}.cif-ge{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_62___ + ")}.cif-de{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_63___ + ")}.cif-gh{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_64___ + ")}.cif-gr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_65___ + ")}.cif-gd{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_66___ + ")}.cif-gt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_67___ + ")}.cif-gn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_68___ + ")}.cif-gw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_69___ + ")}.cif-gy{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_70___ + ")}.cif-hk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_71___ + ")}.cif-ht{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_72___ + ")}.cif-va{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_73___ + ")}.cif-hn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_74___ + ")}.cif-xk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_75___ + ")}.cif-hu{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_76___ + ")}.cif-is{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_77___ + ")}.cif-in{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_78___ + ")}.cif-id{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_79___ + ")}.cif-ir{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_80___ + ")}.cif-iq{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_81___ + ")}.cif-ie{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_82___ + ")}.cif-il{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_83___ + ")}.cif-it{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_84___ + ")}.cif-jm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_85___ + ")}.cif-jp{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_86___ + ")}.cif-jo{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_87___ + ")}.cif-kz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_88___ + ")}.cif-ke{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_89___ + ")}.cif-ki{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_90___ + ")}.cif-kr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_91___ + ")}.cif-kp{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_92___ + ")}.cif-kw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_93___ + ")}.cif-kg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_94___ + ")}.cif-la{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_95___ + ")}.cif-lv{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_96___ + ")}.cif-lb{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_97___ + ")}.cif-ls{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_98___ + ")}.cif-lr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_99___ + ")}.cif-ly{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_100___ + ")}.cif-li{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_101___ + ")}.cif-lt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_102___ + ")}.cif-lu{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_103___ + ")}.cif-mk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_104___ + ")}.cif-mg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_105___ + ")}.cif-mw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_106___ + ")}.cif-my{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_107___ + ")}.cif-mv{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_108___ + ")}.cif-ml{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_109___ + ")}.cif-mt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_110___ + ")}.cif-mh{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_111___ + ")}.cif-mr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_112___ + ")}.cif-mu{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_113___ + ")}.cif-mx{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_114___ + ")}.cif-fm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_115___ + ")}.cif-md{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_116___ + ")}.cif-mc{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_117___ + ")}.cif-mn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_118___ + ")}.cif-me{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_119___ + ")}.cif-ma{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_120___ + ")}.cif-mz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_121___ + ")}.cif-mm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_122___ + ")}.cif-na{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_123___ + ")}.cif-nr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_124___ + ")}.cif-np{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_125___ + ")}.cif-nl{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_126___ + ")}.cif-nz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_127___ + ")}.cif-ni{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_128___ + ")}.cif-ne{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_129___ + ")}.cif-ng{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_130___ + ")}.cif-nu{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_131___ + ")}.cif-no{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_132___ + ")}.cif-om{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_133___ + ")}.cif-pk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_134___ + ")}.cif-pw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_135___ + ")}.cif-pa{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_136___ + ")}.cif-pg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_137___ + ")}.cif-py{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_138___ + ")}.cif-pe{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_139___ + ")}.cif-ph{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_140___ + ")}.cif-pl{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_141___ + ")}.cif-pt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_142___ + ")}.cif-qa{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_143___ + ")}.cif-ro{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_144___ + ")}.cif-ru{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_145___ + ")}.cif-rw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_146___ + ")}.cif-kn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_147___ + ")}.cif-lc{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_148___ + ")}.cif-vc{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_149___ + ")}.cif-ws{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_150___ + ")}.cif-sm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_151___ + ")}.cif-st{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_152___ + ")}.cif-sa{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_153___ + ")}.cif-sn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_154___ + ")}.cif-rs{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_155___ + ")}.cif-sc{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_156___ + ")}.cif-sl{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_157___ + ")}.cif-sg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_158___ + ")}.cif-sk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_159___ + ")}.cif-si{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_160___ + ")}.cif-sb{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_161___ + ")}.cif-so{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_162___ + ")}.cif-za{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_163___ + ")}.cif-es{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_164___ + ")}.cif-lk{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_165___ + ")}.cif-sd{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_166___ + ")}.cif-ss{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_167___ + ")}.cif-sr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_168___ + ")}.cif-sz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_169___ + ")}.cif-se{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_170___ + ")}.cif-ch{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_171___ + ")}.cif-sy{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_172___ + ")}.cif-tw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_173___ + ")}.cif-tj{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_174___ + ")}.cif-tz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_175___ + ")}.cif-th{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_176___ + ")}.cif-tl{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_177___ + ")}.cif-tg{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_178___ + ")}.cif-to{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_179___ + ")}.cif-tt{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_180___ + ")}.cif-tn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_181___ + ")}.cif-tr{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_182___ + ")}.cif-tm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_183___ + ")}.cif-tv{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_184___ + ")}.cif-ug{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_185___ + ")}.cif-ua{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_186___ + ")}.cif-ae{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_187___ + ")}.cif-gb{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_188___ + ")}.cif-us{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_189___ + ")}.cif-uy{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_190___ + ")}.cif-uz{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_191___ + ")}.cif-ve{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_192___ + ")}.cif-vn{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_193___ + ")}.cif-ye{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_194___ + ")}.cif-zm{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_195___ + ")}.cif-zw{background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_196___ + ")}\n/*# sourceMappingURL=flag.min.css.map */", "",{"version":3,"sources":["webpack://./public/vendors/@coreui/icons/css/flag.min.css"],"names":[],"mappings":"AAAA,gBAAgB,CAAC;;;;;;EAMf,CAAC,+BAA+B,uBAAuB,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,wDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yDAA4C,CAAC,QAAQ,yh4U,uCAAuC","sourcesContent":["@charset \"UTF-8\";/*!\n * CoreUI Icons - Flag Icons\n * @version v1.0.1\n * @link https://coreui.io/icons/flag/\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under CC0 1.0 Universal\n */[class*=\" cif-\"],[class^=cif-]{background-size:contain;background-position:50%;background-repeat:no-repeat;position:relative;display:inline-block;width:1.33333333em;line-height:1em}.cif-af{background-image:url(../svg/flag/cif-af.svg)}.cif-al{background-image:url(../svg/flag/cif-al.svg)}.cif-dz{background-image:url(../svg/flag/cif-dz.svg)}.cif-ad{background-image:url(../svg/flag/cif-ad.svg)}.cif-ao{background-image:url(../svg/flag/cif-ao.svg)}.cif-ag{background-image:url(../svg/flag/cif-ag.svg)}.cif-ar{background-image:url(../svg/flag/cif-ar.svg)}.cif-am{background-image:url(../svg/flag/cif-am.svg)}.cif-au{background-image:url(../svg/flag/cif-au.svg)}.cif-at{background-image:url(../svg/flag/cif-at.svg)}.cif-az{background-image:url(../svg/flag/cif-az.svg)}.cif-bs{background-image:url(../svg/flag/cif-bs.svg)}.cif-bh{background-image:url(../svg/flag/cif-bh.svg)}.cif-bd{background-image:url(../svg/flag/cif-bd.svg)}.cif-bb{background-image:url(../svg/flag/cif-bb.svg)}.cif-by{background-image:url(../svg/flag/cif-by.svg)}.cif-be{background-image:url(../svg/flag/cif-be.svg)}.cif-bz{background-image:url(../svg/flag/cif-bz.svg)}.cif-bj{background-image:url(../svg/flag/cif-bj.svg)}.cif-bt{background-image:url(../svg/flag/cif-bt.svg)}.cif-bo{background-image:url(../svg/flag/cif-bo.svg)}.cif-ba{background-image:url(../svg/flag/cif-ba.svg)}.cif-bw{background-image:url(../svg/flag/cif-bw.svg)}.cif-br{background-image:url(../svg/flag/cif-br.svg)}.cif-bn{background-image:url(../svg/flag/cif-bn.svg)}.cif-bg{background-image:url(../svg/flag/cif-bg.svg)}.cif-bf{background-image:url(../svg/flag/cif-bf.svg)}.cif-bi{background-image:url(../svg/flag/cif-bi.svg)}.cif-kh{background-image:url(../svg/flag/cif-kh.svg)}.cif-cm{background-image:url(../svg/flag/cif-cm.svg)}.cif-ca{background-image:url(../svg/flag/cif-ca.svg)}.cif-cv{background-image:url(../svg/flag/cif-cv.svg)}.cif-cf{background-image:url(../svg/flag/cif-cf.svg)}.cif-td{background-image:url(../svg/flag/cif-td.svg)}.cif-cl{background-image:url(../svg/flag/cif-cl.svg)}.cif-cn{background-image:url(../svg/flag/cif-cn.svg)}.cif-co{background-image:url(../svg/flag/cif-co.svg)}.cif-km{background-image:url(../svg/flag/cif-km.svg)}.cif-cg{background-image:url(../svg/flag/cif-cg.svg)}.cif-cd{background-image:url(../svg/flag/cif-cd.svg)}.cif-cr{background-image:url(../svg/flag/cif-cr.svg)}.cif-ci{background-image:url(../svg/flag/cif-ci.svg)}.cif-hr{background-image:url(../svg/flag/cif-hr.svg)}.cif-cu{background-image:url(../svg/flag/cif-cu.svg)}.cif-cy{background-image:url(../svg/flag/cif-cy.svg)}.cif-cz{background-image:url(../svg/flag/cif-cz.svg)}.cif-dk{background-image:url(../svg/flag/cif-dk.svg)}.cif-dj{background-image:url(../svg/flag/cif-dj.svg)}.cif-dm{background-image:url(../svg/flag/cif-dm.svg)}.cif-do{background-image:url(../svg/flag/cif-do.svg)}.cif-ec{background-image:url(../svg/flag/cif-ec.svg)}.cif-eg{background-image:url(../svg/flag/cif-eg.svg)}.cif-sv{background-image:url(../svg/flag/cif-sv.svg)}.cif-gq{background-image:url(../svg/flag/cif-gq.svg)}.cif-er{background-image:url(../svg/flag/cif-er.svg)}.cif-ee{background-image:url(../svg/flag/cif-ee.svg)}.cif-et{background-image:url(../svg/flag/cif-et.svg)}.cif-fj{background-image:url(../svg/flag/cif-fj.svg)}.cif-fi{background-image:url(../svg/flag/cif-fi.svg)}.cif-fr{background-image:url(../svg/flag/cif-fr.svg)}.cif-ga{background-image:url(../svg/flag/cif-ga.svg)}.cif-gm{background-image:url(../svg/flag/cif-gm.svg)}.cif-ge{background-image:url(../svg/flag/cif-ge.svg)}.cif-de{background-image:url(../svg/flag/cif-de.svg)}.cif-gh{background-image:url(../svg/flag/cif-gh.svg)}.cif-gr{background-image:url(../svg/flag/cif-gr.svg)}.cif-gd{background-image:url(../svg/flag/cif-gd.svg)}.cif-gt{background-image:url(../svg/flag/cif-gt.svg)}.cif-gn{background-image:url(../svg/flag/cif-gn.svg)}.cif-gw{background-image:url(../svg/flag/cif-gw.svg)}.cif-gy{background-image:url(../svg/flag/cif-gy.svg)}.cif-hk{background-image:url(../svg/flag/cif-hk.svg)}.cif-ht{background-image:url(../svg/flag/cif-ht.svg)}.cif-va{background-image:url(../svg/flag/cif-va.svg)}.cif-hn{background-image:url(../svg/flag/cif-hn.svg)}.cif-xk{background-image:url(../svg/flag/cif-xk.svg)}.cif-hu{background-image:url(../svg/flag/cif-hu.svg)}.cif-is{background-image:url(../svg/flag/cif-is.svg)}.cif-in{background-image:url(../svg/flag/cif-in.svg)}.cif-id{background-image:url(../svg/flag/cif-id.svg)}.cif-ir{background-image:url(../svg/flag/cif-ir.svg)}.cif-iq{background-image:url(../svg/flag/cif-iq.svg)}.cif-ie{background-image:url(../svg/flag/cif-ie.svg)}.cif-il{background-image:url(../svg/flag/cif-il.svg)}.cif-it{background-image:url(../svg/flag/cif-it.svg)}.cif-jm{background-image:url(../svg/flag/cif-jm.svg)}.cif-jp{background-image:url(../svg/flag/cif-jp.svg)}.cif-jo{background-image:url(../svg/flag/cif-jo.svg)}.cif-kz{background-image:url(../svg/flag/cif-kz.svg)}.cif-ke{background-image:url(../svg/flag/cif-ke.svg)}.cif-ki{background-image:url(../svg/flag/cif-ki.svg)}.cif-kr{background-image:url(../svg/flag/cif-kr.svg)}.cif-kp{background-image:url(../svg/flag/cif-kp.svg)}.cif-kw{background-image:url(../svg/flag/cif-kw.svg)}.cif-kg{background-image:url(../svg/flag/cif-kg.svg)}.cif-la{background-image:url(../svg/flag/cif-la.svg)}.cif-lv{background-image:url(../svg/flag/cif-lv.svg)}.cif-lb{background-image:url(../svg/flag/cif-lb.svg)}.cif-ls{background-image:url(../svg/flag/cif-ls.svg)}.cif-lr{background-image:url(../svg/flag/cif-lr.svg)}.cif-ly{background-image:url(../svg/flag/cif-ly.svg)}.cif-li{background-image:url(../svg/flag/cif-li.svg)}.cif-lt{background-image:url(../svg/flag/cif-lt.svg)}.cif-lu{background-image:url(../svg/flag/cif-lu.svg)}.cif-mk{background-image:url(../svg/flag/cif-mk.svg)}.cif-mg{background-image:url(../svg/flag/cif-mg.svg)}.cif-mw{background-image:url(../svg/flag/cif-mw.svg)}.cif-my{background-image:url(../svg/flag/cif-my.svg)}.cif-mv{background-image:url(../svg/flag/cif-mv.svg)}.cif-ml{background-image:url(../svg/flag/cif-ml.svg)}.cif-mt{background-image:url(../svg/flag/cif-mt.svg)}.cif-mh{background-image:url(../svg/flag/cif-mh.svg)}.cif-mr{background-image:url(../svg/flag/cif-mr.svg)}.cif-mu{background-image:url(../svg/flag/cif-mu.svg)}.cif-mx{background-image:url(../svg/flag/cif-mx.svg)}.cif-fm{background-image:url(../svg/flag/cif-fm.svg)}.cif-md{background-image:url(../svg/flag/cif-md.svg)}.cif-mc{background-image:url(../svg/flag/cif-mc.svg)}.cif-mn{background-image:url(../svg/flag/cif-mn.svg)}.cif-me{background-image:url(../svg/flag/cif-me.svg)}.cif-ma{background-image:url(../svg/flag/cif-ma.svg)}.cif-mz{background-image:url(../svg/flag/cif-mz.svg)}.cif-mm{background-image:url(../svg/flag/cif-mm.svg)}.cif-na{background-image:url(../svg/flag/cif-na.svg)}.cif-nr{background-image:url(../svg/flag/cif-nr.svg)}.cif-np{background-image:url(../svg/flag/cif-np.svg)}.cif-nl{background-image:url(../svg/flag/cif-nl.svg)}.cif-nz{background-image:url(../svg/flag/cif-nz.svg)}.cif-ni{background-image:url(../svg/flag/cif-ni.svg)}.cif-ne{background-image:url(../svg/flag/cif-ne.svg)}.cif-ng{background-image:url(../svg/flag/cif-ng.svg)}.cif-nu{background-image:url(../svg/flag/cif-nu.svg)}.cif-no{background-image:url(../svg/flag/cif-no.svg)}.cif-om{background-image:url(../svg/flag/cif-om.svg)}.cif-pk{background-image:url(../svg/flag/cif-pk.svg)}.cif-pw{background-image:url(../svg/flag/cif-pw.svg)}.cif-pa{background-image:url(../svg/flag/cif-pa.svg)}.cif-pg{background-image:url(../svg/flag/cif-pg.svg)}.cif-py{background-image:url(../svg/flag/cif-py.svg)}.cif-pe{background-image:url(../svg/flag/cif-pe.svg)}.cif-ph{background-image:url(../svg/flag/cif-ph.svg)}.cif-pl{background-image:url(../svg/flag/cif-pl.svg)}.cif-pt{background-image:url(../svg/flag/cif-pt.svg)}.cif-qa{background-image:url(../svg/flag/cif-qa.svg)}.cif-ro{background-image:url(../svg/flag/cif-ro.svg)}.cif-ru{background-image:url(../svg/flag/cif-ru.svg)}.cif-rw{background-image:url(../svg/flag/cif-rw.svg)}.cif-kn{background-image:url(../svg/flag/cif-kn.svg)}.cif-lc{background-image:url(../svg/flag/cif-lc.svg)}.cif-vc{background-image:url(../svg/flag/cif-vc.svg)}.cif-ws{background-image:url(../svg/flag/cif-ws.svg)}.cif-sm{background-image:url(../svg/flag/cif-sm.svg)}.cif-st{background-image:url(../svg/flag/cif-st.svg)}.cif-sa{background-image:url(../svg/flag/cif-sa.svg)}.cif-sn{background-image:url(../svg/flag/cif-sn.svg)}.cif-rs{background-image:url(../svg/flag/cif-rs.svg)}.cif-sc{background-image:url(../svg/flag/cif-sc.svg)}.cif-sl{background-image:url(../svg/flag/cif-sl.svg)}.cif-sg{background-image:url(../svg/flag/cif-sg.svg)}.cif-sk{background-image:url(../svg/flag/cif-sk.svg)}.cif-si{background-image:url(../svg/flag/cif-si.svg)}.cif-sb{background-image:url(../svg/flag/cif-sb.svg)}.cif-so{background-image:url(../svg/flag/cif-so.svg)}.cif-za{background-image:url(../svg/flag/cif-za.svg)}.cif-es{background-image:url(../svg/flag/cif-es.svg)}.cif-lk{background-image:url(../svg/flag/cif-lk.svg)}.cif-sd{background-image:url(../svg/flag/cif-sd.svg)}.cif-ss{background-image:url(../svg/flag/cif-ss.svg)}.cif-sr{background-image:url(../svg/flag/cif-sr.svg)}.cif-sz{background-image:url(../svg/flag/cif-sz.svg)}.cif-se{background-image:url(../svg/flag/cif-se.svg)}.cif-ch{background-image:url(../svg/flag/cif-ch.svg)}.cif-sy{background-image:url(../svg/flag/cif-sy.svg)}.cif-tw{background-image:url(../svg/flag/cif-tw.svg)}.cif-tj{background-image:url(../svg/flag/cif-tj.svg)}.cif-tz{background-image:url(../svg/flag/cif-tz.svg)}.cif-th{background-image:url(../svg/flag/cif-th.svg)}.cif-tl{background-image:url(../svg/flag/cif-tl.svg)}.cif-tg{background-image:url(../svg/flag/cif-tg.svg)}.cif-to{background-image:url(../svg/flag/cif-to.svg)}.cif-tt{background-image:url(../svg/flag/cif-tt.svg)}.cif-tn{background-image:url(../svg/flag/cif-tn.svg)}.cif-tr{background-image:url(../svg/flag/cif-tr.svg)}.cif-tm{background-image:url(../svg/flag/cif-tm.svg)}.cif-tv{background-image:url(../svg/flag/cif-tv.svg)}.cif-ug{background-image:url(../svg/flag/cif-ug.svg)}.cif-ua{background-image:url(../svg/flag/cif-ua.svg)}.cif-ae{background-image:url(../svg/flag/cif-ae.svg)}.cif-gb{background-image:url(../svg/flag/cif-gb.svg)}.cif-us{background-image:url(../svg/flag/cif-us.svg)}.cif-uy{background-image:url(../svg/flag/cif-uy.svg)}.cif-uz{background-image:url(../svg/flag/cif-uz.svg)}.cif-ve{background-image:url(../svg/flag/cif-ve.svg)}.cif-vn{background-image:url(../svg/flag/cif-vn.svg)}.cif-ye{background-image:url(../svg/flag/cif-ye.svg)}.cif-zm{background-image:url(../svg/flag/cif-zm.svg)}.cif-zw{background-image:url(../svg/flag/cif-zw.svg)}\n/*# sourceMappingURL=flag.min.css.map */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/free.min.css":
/*!*********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/free.min.css ***!
  \*********************************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, module.id, __webpack_require__.d, __webpack_require__.*, module */
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _fonts_CoreUI_Icons_Free_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Free.eot?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.eot?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Free_ttf_64h6xh__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Free.ttf?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.ttf?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Free_woff_64h6xh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Free.woff?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.woff?64h6xh");
/* harmony import */ var _fonts_CoreUI_Icons_Free_svg_64h6xh__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fonts/CoreUI-Icons-Free.svg?64h6xh */ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.svg?64h6xh");
// Imports
;






var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Free_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__.default);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Free_eot_64h6xh__WEBPACK_IMPORTED_MODULE_3__.default, { hash: "#iefix" });
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Free_ttf_64h6xh__WEBPACK_IMPORTED_MODULE_4__.default);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Free_woff_64h6xh__WEBPACK_IMPORTED_MODULE_5__.default);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_fonts_CoreUI_Icons_Free_svg_64h6xh__WEBPACK_IMPORTED_MODULE_6__.default, { hash: "#CoreUI-Icons-Free" });
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";/*!\n * CoreUI Icons Free Open Source Icons\n * @version v1.0.1\n * @link https://coreui.io/icons\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under MIT (https://coreui.io/icons/license)\n */@font-face{font-family:CoreUI-Icons-Free;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"truetype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"svg\");font-weight:400;font-style:normal}[class*=\" cil-\"],[class^=cil-]{font-family:CoreUI-Icons-Free!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cil-apple:before{content:\"\\ec0f\"}.cil-birthday-cake:before{content:\"\\ec10\"}.cil-burger:before{content:\"\\ec11\"}.cil-coffee:before{content:\"\\e97d\"}.cil-dinner:before{content:\"\\ec12\"}.cil-drink:before{content:\"\\ec13\"}.cil-drink-alcohol:before{content:\"\\ec14\"}.cil-fastfood:before{content:\"\\ec15\"}.cil-lemon:before{content:\"\\ea0f\"}.cil-mug:before{content:\"\\ec17\"}.cil-mug-tea:before{content:\"\\ec18\"}.cil-pizza:before{content:\"\\ec19\"}.cil-restaurant:before{content:\"\\ec1a\"}.cil-battery-0:before{content:\"\\e935\"}.cil-battery-empty:before{content:\"\\e935\"}.cil-battery-3:before{content:\"\\e9b4\"}.cil-battery-5:before{content:\"\\e9d7\"}.cil-battery-full:before{content:\"\\e9d7\"}.cil-battery-alert:before{content:\"\\eccc\"}.cil-battery-slash:before{content:\"\\ecd3\"}.cil-bolt:before{content:\"\\ecd5\"}.cil-fire:before{content:\"\\ecd9\"}.cil-cat:before{content:\"\\ec1c\"}.cil-dog:before{content:\"\\ec1d\"}.cil-flower:before{content:\"\\ec1e\"}.cil-leaf:before{content:\"\\ec1f\"}.cil-eco:before{content:\"\\ec1f\"}.cil-plant:before{content:\"\\ec1f\"}.cil-paw:before{content:\"\\ec20\"}.cil-animal:before{content:\"\\ec20\"}.cil-terrain:before{content:\"\\ec21\"}.cil-american-football:before{content:\"\\e900\"}.cil-baseball:before{content:\"\\e927\"}.cil-basketball:before{content:\"\\e929\"}.cil-bowling:before{content:\"\\e92a\"}.cil-football:before{content:\"\\e93a\"}.cil-soccer:before{content:\"\\e93a\"}.cil-golf:before{content:\"\\e942\"}.cil-golf-alt:before{content:\"\\e977\"}.cil-rowing:before{content:\"\\e984\"}.cil-running:before{content:\"\\e998\"}.cil-swimming:before{content:\"\\e999\"}.cil-tennis:before{content:\"\\e99c\"}.cil-tennis-ball:before{content:\"\\e9a6\"}.cil-weightlifitng:before{content:\"\\e9b1\"}.cil-browser:before{content:\"\\e947\"}.cil-cast:before{content:\"\\ec22\"}.cil-cloud:before{content:\"\\e978\"}.cil-cloud-download:before{content:\"\\e979\"}.cil-cloud-upload:before{content:\"\\e97a\"}.cil-data-transfer-down:before{content:\"\\e9a4\"}.cil-data-transfer-up:before{content:\"\\e9a5\"}.cil-ethernet:before{content:\"\\ec2a\"}.cil-external-link:before{content:\"\\e9c0\"}.cil-https:before{content:\"\\ec2d\"}.cil-lan:before{content:\"\\ec2e\"}.cil-link:before{content:\"\\ec2f\"}.cil-link-alt:before{content:\"\\ec30\"}.cil-link-broken:before{content:\"\\e946\"}.cil-newspaper:before{content:\"\\ea37\"}.cil-paper-plane:before{content:\"\\ea3d\"}.cil-send:before{content:\"\\ea3d\"}.cil-rss:before{content:\"\\ea6b\"}.cil-share:before{content:\"\\ea74\"}.cil-share-all:before{content:\"\\ea75\"}.cil-share-alt:before{content:\"\\ec35\"}.cil-share-boxed:before{content:\"\\ea76\"}.cil-sitemap:before{content:\"\\ea7c\"}.cil-stream:before{content:\"\\ea94\"}.cil-transfer:before{content:\"\\eaa3\"}.cil-wifi-signal-0:before{content:\"\\ec37\"}.cil-wifi-signal-1:before{content:\"\\ec38\"}.cil-wifi-signal-2:before{content:\"\\ec39\"}.cil-wifi-signal-4:before{content:\"\\ec3b\"}.cil-wifi-signal-off:before{content:\"\\ec41\"}.cil-bank:before{content:\"\\e934\"}.cil-bath:before{content:\"\\e959\"}.cil-bathroom:before{content:\"\\e959\"}.cil-beach-access:before{content:\"\\ea03\"}.cil-bed:before{content:\"\\eac9\"}.cil-building:before{content:\"\\e94a\"}.cil-casino:before{content:\"\\ec45\"}.cil-child-friendly:before{content:\"\\ec46\"}.cil-baby-carriage:before{content:\"\\ec46\"}.cil-pushchair:before{content:\"\\ec46\"}.cil-couch:before{content:\"\\ec48\"}.cil-sofa:before{content:\"\\ec48\"}.cil-door:before{content:\"\\ec49\"}.cil-elevator:before{content:\"\\e9b2\"}.cil-fridge:before{content:\"\\ec4a\"}.cil-garage:before{content:\"\\ec4b\"}.cil-home:before{content:\"\\e9f9\"}.cil-hospital:before{content:\"\\e9fa\"}.cil-hot-tub:before{content:\"\\ec4c\"}.cil-house:before{content:\"\\ec4e\"}.cil-industry:before{content:\"\\ec4f\"}.cil-factory:before{content:\"\\ec4f\"}.cil-industry-slash:before{content:\"\\ec50\"}.cil-factory-slash:before{content:\"\\ec50\"}.cil-institution:before{content:\"\\ec51\"}.cil-library-building:before{content:\"\\ec51\"}.cil-medical-cross:before{content:\"\\ec54\"}.cil-pool:before{content:\"\\ec55\"}.cil-room:before{content:\"\\ec56\"}.cil-school:before{content:\"\\ec58\"}.cil-education:before{content:\"\\ec58\"}.cil-shower:before{content:\"\\ec59\"}.cil-smoke-free:before{content:\"\\ec5a\"}.cil-smoke-slash:before{content:\"\\ec5a\"}.cil-smoking-room:before{content:\"\\ec5b\"}.cil-smoke:before{content:\"\\ec5b\"}.cil-spa:before{content:\"\\ec5c\"}.cil-toilet:before{content:\"\\ec5d\"}.cil-wc:before{content:\"\\ec5e\"}.cil-window:before{content:\"\\ec5f\"}.cil-cloudy:before{content:\"\\e97b\"}.cil-moon:before{content:\"\\ea34\"}.cil-rain:before{content:\"\\ea62\"}.cil-snowflake:before{content:\"\\ea7f\"}.cil-sun:before{content:\"\\ea95\"}.cil-alarm:before{content:\"\\eb02\"}.cil-bell:before{content:\"\\e938\"}.cil-bullhorn:before{content:\"\\e94b\"}.cil-warning:before{content:\"\\eab8\"}.cil-asterisk:before{content:\"\\ea64\"}.cil-asterisk-circle:before{content:\"\\ecf3\"}.cil-badge:before{content:\"\\e92c\"}.cil-circle:before{content:\"\\e971\"}.cil-drop1:before{content:\"\\ecf4\"}.cil-heart:before{content:\"\\e9f6\"}.cil-puzzle:before{content:\"\\ecf5\"}.cil-rectangle:before{content:\"\\ecf7\"}.cil-scrubber:before{content:\"\\ea72\"}.cil-square:before{content:\"\\ea8f\"}.cil-star:before{content:\"\\ea90\"}.cil-star-half:before{content:\"\\ea91\"}.cil-triangle:before{content:\"\\eaa5\"}.cil-barcode:before{content:\"\\e9db\"}.cil-beaker:before{content:\"\\e9e1\"}.cil-bluetooth:before{content:\"\\e9f3\"}.cil-bug:before{content:\"\\ea2b\"}.cil-code:before{content:\"\\ea2d\"}.cil-devices:before{content:\"\\ea47\"}.cil-fax:before{content:\"\\ea5f\"}.cil-fork:before{content:\"\\ea6f\"}.cil-gamepad:before{content:\"\\ea70\"}.cil-input-hdmi:before{content:\"\\ea7e\"}.cil-input-power:before{content:\"\\ea96\"}.cil-keyboard:before{content:\"\\eaaa\"}.cil-laptop:before{content:\"\\eaac\"}.cil-lightbulb:before{content:\"\\eaad\"}.cil-memory:before{content:\"\\eb78\"}.cil-monitor:before{content:\"\\eb7a\"}.cil-mouse:before{content:\"\\eb7b\"}.cil-print:before{content:\"\\eb7d\"}.cil-qr-code:before{content:\"\\eb80\"}.cil-satelite:before{content:\"\\eb82\"}.cil-screen-desktop:before{content:\"\\eb85\"}.cil-screen-smartphone:before{content:\"\\eb8c\"}.cil-signal-cellular-0:before{content:\"\\eb90\"}.cil-signal-cellular-3:before{content:\"\\eb93\"}.cil-signal-cellular-4:before{content:\"\\eb94\"}.cil-tablet:before{content:\"\\eb9c\"}.cil-task:before{content:\"\\eb9d\"}.cil-terminal:before{content:\"\\eb9e\"}.cil-watch:before{content:\"\\ec05\"}.cil-3d:before{content:\"\\e901\"}.cil-aperture:before{content:\"\\e903\"}.cil-blur:before{content:\"\\e906\"}.cil-blur-circular:before{content:\"\\e907\"}.cil-blur-linear:before{content:\"\\e908\"}.cil-border-all:before{content:\"\\e90b\"}.cil-border-bottom:before{content:\"\\e90c\"}.cil-border-clear:before{content:\"\\e90d\"}.cil-border-horizontal:before{content:\"\\e90e\"}.cil-border-inner:before{content:\"\\e90f\"}.cil-border-left:before{content:\"\\e910\"}.cil-border-outer:before{content:\"\\e911\"}.cil-border-right:before{content:\"\\e912\"}.cil-border-style:before{content:\"\\e913\"}.cil-border-top:before{content:\"\\e914\"}.cil-border-vertical:before{content:\"\\e915\"}.cil-brush:before{content:\"\\e916\"}.cil-brush-alt:before{content:\"\\e917\"}.cil-camera-roll:before{content:\"\\e918\"}.cil-center-focus:before{content:\"\\e919\"}.cil-color-border:before{content:\"\\e91b\"}.cil-color-fill:before{content:\"\\e91c\"}.cil-color-palette:before{content:\"\\e91d\"}.cil-contrast:before{content:\"\\e91f\"}.cil-crop:before{content:\"\\e920\"}.cil-crop-rotate:before{content:\"\\e921\"}.cil-cursor:before{content:\"\\e922\"}.cil-cursor-move:before{content:\"\\e923\"}.cil-drop:before{content:\"\\e924\"}.cil-exposure:before{content:\"\\e926\"}.cil-eyedropper:before{content:\"\\e930\"}.cil-filter-frames:before{content:\"\\e93c\"}.cil-filter-photo:before{content:\"\\e948\"}.cil-flip:before{content:\"\\e952\"}.cil-flip-to-back:before{content:\"\\e953\"}.cil-flip-to-front:before{content:\"\\e954\"}.cil-gif:before{content:\"\\e955\"}.cil-gradient:before{content:\"\\e956\"}.cil-grain:before{content:\"\\e960\"}.cil-grid:before{content:\"\\e961\"}.cil-grid-slash:before{content:\"\\e962\"}.cil-hdr:before{content:\"\\e963\"}.cil-healing:before{content:\"\\e99d\"}.cil-image-broken:before{content:\"\\e99f\"}.cil-image-plus:before{content:\"\\e9a0\"}.cil-layers:before{content:\"\\e9ad\"}.cil-line-style:before{content:\"\\e9af\"}.cil-line-weight:before{content:\"\\e9b9\"}.cil-object-group:before{content:\"\\e9bb\"}.cil-object-ungroup:before{content:\"\\e9c3\"}.cil-opacity:before{content:\"\\e9f4\"}.cil-paint:before{content:\"\\e9f7\"}.cil-paint-bucket:before{content:\"\\ea06\"}.cil-swap-horizontal:before{content:\"\\ea0e\"}.cil-swap-vertical:before{content:\"\\ea11\"}.cil-vector:before{content:\"\\ea16\"}.cil-vertical-align-bottom1:before{content:\"\\ea35\"}.cil-vertical-align-center1:before{content:\"\\ea3a\"}.cil-vertical-align-top1:before{content:\"\\ea3b\"}.cil-align-center:before{content:\"\\ea40\"}.cil-align-left:before{content:\"\\ea41\"}.cil-align-right:before{content:\"\\ea42\"}.cil-bold:before{content:\"\\ea43\"}.cil-copy:before{content:\"\\ea44\"}.cil-cut:before{content:\"\\ea61\"}.cil-remove:before{content:\"\\ea85\"}.cil-backspace:before{content:\"\\ea85\"}.cil-double-quote-sans-left:before{content:\"\\ea86\"}.cil-double-quote-sans-right:before{content:\"\\ea87\"}.cil-excerpt:before{content:\"\\ea8a\"}.cil-expand-down:before{content:\"\\ea9c\"}.cil-expand-left:before{content:\"\\ea9d\"}.cil-expand-right:before{content:\"\\ea9e\"}.cil-expand-up:before{content:\"\\eaa7\"}.cil-font:before{content:\"\\eaae\"}.cil-functions:before{content:\"\\eaaf\"}.cil-functions-alt:before{content:\"\\eab0\"}.cil-header:before{content:\"\\eb0e\"}.cil-highlighter:before{content:\"\\eb0f\"}.cil-highligt:before{content:\"\\eb10\"}.cil-indent-decrease:before{content:\"\\eb11\"}.cil-indent-increase:before{content:\"\\eb12\"}.cil-info:before{content:\"\\eb13\"}.cil-italic:before{content:\"\\eb14\"}.cil-justify-center:before{content:\"\\eb15\"}.cil-justify-left:before{content:\"\\eb16\"}.cil-justify-right:before{content:\"\\eb17\"}.cil-level-down:before{content:\"\\eb18\"}.cil-level-up:before{content:\"\\eb19\"}.cil-line-spacing:before{content:\"\\eb1a\"}.cil-list:before{content:\"\\eb1b\"}.cil-list-filter:before{content:\"\\eb1c\"}.cil-list-high-priority:before{content:\"\\eb1d\"}.cil-list-low-priority:before{content:\"\\eb1e\"}.cil-list-numbered:before{content:\"\\eb1f\"}.cil-list-rich:before{content:\"\\eb21\"}.cil-notes:before{content:\"\\eb22\"}.cil-paragraph:before{content:\"\\eb24\"}.cil-pen-alt:before{content:\"\\eb26\"}.cil-pen-nib:before{content:\"\\eb28\"}.cil-pencil:before{content:\"\\eb29\"}.cil-short-text:before{content:\"\\eb2a\"}.cil-sort-alpha-down:before{content:\"\\eb2b\"}.cil-sort-alpha-up:before{content:\"\\eb2c\"}.cil-sort-ascending:before{content:\"\\eb2d\"}.cil-sort-descending:before{content:\"\\eb2e\"}.cil-sort-numeric-down:before{content:\"\\eb2f\"}.cil-sort-numeric-up:before{content:\"\\eb30\"}.cil-space-bar:before{content:\"\\eb31\"}.cil-text:before{content:\"\\eb32\"}.cil-text-shapes:before{content:\"\\eb3d\"}.cil-text-size:before{content:\"\\eb3e\"}.cil-text-square:before{content:\"\\eb3f\"}.cil-text-strike:before{content:\"\\eb40\"}.cil-strikethrough:before{content:\"\\eb40\"}.cil-translate:before{content:\"\\eb42\"}.cil-underline:before{content:\"\\eb43\"}.cil-vertical-align-bottom:before{content:\"\\eb44\"}.cil-vertical-align-center:before{content:\"\\eb45\"}.cil-vertical-align-top:before{content:\"\\eb46\"}.cil-wrap-text:before{content:\"\\eb47\"}.cil-assistive-listening-system:before{content:\"\\e9d3\"}.cil-blind:before{content:\"\\e9dc\"}.cil-braille:before{content:\"\\e9dd\"}.cil-deaf:before{content:\"\\e9de\"}.cil-fingerprint:before{content:\"\\ea1a\"}.cil-life-ring:before{content:\"\\ea1d\"}.cil-lock-locked:before{content:\"\\ea1e\"}.cil-lock-unlocked:before{content:\"\\ea24\"}.cil-low-vision:before{content:\"\\ea25\"}.cil-mouth-slash:before{content:\"\\ea27\"}.cil-pregnant:before{content:\"\\ea28\"}.cil-shield-alt:before{content:\"\\ea2f\"}.cil-sign-language:before{content:\"\\ea77\"}.cil-wheelchair:before{content:\"\\ea80\"}.cil-disabled:before{content:\"\\ea80\"}.cil-account-logout:before{content:\"\\e964\"}.cil-action-redo:before{content:\"\\e965\"}.cil-action-undo:before{content:\"\\e966\"}.cil-applications:before{content:\"\\e967\"}.cil-apps:before{content:\"\\e967\"}.cil-applications-settings:before{content:\"\\e968\"}.cil-apps-settings:before{content:\"\\e968\"}.cil-arrow-bottom:before{content:\"\\e969\"}.cil-arrow-circle-bottom:before{content:\"\\e96a\"}.cil-arrow-circle-left:before{content:\"\\e96b\"}.cil-arrow-circle-right:before{content:\"\\e96c\"}.cil-arrow-circle-top:before{content:\"\\e96d\"}.cil-arrow-left:before{content:\"\\e96e\"}.cil-arrow-right:before{content:\"\\e96f\"}.cil-arrow-thick-bottom:before{content:\"\\e970\"}.cil-arrow-thick-from-bottom:before{content:\"\\e981\"}.cil-arrow-thick-from-left:before{content:\"\\e982\"}.cil-arrow-thick-from-right:before{content:\"\\e983\"}.cil-arrow-thick-from-top:before{content:\"\\e99b\"}.cil-arrow-thick-left:before{content:\"\\e9a1\"}.cil-arrow-thick-right:before{content:\"\\e9a2\"}.cil-arrow-thick-to-bottom:before{content:\"\\e9bc\"}.cil-arrow-thick-to-left:before{content:\"\\e9bd\"}.cil-arrow-thick-to-right:before{content:\"\\e9bf\"}.cil-arrow-thick-to-top:before{content:\"\\e9d4\"}.cil-arrow-thick-top:before{content:\"\\e9be\"}.cil-arrow-top:before{content:\"\\e9e4\"}.cil-ban:before{content:\"\\e9e5\"}.cil-brightness:before{content:\"\\e9e6\"}.cil-caret-bottom:before{content:\"\\ea2c\"}.cil-caret-left:before{content:\"\\ea30\"}.cil-caret-right:before{content:\"\\ea31\"}.cil-caret-top:before{content:\"\\ea3c\"}.cil-check:before{content:\"\\ea55\"}.cil-check-alt:before{content:\"\\ecf9\"}.cil-check-circle:before{content:\"\\ea57\"}.cil-chevron-bottom:before{content:\"\\ea59\"}.cil-chevron-circle-down-alt:before{content:\"\\ecfc\"}.cil-chevron-circle-left-alt:before{content:\"\\ecfd\"}.cil-chevron-circle-right-alt:before{content:\"\\ecfe\"}.cil-chevron-circle-up-alt:before{content:\"\\ecff\"}.cil-chevron-double-down:before{content:\"\\ea6a\"}.cil-chevron-double-left:before{content:\"\\ea6e\"}.cil-chevron-double-right:before{content:\"\\ea73\"}.cil-chevron-double-up:before{content:\"\\ea8d\"}.cil-chevron-double-up-alt:before{content:\"\\ed03\"}.cil-chevron-left:before{content:\"\\ea8e\"}.cil-chevron-right:before{content:\"\\ea9a\"}.cil-chevron-top:before{content:\"\\eabd\"}.cil-clear-all:before{content:\"\\eabe\"}.cil-clipboard:before{content:\"\\eac0\"}.cil-clone:before{content:\"\\eac1\"}.cil-columns:before{content:\"\\eb4b\"}.cil-exit-to-app:before{content:\"\\eb4d\"}.cil-filter:before{content:\"\\eb4e\"}.cil-infinity:before{content:\"\\eb4f\"}.cil-input:before{content:\"\\eb50\"}.cil-magnifying-glass:before{content:\"\\eb51\"}.cil-zoom:before{content:\"\\eb51\"}.cil-search:before{content:\"\\eb51\"}.cil-menu:before{content:\"\\ed0b\"}.cil-hamburger-menu:before{content:\"\\ed0b\"}.cil-minus:before{content:\"\\eb52\"}.cil-move:before{content:\"\\eb56\"}.cil-options:before{content:\"\\ecdc\"}.cil-options-horizontal:before{content:\"\\eb57\"}.cil-ellipses:before{content:\"\\eb57\"}.cil-ellipsis:before{content:\"\\eb57\"}.cil-pin:before{content:\"\\eb5a\"}.cil-plus:before{content:\"\\eb5b\"}.cil-power-standby:before{content:\"\\eb5f\"}.cil-reload:before{content:\"\\eb60\"}.cil-resize-both:before{content:\"\\eb61\"}.cil-resize-height:before{content:\"\\eb62\"}.cil-resize-width:before{content:\"\\eb63\"}.cil-save:before{content:\"\\eb65\"}.cil-settings:before{content:\"\\eb68\"}.cil-cog:before{content:\"\\eb68\"}.cil-speedometer:before{content:\"\\eb69\"}.cil-gauge:before{content:\"\\eb69\"}.cil-spreadsheet:before{content:\"\\eb6a\"}.cil-storage:before{content:\"\\eb6b\"}.cil-sync:before{content:\"\\eb6c\"}.cil-toggle-off:before{content:\"\\eb71\"}.cil-touch-app:before{content:\"\\eb73\"}.cil-trash:before{content:\"\\eb74\"}.cil-view-column:before{content:\"\\ebf6\"}.cil-view-module:before{content:\"\\ebf7\"}.cil-view-quilt:before{content:\"\\ebf8\"}.cil-view-stream:before{content:\"\\ebf9\"}.cil-wallpaper:before{content:\"\\ebfa\"}.cil-window-maximize:before{content:\"\\ebfc\"}.cil-window-minimize:before{content:\"\\ebfd\"}.cil-window-restore:before{content:\"\\ebfe\"}.cil-x:before{content:\"\\ebff\"}.cil-x-circle:before{content:\"\\ec00\"}.cil-zoom-in:before{content:\"\\ec02\"}.cil-zoom-out:before{content:\"\\ec03\"}.cil-child:before{content:\"\\e97e\"}.cil-baby:before{content:\"\\e97e\"}.cil-face:before{content:\"\\e985\"}.cil-face-dead:before{content:\"\\e986\"}.cil-frown:before{content:\"\\e987\"}.cil-sad:before{content:\"\\e987\"}.cil-meh:before{content:\"\\e988\"}.cil-mood-bad:before{content:\"\\e989\"}.cil-mood-good:before{content:\"\\e98a\"}.cil-mood-very-bad:before{content:\"\\e98b\"}.cil-mood-very-good:before{content:\"\\e98c\"}.cil-smile:before{content:\"\\e9c4\"}.cil-happy:before{content:\"\\e9c4\"}.cil-smile-plus:before{content:\"\\e9da\"}.cil-4k:before{content:\"\\ea81\"}.cil-airplay:before{content:\"\\ea82\"}.cil-album:before{content:\"\\ea83\"}.cil-audio:before{content:\"\\ea93\"}.cil-audio-description:before{content:\"\\eaa2\"}.cil-audio-spectrum:before{content:\"\\eaa8\"}.cil-av-timer:before{content:\"\\eab1\"}.cil-camera:before{content:\"\\eab2\"}.cil-camera-control:before{content:\"\\eab3\"}.cil-control:before{content:\"\\eab3\"}.cil-closed-captioning:before{content:\"\\eab9\"}.cil-cc:before{content:\"\\eab9\"}.cil-compress:before{content:\"\\eb4a\"}.cil-equalizer:before{content:\"\\eba0\"}.cil-featured-playlist:before{content:\"\\ec6c\"}.cil-fullscreen:before{content:\"\\ec73\"}.cil-fullscreen-exit:before{content:\"\\ec74\"}.cil-hd:before{content:\"\\ec75\"}.cil-headphones:before{content:\"\\ec76\"}.cil-library-add:before{content:\"\\ec7a\"}.cil-loop:before{content:\"\\ec7c\"}.cil-loop-1:before{content:\"\\ec7d\"}.cil-loop-circular:before{content:\"\\ec7e\"}.cil-media-eject:before{content:\"\\ec80\"}.cil-media-pause:before{content:\"\\ec83\"}.cil-media-play:before{content:\"\\ec86\"}.cil-media-record:before{content:\"\\ec89\"}.cil-media-skip-backward:before{content:\"\\ec8c\"}.cil-media-skip-forward:before{content:\"\\ec8f\"}.cil-media-step-backward:before{content:\"\\ec92\"}.cil-media-step-forward:before{content:\"\\ec95\"}.cil-media-stop:before{content:\"\\ec98\"}.cil-microphone:before{content:\"\\ec9b\"}.cil-mic:before{content:\"\\ec9b\"}.cil-movie:before{content:\"\\ec9f\"}.cil-music-note:before{content:\"\\eca1\"}.cil-playlist-add:before{content:\"\\eca6\"}.cil-speaker:before{content:\"\\ecb9\"}.cil-tv:before{content:\"\\ecbc\"}.cil-video:before{content:\"\\ecc0\"}.cil-voice-over-record:before{content:\"\\ecc7\"}.cil-volume-high:before{content:\"\\ecc9\"}.cil-volume-low:before{content:\"\\ecca\"}.cil-volume-off:before{content:\"\\eccb\"}.cil-at:before{content:\"\\e98f\"}.cil-book:before{content:\"\\e990\"}.cil-bookmark:before{content:\"\\e992\"}.cil-description:before{content:\"\\eba6\"}.cil-envelope-closed:before{content:\"\\e9b5\"}.cil-envelope-letter:before{content:\"\\e9b6\"}.cil-envelope-open:before{content:\"\\e9b7\"}.cil-file:before{content:\"\\e9c5\"}.cil-find-in-page:before{content:\"\\ebaa\"}.cil-folder:before{content:\"\\e9d8\"}.cil-folder-open:before{content:\"\\e9d9\"}.cil-image1:before{content:\"\\e9fe\"}.cil-inbox:before{content:\"\\ea00\"}.cil-library:before{content:\"\\ebb0\"}.cil-paperclip:before{content:\"\\ea3e\"}.cil-tag:before{content:\"\\ea97\"}.cil-tags:before{content:\"\\ea98\"}.cil-address-book:before{content:\"\\ec07\"}.cil-people:before{content:\"\\ec62\"}.cil-user:before{content:\"\\ec67\"}.cil-user-female:before{content:\"\\ec68\"}.cil-user-follow:before{content:\"\\ec69\"}.cil-user-unfollow:before{content:\"\\ec6b\"}.cil-airplane-mode:before{content:\"\\e904\"}.cil-airplane-mode-off:before{content:\"\\e905\"}.cil-contact:before{content:\"\\e933\"}.cil-dialpad:before{content:\"\\e93f\"}.cil-mobile:before{content:\"\\ea48\"}.cil-mobile-landscape:before{content:\"\\e944\"}.cil-phone:before{content:\"\\e94f\"}.cil-sim:before{content:\"\\e972\"}.cil-bike:before{content:\"\\eae6\"}.cil-boat-alt:before{content:\"\\eae9\"}.cil-bus-alt:before{content:\"\\eaeb\"}.cil-car-alt:before{content:\"\\eaee\"}.cil-flight-takeoff:before{content:\"\\eaf2\"}.cil-locomotive:before{content:\"\\eaf3\"}.cil-taxi:before{content:\"\\eafa\"}.cil-truck:before{content:\"\\eb00\"}.cil-walk:before{content:\"\\eb01\"}.cil-calendar:before{content:\"\\e994\"}.cil-calendar-check:before{content:\"\\e995\"}.cil-clock:before{content:\"\\e9aa\"}.cil-compass:before{content:\"\\e9ab\"}.cil-flag-alt:before{content:\"\\ec0a\"}.cil-globe-alt:before{content:\"\\ea32\"}.cil-history:before{content:\"\\e9f8\"}.cil-language:before{content:\"\\ea0c\"}.cil-location-pin:before{content:\"\\ea17\"}.cil-map:before{content:\"\\ea20\"}.cil-balance-scale:before{content:\"\\eac6\"}.cil-bar-chart:before{content:\"\\eaca\"}.cil-basket:before{content:\"\\eacb\"}.cil-briefcase:before{content:\"\\ead0\"}.cil-british-pound:before{content:\"\\ebb9\"}.cil-calculator:before{content:\"\\ebbc\"}.cil-cart:before{content:\"\\ebc0\"}.cil-chart:before{content:\"\\ebc5\"}.cil-chart-line:before{content:\"\\ebc9\"}.cil-chart-pie:before{content:\"\\ebcb\"}.cil-credit-card:before{content:\"\\ebce\"}.cil-dollar:before{content:\"\\ebcf\"}.cil-euro:before{content:\"\\ebd4\"}.cil-gem:before{content:\"\\eb48\"}.cil-diamond:before{content:\"\\eb48\"}.cil-gift:before{content:\"\\eb49\"}.cil-graph:before{content:\"\\ebd8\"}.cil-money:before{content:\"\\ec0d\"}.cil-cash:before{content:\"\\ec0d\"}.cil-wallet:before{content:\"\\ebe5\"}.cil-yen:before{content:\"\\ebe6\"}.cil-chat-bubble:before{content:\"\\ead1\"}.cil-comment-bubble:before{content:\"\\ead4\"}.cil-comment-square:before{content:\"\\eadd\"}.cil-speech:before{content:\"\\ead2\"}.cil-hand-point-down:before{content:\"\\e9ea\"}.cil-hand-point-left:before{content:\"\\e9eb\"}.cil-hand-point-right:before{content:\"\\e9ec\"}.cil-hand-point-up:before{content:\"\\e9ed\"}.cil-thumb-down:before{content:\"\\ea9f\"}.cil-thumb-up:before{content:\"\\eaa0 \"}\n/*# sourceMappingURL=free.min.css.map */", "",{"version":3,"sources":["webpack://./public/vendors/@coreui/icons/css/free.min.css"],"names":[],"mappings":"AAAA,gBAAgB,CAAC;;;;;;EAMf,CAAC,WAAW,6BAA6B,CAAC,2CAA8C,CAAC,+OAAoR,CAAC,eAAe,CAAC,iBAAiB,CAAC,+BAA+B,uCAAuC,CAAC,UAAU,CAAC,iBAAiB,CAAC,eAAe,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,aAAa,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,8BAA8B,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,+BAA+B,eAAe,CAAC,6BAA6B,eAAe,CAAC,qBAAqB,eAAe,CAAC,0BAA0B,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,4BAA4B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,6BAA6B,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,8BAA8B,eAAe,CAAC,8BAA8B,eAAe,CAAC,8BAA8B,eAAe,CAAC,8BAA8B,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,4BAA4B,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,4BAA4B,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,mCAAmC,eAAe,CAAC,mCAAmC,eAAe,CAAC,gCAAgC,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mCAAmC,eAAe,CAAC,oCAAoC,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,+BAA+B,eAAe,CAAC,8BAA8B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,4BAA4B,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,4BAA4B,eAAe,CAAC,8BAA8B,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kCAAkC,eAAe,CAAC,kCAAkC,eAAe,CAAC,+BAA+B,eAAe,CAAC,sBAAsB,eAAe,CAAC,uCAAuC,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kCAAkC,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,gCAAgC,eAAe,CAAC,8BAA8B,eAAe,CAAC,+BAA+B,eAAe,CAAC,6BAA6B,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,+BAA+B,eAAe,CAAC,oCAAoC,eAAe,CAAC,kCAAkC,eAAe,CAAC,mCAAmC,eAAe,CAAC,iCAAiC,eAAe,CAAC,6BAA6B,eAAe,CAAC,8BAA8B,eAAe,CAAC,kCAAkC,eAAe,CAAC,gCAAgC,eAAe,CAAC,iCAAiC,eAAe,CAAC,+BAA+B,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,oCAAoC,eAAe,CAAC,oCAAoC,eAAe,CAAC,qCAAqC,eAAe,CAAC,kCAAkC,eAAe,CAAC,gCAAgC,eAAe,CAAC,gCAAgC,eAAe,CAAC,iCAAiC,eAAe,CAAC,8BAA8B,eAAe,CAAC,kCAAkC,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,6BAA6B,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,2BAA2B,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,+BAA+B,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,2BAA2B,eAAe,CAAC,cAAc,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,8BAA8B,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,8BAA8B,eAAe,CAAC,uBAAuB,eAAe,CAAC,4BAA4B,eAAe,CAAC,eAAe,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gCAAgC,eAAe,CAAC,+BAA+B,eAAe,CAAC,gCAAgC,eAAe,CAAC,+BAA+B,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,8BAA8B,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,eAAe,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,8BAA8B,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,6BAA6B,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,6BAA6B,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,gBAAgB;AAC53pB,uCAAuC","sourcesContent":["@charset \"UTF-8\";/*!\n * CoreUI Icons Free Open Source Icons\n * @version v1.0.1\n * @link https://coreui.io/icons\n * Copyright (c) 2020 creativeLabs Łukasz Holeczek\n * Licensed under MIT (https://coreui.io/icons/license)\n */@font-face{font-family:CoreUI-Icons-Free;src:url(../fonts/CoreUI-Icons-Free.eot?64h6xh);src:url(../fonts/CoreUI-Icons-Free.eot?64h6xh#iefix) format(\"embedded-opentype\"),url(../fonts/CoreUI-Icons-Free.ttf?64h6xh) format(\"truetype\"),url(../fonts/CoreUI-Icons-Free.woff?64h6xh) format(\"woff\"),url(../fonts/CoreUI-Icons-Free.svg?64h6xh#CoreUI-Icons-Free) format(\"svg\");font-weight:400;font-style:normal}[class*=\" cil-\"],[class^=cil-]{font-family:CoreUI-Icons-Free!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.cil-apple:before{content:\"\\ec0f\"}.cil-birthday-cake:before{content:\"\\ec10\"}.cil-burger:before{content:\"\\ec11\"}.cil-coffee:before{content:\"\\e97d\"}.cil-dinner:before{content:\"\\ec12\"}.cil-drink:before{content:\"\\ec13\"}.cil-drink-alcohol:before{content:\"\\ec14\"}.cil-fastfood:before{content:\"\\ec15\"}.cil-lemon:before{content:\"\\ea0f\"}.cil-mug:before{content:\"\\ec17\"}.cil-mug-tea:before{content:\"\\ec18\"}.cil-pizza:before{content:\"\\ec19\"}.cil-restaurant:before{content:\"\\ec1a\"}.cil-battery-0:before{content:\"\\e935\"}.cil-battery-empty:before{content:\"\\e935\"}.cil-battery-3:before{content:\"\\e9b4\"}.cil-battery-5:before{content:\"\\e9d7\"}.cil-battery-full:before{content:\"\\e9d7\"}.cil-battery-alert:before{content:\"\\eccc\"}.cil-battery-slash:before{content:\"\\ecd3\"}.cil-bolt:before{content:\"\\ecd5\"}.cil-fire:before{content:\"\\ecd9\"}.cil-cat:before{content:\"\\ec1c\"}.cil-dog:before{content:\"\\ec1d\"}.cil-flower:before{content:\"\\ec1e\"}.cil-leaf:before{content:\"\\ec1f\"}.cil-eco:before{content:\"\\ec1f\"}.cil-plant:before{content:\"\\ec1f\"}.cil-paw:before{content:\"\\ec20\"}.cil-animal:before{content:\"\\ec20\"}.cil-terrain:before{content:\"\\ec21\"}.cil-american-football:before{content:\"\\e900\"}.cil-baseball:before{content:\"\\e927\"}.cil-basketball:before{content:\"\\e929\"}.cil-bowling:before{content:\"\\e92a\"}.cil-football:before{content:\"\\e93a\"}.cil-soccer:before{content:\"\\e93a\"}.cil-golf:before{content:\"\\e942\"}.cil-golf-alt:before{content:\"\\e977\"}.cil-rowing:before{content:\"\\e984\"}.cil-running:before{content:\"\\e998\"}.cil-swimming:before{content:\"\\e999\"}.cil-tennis:before{content:\"\\e99c\"}.cil-tennis-ball:before{content:\"\\e9a6\"}.cil-weightlifitng:before{content:\"\\e9b1\"}.cil-browser:before{content:\"\\e947\"}.cil-cast:before{content:\"\\ec22\"}.cil-cloud:before{content:\"\\e978\"}.cil-cloud-download:before{content:\"\\e979\"}.cil-cloud-upload:before{content:\"\\e97a\"}.cil-data-transfer-down:before{content:\"\\e9a4\"}.cil-data-transfer-up:before{content:\"\\e9a5\"}.cil-ethernet:before{content:\"\\ec2a\"}.cil-external-link:before{content:\"\\e9c0\"}.cil-https:before{content:\"\\ec2d\"}.cil-lan:before{content:\"\\ec2e\"}.cil-link:before{content:\"\\ec2f\"}.cil-link-alt:before{content:\"\\ec30\"}.cil-link-broken:before{content:\"\\e946\"}.cil-newspaper:before{content:\"\\ea37\"}.cil-paper-plane:before{content:\"\\ea3d\"}.cil-send:before{content:\"\\ea3d\"}.cil-rss:before{content:\"\\ea6b\"}.cil-share:before{content:\"\\ea74\"}.cil-share-all:before{content:\"\\ea75\"}.cil-share-alt:before{content:\"\\ec35\"}.cil-share-boxed:before{content:\"\\ea76\"}.cil-sitemap:before{content:\"\\ea7c\"}.cil-stream:before{content:\"\\ea94\"}.cil-transfer:before{content:\"\\eaa3\"}.cil-wifi-signal-0:before{content:\"\\ec37\"}.cil-wifi-signal-1:before{content:\"\\ec38\"}.cil-wifi-signal-2:before{content:\"\\ec39\"}.cil-wifi-signal-4:before{content:\"\\ec3b\"}.cil-wifi-signal-off:before{content:\"\\ec41\"}.cil-bank:before{content:\"\\e934\"}.cil-bath:before{content:\"\\e959\"}.cil-bathroom:before{content:\"\\e959\"}.cil-beach-access:before{content:\"\\ea03\"}.cil-bed:before{content:\"\\eac9\"}.cil-building:before{content:\"\\e94a\"}.cil-casino:before{content:\"\\ec45\"}.cil-child-friendly:before{content:\"\\ec46\"}.cil-baby-carriage:before{content:\"\\ec46\"}.cil-pushchair:before{content:\"\\ec46\"}.cil-couch:before{content:\"\\ec48\"}.cil-sofa:before{content:\"\\ec48\"}.cil-door:before{content:\"\\ec49\"}.cil-elevator:before{content:\"\\e9b2\"}.cil-fridge:before{content:\"\\ec4a\"}.cil-garage:before{content:\"\\ec4b\"}.cil-home:before{content:\"\\e9f9\"}.cil-hospital:before{content:\"\\e9fa\"}.cil-hot-tub:before{content:\"\\ec4c\"}.cil-house:before{content:\"\\ec4e\"}.cil-industry:before{content:\"\\ec4f\"}.cil-factory:before{content:\"\\ec4f\"}.cil-industry-slash:before{content:\"\\ec50\"}.cil-factory-slash:before{content:\"\\ec50\"}.cil-institution:before{content:\"\\ec51\"}.cil-library-building:before{content:\"\\ec51\"}.cil-medical-cross:before{content:\"\\ec54\"}.cil-pool:before{content:\"\\ec55\"}.cil-room:before{content:\"\\ec56\"}.cil-school:before{content:\"\\ec58\"}.cil-education:before{content:\"\\ec58\"}.cil-shower:before{content:\"\\ec59\"}.cil-smoke-free:before{content:\"\\ec5a\"}.cil-smoke-slash:before{content:\"\\ec5a\"}.cil-smoking-room:before{content:\"\\ec5b\"}.cil-smoke:before{content:\"\\ec5b\"}.cil-spa:before{content:\"\\ec5c\"}.cil-toilet:before{content:\"\\ec5d\"}.cil-wc:before{content:\"\\ec5e\"}.cil-window:before{content:\"\\ec5f\"}.cil-cloudy:before{content:\"\\e97b\"}.cil-moon:before{content:\"\\ea34\"}.cil-rain:before{content:\"\\ea62\"}.cil-snowflake:before{content:\"\\ea7f\"}.cil-sun:before{content:\"\\ea95\"}.cil-alarm:before{content:\"\\eb02\"}.cil-bell:before{content:\"\\e938\"}.cil-bullhorn:before{content:\"\\e94b\"}.cil-warning:before{content:\"\\eab8\"}.cil-asterisk:before{content:\"\\ea64\"}.cil-asterisk-circle:before{content:\"\\ecf3\"}.cil-badge:before{content:\"\\e92c\"}.cil-circle:before{content:\"\\e971\"}.cil-drop1:before{content:\"\\ecf4\"}.cil-heart:before{content:\"\\e9f6\"}.cil-puzzle:before{content:\"\\ecf5\"}.cil-rectangle:before{content:\"\\ecf7\"}.cil-scrubber:before{content:\"\\ea72\"}.cil-square:before{content:\"\\ea8f\"}.cil-star:before{content:\"\\ea90\"}.cil-star-half:before{content:\"\\ea91\"}.cil-triangle:before{content:\"\\eaa5\"}.cil-barcode:before{content:\"\\e9db\"}.cil-beaker:before{content:\"\\e9e1\"}.cil-bluetooth:before{content:\"\\e9f3\"}.cil-bug:before{content:\"\\ea2b\"}.cil-code:before{content:\"\\ea2d\"}.cil-devices:before{content:\"\\ea47\"}.cil-fax:before{content:\"\\ea5f\"}.cil-fork:before{content:\"\\ea6f\"}.cil-gamepad:before{content:\"\\ea70\"}.cil-input-hdmi:before{content:\"\\ea7e\"}.cil-input-power:before{content:\"\\ea96\"}.cil-keyboard:before{content:\"\\eaaa\"}.cil-laptop:before{content:\"\\eaac\"}.cil-lightbulb:before{content:\"\\eaad\"}.cil-memory:before{content:\"\\eb78\"}.cil-monitor:before{content:\"\\eb7a\"}.cil-mouse:before{content:\"\\eb7b\"}.cil-print:before{content:\"\\eb7d\"}.cil-qr-code:before{content:\"\\eb80\"}.cil-satelite:before{content:\"\\eb82\"}.cil-screen-desktop:before{content:\"\\eb85\"}.cil-screen-smartphone:before{content:\"\\eb8c\"}.cil-signal-cellular-0:before{content:\"\\eb90\"}.cil-signal-cellular-3:before{content:\"\\eb93\"}.cil-signal-cellular-4:before{content:\"\\eb94\"}.cil-tablet:before{content:\"\\eb9c\"}.cil-task:before{content:\"\\eb9d\"}.cil-terminal:before{content:\"\\eb9e\"}.cil-watch:before{content:\"\\ec05\"}.cil-3d:before{content:\"\\e901\"}.cil-aperture:before{content:\"\\e903\"}.cil-blur:before{content:\"\\e906\"}.cil-blur-circular:before{content:\"\\e907\"}.cil-blur-linear:before{content:\"\\e908\"}.cil-border-all:before{content:\"\\e90b\"}.cil-border-bottom:before{content:\"\\e90c\"}.cil-border-clear:before{content:\"\\e90d\"}.cil-border-horizontal:before{content:\"\\e90e\"}.cil-border-inner:before{content:\"\\e90f\"}.cil-border-left:before{content:\"\\e910\"}.cil-border-outer:before{content:\"\\e911\"}.cil-border-right:before{content:\"\\e912\"}.cil-border-style:before{content:\"\\e913\"}.cil-border-top:before{content:\"\\e914\"}.cil-border-vertical:before{content:\"\\e915\"}.cil-brush:before{content:\"\\e916\"}.cil-brush-alt:before{content:\"\\e917\"}.cil-camera-roll:before{content:\"\\e918\"}.cil-center-focus:before{content:\"\\e919\"}.cil-color-border:before{content:\"\\e91b\"}.cil-color-fill:before{content:\"\\e91c\"}.cil-color-palette:before{content:\"\\e91d\"}.cil-contrast:before{content:\"\\e91f\"}.cil-crop:before{content:\"\\e920\"}.cil-crop-rotate:before{content:\"\\e921\"}.cil-cursor:before{content:\"\\e922\"}.cil-cursor-move:before{content:\"\\e923\"}.cil-drop:before{content:\"\\e924\"}.cil-exposure:before{content:\"\\e926\"}.cil-eyedropper:before{content:\"\\e930\"}.cil-filter-frames:before{content:\"\\e93c\"}.cil-filter-photo:before{content:\"\\e948\"}.cil-flip:before{content:\"\\e952\"}.cil-flip-to-back:before{content:\"\\e953\"}.cil-flip-to-front:before{content:\"\\e954\"}.cil-gif:before{content:\"\\e955\"}.cil-gradient:before{content:\"\\e956\"}.cil-grain:before{content:\"\\e960\"}.cil-grid:before{content:\"\\e961\"}.cil-grid-slash:before{content:\"\\e962\"}.cil-hdr:before{content:\"\\e963\"}.cil-healing:before{content:\"\\e99d\"}.cil-image-broken:before{content:\"\\e99f\"}.cil-image-plus:before{content:\"\\e9a0\"}.cil-layers:before{content:\"\\e9ad\"}.cil-line-style:before{content:\"\\e9af\"}.cil-line-weight:before{content:\"\\e9b9\"}.cil-object-group:before{content:\"\\e9bb\"}.cil-object-ungroup:before{content:\"\\e9c3\"}.cil-opacity:before{content:\"\\e9f4\"}.cil-paint:before{content:\"\\e9f7\"}.cil-paint-bucket:before{content:\"\\ea06\"}.cil-swap-horizontal:before{content:\"\\ea0e\"}.cil-swap-vertical:before{content:\"\\ea11\"}.cil-vector:before{content:\"\\ea16\"}.cil-vertical-align-bottom1:before{content:\"\\ea35\"}.cil-vertical-align-center1:before{content:\"\\ea3a\"}.cil-vertical-align-top1:before{content:\"\\ea3b\"}.cil-align-center:before{content:\"\\ea40\"}.cil-align-left:before{content:\"\\ea41\"}.cil-align-right:before{content:\"\\ea42\"}.cil-bold:before{content:\"\\ea43\"}.cil-copy:before{content:\"\\ea44\"}.cil-cut:before{content:\"\\ea61\"}.cil-remove:before{content:\"\\ea85\"}.cil-backspace:before{content:\"\\ea85\"}.cil-double-quote-sans-left:before{content:\"\\ea86\"}.cil-double-quote-sans-right:before{content:\"\\ea87\"}.cil-excerpt:before{content:\"\\ea8a\"}.cil-expand-down:before{content:\"\\ea9c\"}.cil-expand-left:before{content:\"\\ea9d\"}.cil-expand-right:before{content:\"\\ea9e\"}.cil-expand-up:before{content:\"\\eaa7\"}.cil-font:before{content:\"\\eaae\"}.cil-functions:before{content:\"\\eaaf\"}.cil-functions-alt:before{content:\"\\eab0\"}.cil-header:before{content:\"\\eb0e\"}.cil-highlighter:before{content:\"\\eb0f\"}.cil-highligt:before{content:\"\\eb10\"}.cil-indent-decrease:before{content:\"\\eb11\"}.cil-indent-increase:before{content:\"\\eb12\"}.cil-info:before{content:\"\\eb13\"}.cil-italic:before{content:\"\\eb14\"}.cil-justify-center:before{content:\"\\eb15\"}.cil-justify-left:before{content:\"\\eb16\"}.cil-justify-right:before{content:\"\\eb17\"}.cil-level-down:before{content:\"\\eb18\"}.cil-level-up:before{content:\"\\eb19\"}.cil-line-spacing:before{content:\"\\eb1a\"}.cil-list:before{content:\"\\eb1b\"}.cil-list-filter:before{content:\"\\eb1c\"}.cil-list-high-priority:before{content:\"\\eb1d\"}.cil-list-low-priority:before{content:\"\\eb1e\"}.cil-list-numbered:before{content:\"\\eb1f\"}.cil-list-rich:before{content:\"\\eb21\"}.cil-notes:before{content:\"\\eb22\"}.cil-paragraph:before{content:\"\\eb24\"}.cil-pen-alt:before{content:\"\\eb26\"}.cil-pen-nib:before{content:\"\\eb28\"}.cil-pencil:before{content:\"\\eb29\"}.cil-short-text:before{content:\"\\eb2a\"}.cil-sort-alpha-down:before{content:\"\\eb2b\"}.cil-sort-alpha-up:before{content:\"\\eb2c\"}.cil-sort-ascending:before{content:\"\\eb2d\"}.cil-sort-descending:before{content:\"\\eb2e\"}.cil-sort-numeric-down:before{content:\"\\eb2f\"}.cil-sort-numeric-up:before{content:\"\\eb30\"}.cil-space-bar:before{content:\"\\eb31\"}.cil-text:before{content:\"\\eb32\"}.cil-text-shapes:before{content:\"\\eb3d\"}.cil-text-size:before{content:\"\\eb3e\"}.cil-text-square:before{content:\"\\eb3f\"}.cil-text-strike:before{content:\"\\eb40\"}.cil-strikethrough:before{content:\"\\eb40\"}.cil-translate:before{content:\"\\eb42\"}.cil-underline:before{content:\"\\eb43\"}.cil-vertical-align-bottom:before{content:\"\\eb44\"}.cil-vertical-align-center:before{content:\"\\eb45\"}.cil-vertical-align-top:before{content:\"\\eb46\"}.cil-wrap-text:before{content:\"\\eb47\"}.cil-assistive-listening-system:before{content:\"\\e9d3\"}.cil-blind:before{content:\"\\e9dc\"}.cil-braille:before{content:\"\\e9dd\"}.cil-deaf:before{content:\"\\e9de\"}.cil-fingerprint:before{content:\"\\ea1a\"}.cil-life-ring:before{content:\"\\ea1d\"}.cil-lock-locked:before{content:\"\\ea1e\"}.cil-lock-unlocked:before{content:\"\\ea24\"}.cil-low-vision:before{content:\"\\ea25\"}.cil-mouth-slash:before{content:\"\\ea27\"}.cil-pregnant:before{content:\"\\ea28\"}.cil-shield-alt:before{content:\"\\ea2f\"}.cil-sign-language:before{content:\"\\ea77\"}.cil-wheelchair:before{content:\"\\ea80\"}.cil-disabled:before{content:\"\\ea80\"}.cil-account-logout:before{content:\"\\e964\"}.cil-action-redo:before{content:\"\\e965\"}.cil-action-undo:before{content:\"\\e966\"}.cil-applications:before{content:\"\\e967\"}.cil-apps:before{content:\"\\e967\"}.cil-applications-settings:before{content:\"\\e968\"}.cil-apps-settings:before{content:\"\\e968\"}.cil-arrow-bottom:before{content:\"\\e969\"}.cil-arrow-circle-bottom:before{content:\"\\e96a\"}.cil-arrow-circle-left:before{content:\"\\e96b\"}.cil-arrow-circle-right:before{content:\"\\e96c\"}.cil-arrow-circle-top:before{content:\"\\e96d\"}.cil-arrow-left:before{content:\"\\e96e\"}.cil-arrow-right:before{content:\"\\e96f\"}.cil-arrow-thick-bottom:before{content:\"\\e970\"}.cil-arrow-thick-from-bottom:before{content:\"\\e981\"}.cil-arrow-thick-from-left:before{content:\"\\e982\"}.cil-arrow-thick-from-right:before{content:\"\\e983\"}.cil-arrow-thick-from-top:before{content:\"\\e99b\"}.cil-arrow-thick-left:before{content:\"\\e9a1\"}.cil-arrow-thick-right:before{content:\"\\e9a2\"}.cil-arrow-thick-to-bottom:before{content:\"\\e9bc\"}.cil-arrow-thick-to-left:before{content:\"\\e9bd\"}.cil-arrow-thick-to-right:before{content:\"\\e9bf\"}.cil-arrow-thick-to-top:before{content:\"\\e9d4\"}.cil-arrow-thick-top:before{content:\"\\e9be\"}.cil-arrow-top:before{content:\"\\e9e4\"}.cil-ban:before{content:\"\\e9e5\"}.cil-brightness:before{content:\"\\e9e6\"}.cil-caret-bottom:before{content:\"\\ea2c\"}.cil-caret-left:before{content:\"\\ea30\"}.cil-caret-right:before{content:\"\\ea31\"}.cil-caret-top:before{content:\"\\ea3c\"}.cil-check:before{content:\"\\ea55\"}.cil-check-alt:before{content:\"\\ecf9\"}.cil-check-circle:before{content:\"\\ea57\"}.cil-chevron-bottom:before{content:\"\\ea59\"}.cil-chevron-circle-down-alt:before{content:\"\\ecfc\"}.cil-chevron-circle-left-alt:before{content:\"\\ecfd\"}.cil-chevron-circle-right-alt:before{content:\"\\ecfe\"}.cil-chevron-circle-up-alt:before{content:\"\\ecff\"}.cil-chevron-double-down:before{content:\"\\ea6a\"}.cil-chevron-double-left:before{content:\"\\ea6e\"}.cil-chevron-double-right:before{content:\"\\ea73\"}.cil-chevron-double-up:before{content:\"\\ea8d\"}.cil-chevron-double-up-alt:before{content:\"\\ed03\"}.cil-chevron-left:before{content:\"\\ea8e\"}.cil-chevron-right:before{content:\"\\ea9a\"}.cil-chevron-top:before{content:\"\\eabd\"}.cil-clear-all:before{content:\"\\eabe\"}.cil-clipboard:before{content:\"\\eac0\"}.cil-clone:before{content:\"\\eac1\"}.cil-columns:before{content:\"\\eb4b\"}.cil-exit-to-app:before{content:\"\\eb4d\"}.cil-filter:before{content:\"\\eb4e\"}.cil-infinity:before{content:\"\\eb4f\"}.cil-input:before{content:\"\\eb50\"}.cil-magnifying-glass:before{content:\"\\eb51\"}.cil-zoom:before{content:\"\\eb51\"}.cil-search:before{content:\"\\eb51\"}.cil-menu:before{content:\"\\ed0b\"}.cil-hamburger-menu:before{content:\"\\ed0b\"}.cil-minus:before{content:\"\\eb52\"}.cil-move:before{content:\"\\eb56\"}.cil-options:before{content:\"\\ecdc\"}.cil-options-horizontal:before{content:\"\\eb57\"}.cil-ellipses:before{content:\"\\eb57\"}.cil-ellipsis:before{content:\"\\eb57\"}.cil-pin:before{content:\"\\eb5a\"}.cil-plus:before{content:\"\\eb5b\"}.cil-power-standby:before{content:\"\\eb5f\"}.cil-reload:before{content:\"\\eb60\"}.cil-resize-both:before{content:\"\\eb61\"}.cil-resize-height:before{content:\"\\eb62\"}.cil-resize-width:before{content:\"\\eb63\"}.cil-save:before{content:\"\\eb65\"}.cil-settings:before{content:\"\\eb68\"}.cil-cog:before{content:\"\\eb68\"}.cil-speedometer:before{content:\"\\eb69\"}.cil-gauge:before{content:\"\\eb69\"}.cil-spreadsheet:before{content:\"\\eb6a\"}.cil-storage:before{content:\"\\eb6b\"}.cil-sync:before{content:\"\\eb6c\"}.cil-toggle-off:before{content:\"\\eb71\"}.cil-touch-app:before{content:\"\\eb73\"}.cil-trash:before{content:\"\\eb74\"}.cil-view-column:before{content:\"\\ebf6\"}.cil-view-module:before{content:\"\\ebf7\"}.cil-view-quilt:before{content:\"\\ebf8\"}.cil-view-stream:before{content:\"\\ebf9\"}.cil-wallpaper:before{content:\"\\ebfa\"}.cil-window-maximize:before{content:\"\\ebfc\"}.cil-window-minimize:before{content:\"\\ebfd\"}.cil-window-restore:before{content:\"\\ebfe\"}.cil-x:before{content:\"\\ebff\"}.cil-x-circle:before{content:\"\\ec00\"}.cil-zoom-in:before{content:\"\\ec02\"}.cil-zoom-out:before{content:\"\\ec03\"}.cil-child:before{content:\"\\e97e\"}.cil-baby:before{content:\"\\e97e\"}.cil-face:before{content:\"\\e985\"}.cil-face-dead:before{content:\"\\e986\"}.cil-frown:before{content:\"\\e987\"}.cil-sad:before{content:\"\\e987\"}.cil-meh:before{content:\"\\e988\"}.cil-mood-bad:before{content:\"\\e989\"}.cil-mood-good:before{content:\"\\e98a\"}.cil-mood-very-bad:before{content:\"\\e98b\"}.cil-mood-very-good:before{content:\"\\e98c\"}.cil-smile:before{content:\"\\e9c4\"}.cil-happy:before{content:\"\\e9c4\"}.cil-smile-plus:before{content:\"\\e9da\"}.cil-4k:before{content:\"\\ea81\"}.cil-airplay:before{content:\"\\ea82\"}.cil-album:before{content:\"\\ea83\"}.cil-audio:before{content:\"\\ea93\"}.cil-audio-description:before{content:\"\\eaa2\"}.cil-audio-spectrum:before{content:\"\\eaa8\"}.cil-av-timer:before{content:\"\\eab1\"}.cil-camera:before{content:\"\\eab2\"}.cil-camera-control:before{content:\"\\eab3\"}.cil-control:before{content:\"\\eab3\"}.cil-closed-captioning:before{content:\"\\eab9\"}.cil-cc:before{content:\"\\eab9\"}.cil-compress:before{content:\"\\eb4a\"}.cil-equalizer:before{content:\"\\eba0\"}.cil-featured-playlist:before{content:\"\\ec6c\"}.cil-fullscreen:before{content:\"\\ec73\"}.cil-fullscreen-exit:before{content:\"\\ec74\"}.cil-hd:before{content:\"\\ec75\"}.cil-headphones:before{content:\"\\ec76\"}.cil-library-add:before{content:\"\\ec7a\"}.cil-loop:before{content:\"\\ec7c\"}.cil-loop-1:before{content:\"\\ec7d\"}.cil-loop-circular:before{content:\"\\ec7e\"}.cil-media-eject:before{content:\"\\ec80\"}.cil-media-pause:before{content:\"\\ec83\"}.cil-media-play:before{content:\"\\ec86\"}.cil-media-record:before{content:\"\\ec89\"}.cil-media-skip-backward:before{content:\"\\ec8c\"}.cil-media-skip-forward:before{content:\"\\ec8f\"}.cil-media-step-backward:before{content:\"\\ec92\"}.cil-media-step-forward:before{content:\"\\ec95\"}.cil-media-stop:before{content:\"\\ec98\"}.cil-microphone:before{content:\"\\ec9b\"}.cil-mic:before{content:\"\\ec9b\"}.cil-movie:before{content:\"\\ec9f\"}.cil-music-note:before{content:\"\\eca1\"}.cil-playlist-add:before{content:\"\\eca6\"}.cil-speaker:before{content:\"\\ecb9\"}.cil-tv:before{content:\"\\ecbc\"}.cil-video:before{content:\"\\ecc0\"}.cil-voice-over-record:before{content:\"\\ecc7\"}.cil-volume-high:before{content:\"\\ecc9\"}.cil-volume-low:before{content:\"\\ecca\"}.cil-volume-off:before{content:\"\\eccb\"}.cil-at:before{content:\"\\e98f\"}.cil-book:before{content:\"\\e990\"}.cil-bookmark:before{content:\"\\e992\"}.cil-description:before{content:\"\\eba6\"}.cil-envelope-closed:before{content:\"\\e9b5\"}.cil-envelope-letter:before{content:\"\\e9b6\"}.cil-envelope-open:before{content:\"\\e9b7\"}.cil-file:before{content:\"\\e9c5\"}.cil-find-in-page:before{content:\"\\ebaa\"}.cil-folder:before{content:\"\\e9d8\"}.cil-folder-open:before{content:\"\\e9d9\"}.cil-image1:before{content:\"\\e9fe\"}.cil-inbox:before{content:\"\\ea00\"}.cil-library:before{content:\"\\ebb0\"}.cil-paperclip:before{content:\"\\ea3e\"}.cil-tag:before{content:\"\\ea97\"}.cil-tags:before{content:\"\\ea98\"}.cil-address-book:before{content:\"\\ec07\"}.cil-people:before{content:\"\\ec62\"}.cil-user:before{content:\"\\ec67\"}.cil-user-female:before{content:\"\\ec68\"}.cil-user-follow:before{content:\"\\ec69\"}.cil-user-unfollow:before{content:\"\\ec6b\"}.cil-airplane-mode:before{content:\"\\e904\"}.cil-airplane-mode-off:before{content:\"\\e905\"}.cil-contact:before{content:\"\\e933\"}.cil-dialpad:before{content:\"\\e93f\"}.cil-mobile:before{content:\"\\ea48\"}.cil-mobile-landscape:before{content:\"\\e944\"}.cil-phone:before{content:\"\\e94f\"}.cil-sim:before{content:\"\\e972\"}.cil-bike:before{content:\"\\eae6\"}.cil-boat-alt:before{content:\"\\eae9\"}.cil-bus-alt:before{content:\"\\eaeb\"}.cil-car-alt:before{content:\"\\eaee\"}.cil-flight-takeoff:before{content:\"\\eaf2\"}.cil-locomotive:before{content:\"\\eaf3\"}.cil-taxi:before{content:\"\\eafa\"}.cil-truck:before{content:\"\\eb00\"}.cil-walk:before{content:\"\\eb01\"}.cil-calendar:before{content:\"\\e994\"}.cil-calendar-check:before{content:\"\\e995\"}.cil-clock:before{content:\"\\e9aa\"}.cil-compass:before{content:\"\\e9ab\"}.cil-flag-alt:before{content:\"\\ec0a\"}.cil-globe-alt:before{content:\"\\ea32\"}.cil-history:before{content:\"\\e9f8\"}.cil-language:before{content:\"\\ea0c\"}.cil-location-pin:before{content:\"\\ea17\"}.cil-map:before{content:\"\\ea20\"}.cil-balance-scale:before{content:\"\\eac6\"}.cil-bar-chart:before{content:\"\\eaca\"}.cil-basket:before{content:\"\\eacb\"}.cil-briefcase:before{content:\"\\ead0\"}.cil-british-pound:before{content:\"\\ebb9\"}.cil-calculator:before{content:\"\\ebbc\"}.cil-cart:before{content:\"\\ebc0\"}.cil-chart:before{content:\"\\ebc5\"}.cil-chart-line:before{content:\"\\ebc9\"}.cil-chart-pie:before{content:\"\\ebcb\"}.cil-credit-card:before{content:\"\\ebce\"}.cil-dollar:before{content:\"\\ebcf\"}.cil-euro:before{content:\"\\ebd4\"}.cil-gem:before{content:\"\\eb48\"}.cil-diamond:before{content:\"\\eb48\"}.cil-gift:before{content:\"\\eb49\"}.cil-graph:before{content:\"\\ebd8\"}.cil-money:before{content:\"\\ec0d\"}.cil-cash:before{content:\"\\ec0d\"}.cil-wallet:before{content:\"\\ebe5\"}.cil-yen:before{content:\"\\ebe6\"}.cil-chat-bubble:before{content:\"\\ead1\"}.cil-comment-bubble:before{content:\"\\ead4\"}.cil-comment-square:before{content:\"\\eadd\"}.cil-speech:before{content:\"\\ead2\"}.cil-hand-point-down:before{content:\"\\e9ea\"}.cil-hand-point-left:before{content:\"\\e9eb\"}.cil-hand-point-right:before{content:\"\\e9ec\"}.cil-hand-point-up:before{content:\"\\e9ed\"}.cil-thumb-down:before{content:\"\\ea9f\"}.cil-thumb-up:before{content:\"\\eaa0 \"}\n/*# sourceMappingURL=free.min.css.map */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.eot?64h6xh":
/*!**************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.eot?64h6xh ***!
  \**************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "65b4591117020c39ddc994c50b9f8ada.eot");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.svg?64h6xh":
/*!**************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.svg?64h6xh ***!
  \**************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "fdc77ee937bb65e249d579fe79bc7a50.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.ttf?64h6xh":
/*!**************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.ttf?64h6xh ***!
  \**************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d898f015e771e5a0ee0a162bb2f1afd4.ttf");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.woff?64h6xh":
/*!***************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Brand.woff?64h6xh ***!
  \***************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "422330386b698f41178ccdfa8bacebe4.woff");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.eot?64h6xh":
/*!*************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.eot?64h6xh ***!
  \*************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4375c518cc9469092b964302a23bc35b.eot");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.svg?64h6xh":
/*!*************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.svg?64h6xh ***!
  \*************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "c1b20a848c67f169898121e5febfa970.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.ttf?64h6xh":
/*!*************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.ttf?64h6xh ***!
  \*************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "428e3f6427c6f0520cd0b8317ea5ee53.ttf");

/***/ }),

/***/ "./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.woff?64h6xh":
/*!**************************************************************************!*\
  !*** ./public/vendors/@coreui/icons/fonts/CoreUI-Icons-Free.woff?64h6xh ***!
  \**************************************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8f9e0f7b0d8252e5fc87b9e8dbc6eb7d.woff");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ad.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ad.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "46a72864dd0592794acbee5e5ed81d19.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ae.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ae.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f841cbd8b4e0e881bd7a3108675b1264.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-af.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-af.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e85e8b7d99f2945763a6e63447c89f43.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ag.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ag.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "170e40302b422c500731165a4fb88cdf.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-al.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-al.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "fbb4132853faab6b49f286d9698c5136.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-am.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-am.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f9592569bb43f2dc5504bf0e77409a5b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ao.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ao.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "7d838311c2093033310b9ad25f6226a1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ar.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ar.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "56aecb29e7f182e3663edbf990198a03.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-at.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-at.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0b095571e98844800e22b1de1043f749.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-au.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-au.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b85a89e1c31ef17c107e6919caac03c4.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-az.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-az.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "9c4ed1830ed7343bcdf7f4b09a5883c2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ba.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ba.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "806c8cdf68bce5e055e76f01f84620fc.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bb.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bb.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "2412b6c49ddfa57370f871fedd1a8b46.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bd.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bd.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "45cd9ad691d5fbcaca9c82f30f66b3b1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-be.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-be.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e101a4ba5d71f8af0e7b6545982893d7.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bf.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bf.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "372312d48ce9b92fba939faefcf1733b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "73dc75221777eecc03f2d4423748ba82.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bh.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bh.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "83a883c8e1d084bb671fec4623f871e6.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bi.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bi.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f82bbaa7478dde53933fa795a57651ac.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bj.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bj.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a630a5fb810973cd816c1ca32da1e5ac.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bac9b7ea876753f661d0cfbf4d24b87d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bo.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bo.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3aaf026371d3cd7c70217d1d6aba5442.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-br.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-br.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "2660fedb6cb7d28543dfb1390227907a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bs.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bs.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "c075385c3b6a9cdb76ae45f8d87cbad0.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "c964931762aed9e8dea3fd803962295d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "aad89e97abe019da93dcaff01daae936.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-by.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-by.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bf006122445db208b6047587e766b566.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-bz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-bz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "fd3c0ade888b19ff63fb667fe3dae9bd.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ca.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ca.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "311f12f63a05a3a260fe03b768b67b3c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cd.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cd.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "cf92c2a96d53b5acb8a51f281e7cf6ef.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cf.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cf.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "44a523929231b8f679afa7b978a0d362.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "68bede41aa191597f2debeb8c3b0d816.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ch.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ch.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "30437036ceda21689872a1f5b202f777.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ci.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ci.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "47867c61f528ac77ecb82b8589fbf5f7.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cl.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cl.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "01201c280e0dd5cfd6be517c6ea9db92.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ee6fe0c64b8db1a53c70dabebf53f48d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6324f6117245772f2314b2f125823b22.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-co.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-co.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "1ed767990b7848cedfb9ddca2b0dc6dc.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "43864ddfd0fded0833e57108d4214437.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cu.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cu.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3a4f69f0772848a82cf5aeb2238afce0.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cv.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cv.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a13fcc052eb5ceee49f6b7472386e42a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cy.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cy.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "1f5223757f793f9e3c1536d217dceb94.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-cz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-cz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "929eb432bc1c47ecd1bf4698751e30a6.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-de.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-de.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b25a01b795aff865e0fccdbb3a64e4e2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-dj.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-dj.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4751653ea8f0b9dfbedbda93cd21ed7b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-dk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-dk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "31dd71cd2e9505e72ffeae83fcc64a1f.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-dm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-dm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "7e2d2193963a0f51ff64c0a06198aa64.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-do.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-do.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "70a22f6ecdd0feaffe65496374e0a6e1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-dz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-dz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ad06e238f889c54b193ba0b24cac39cd.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ec.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ec.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b0790bccbec3a69cd2dde9066e793f34.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ee.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ee.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b4abfdfcd91f25f476a0f23699829825.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-eg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-eg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4c5e3857e34f940d83382002aff521a2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-er.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-er.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bbfc5171f2c82c9455ff8391ef28c1fc.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-es.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-es.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bba9874f09a739eff98e7faec2a1011a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-et.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-et.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "dfd0868dcdf728e30787f2f571e0c9e5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-fi.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-fi.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d98dcd574266006c1c720a7fd7f13480.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-fj.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-fj.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "12d12edb921744041f55fc0d0eafae53.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-fm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-fm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6994917cc2dc3146f886638d26e1a53c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-fr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-fr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "90659f2df93aa3cfa490fb99783af8b5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ga.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ga.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "95cab496c5e7d5a08ec661c478fa41d8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gb.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gb.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f0e648925720826ab62c130455434d85.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gd.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gd.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "815adc136cacfdd52f09c57a27570f18.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ge.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ge.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d275baa02b95abccbf54fc0188ffb208.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gh.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gh.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "266e400777106a68371ab65236a7ab18.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "43a23b3b991491118a7dfe44a7a73400.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "86e1a7e4a7fbf465c987aaeb4d0a6e1b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gq.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gq.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "86e1a7e4a7fbf465c987aaeb4d0a6e1b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "7ce5e57ede62d571a7c044076bea6830.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "26373f7d57cf7afceb829ee21e507e9c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a06213e4462f8fb1ecfe6c0b0a519f0b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-gy.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-gy.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "23cf2269cdbab66d3b2099c243d052c1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-hk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-hk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "94eca6eaf5684e8c44b04e8761d2f41c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-hn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-hn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "031ac138e116b752ed121a4abcabbd05.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-hr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-hr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "02928120e73c1e6562a6b515bfa61fff.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ht.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ht.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "5b4b056b9b50d4ff98c67c0ac2a95578.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-hu.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-hu.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bdc0330a14eed3c5ec108cf9e9efbfaa.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-id.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-id.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bbb2b2e3011add1b36c4842e916f6516.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ie.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ie.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e36ccb18003e2e5f5ce519e14253fb3e.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-il.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-il.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "9cbaf34825f616ed2fd9e8556b9a52bc.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-in.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-in.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "08094cfaf4836fbe04e25a2ec2dc8099.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-iq.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-iq.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f41ef8cd6ac05f686ccb2e507ac7de1c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ir.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ir.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b4804554cb99c8fcab6d1b52f116c67d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-is.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-is.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4e784ddcc3c58978afa6e79b3cb25e08.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-it.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-it.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0827ba645cfcd18207bad571128643ba.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-jm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-jm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b5091a094bbb81fa3ffc79c409787438.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-jo.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-jo.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "41333cf0f8dd0f8e9bca2cb2d923182a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-jp.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-jp.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0e1e4c8f75536563ff82e3c6051423ae.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ke.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ke.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b100da09f9088fecb115c0732a062fcd.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f73900cf1d8bc2a3cad5de03c0ab9fba.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kh.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kh.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "36ec325465d7851f239b954496896440.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ki.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ki.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "aa57803725cb3c71e876748f12c668f6.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-km.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-km.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f5de7525b2604bc7c6afa13431d3210e.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0fdf1ce94f18015b08ae8bb67c830ea1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kp.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kp.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b118995acaa3c90d4b39308708372f6b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d32c592db3372eee0d5abf74e5ad36da.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "49c05866e04af9e301a6dcbe6704af3f.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-kz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-kz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f440096b32f6b6693b932a617d4460de.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-la.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-la.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b1af1a13e1290b98fb477609f9382b9d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lb.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lb.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3f2d471aeb2c0c5e04df34cc25bb8f7e.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lc.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lc.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "78dcd1960dc7cc1ddecb00f8b9d5286c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-li.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-li.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bff2766eed97d76cfafd3fcfd481c4f1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d6da7cf90a7421cd1edab0c5a44bd0de.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "76668735e8d3bda5f422221397f43e54.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ls.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ls.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "5a557c8f17a825b611a712c20119eebf.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "81b58d07e59369b3e55b8bc4fd648491.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lu.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lu.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8bf520f72cedaee187989e11f3a96d53.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-lv.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-lv.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d5739ad14709f9c57c1007679271aaf8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ly.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ly.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6fa3a0944b7e7cbda6b529476e86ef4d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ma.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ma.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e46046837ef219d8d1ca6603f4581e31.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mc.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mc.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a141e06224716fa3c4c5e18c70c04a1e.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-md.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-md.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "64b1b95b180e8c09b77cb1be43186c96.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-me.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-me.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "351eb4ca7ec0856ca51f1fa1b6902767.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d07196fbe433b1b838b35c987a18c2ec.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mh.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mh.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "561208499a01dccbcca4cfbce4cce655.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a006ad7c0049174d16b98414ce0785b8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ml.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ml.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d19e3f93faae0f1ede9033068b0cb398.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "359d99add8125354a6b324fdbd5870e2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "af1756a1633b387604c902b474f6d437.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "1cf6b6b5b29d98d16fe472e905c3fd6c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "064b3bad9e2b811372dc6e41bb3d6f35.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mu.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mu.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "538b1f47a3606b2d6530b58ca7be6c3a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mv.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mv.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3a3036d22eb30df46a4f60ec9b96cfe4.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b9067b9bee00b1c076d632c6ea25aadf.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mx.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mx.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3d2fe8d8d703c9dc274ea9159d1c81b2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-my.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-my.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "31c73d775d3072a320083edeae959908.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-mz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-mz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "aaef0e638ddf76636e70e214c374e116.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-na.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-na.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ad61a74eacc1b5970504876cbed47905.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ne.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ne.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "67196ee76fe00c8d0137ad2fc7aa7015.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ng.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ng.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "566b9bff3e3feb6029bb9fab64da494b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ni.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ni.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "f7d96a82adcae98bae28cc5dd3c914db.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-nl.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-nl.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "226e23fd7bdce146da8bd6a0578b4b16.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-no.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-no.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d34f9155e31d78ddfaf5208e34abb32f.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-np.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-np.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0984a07f66bded9c37596e8d2e831eb4.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-nr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-nr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "68b13ec8aac91169689580cf67994c02.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-nu.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-nu.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ae5f0f089912d61fb32059714d3cd585.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-nz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-nz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b2f585b2d2c8030ca9c9e7b0ba551b06.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-om.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-om.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6c318ab87c536dbacddf2c2b1c338224.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pa.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pa.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3aa82dc28d5f13664a16fa8ba5ece0a8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pe.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pe.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "1d2d68aa42fc0958be3af755c3a0ff0c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "079d492ec83daf20d073bdd4f8461354.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ph.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ph.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "be214fae1f3f6f2736eeb988a525ab89.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "10b82ab7669df1e9adfd764fab7f82f2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pl.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pl.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a46bcbb2874a9cf34bbe447a4acbc27c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "9b0562904daecd5ccbee1a112d791914.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-pw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-pw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "7da108cdad5ca576a523940235168828.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-py.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-py.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "fc6d9cc6716bff3583fc22141b92f8a5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-qa.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-qa.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6cf679c39538c9d7755bc409695ffa67.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ro.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ro.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "bee1130a9f88713e4b1df6f82320e18c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-rs.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-rs.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "457fc6345f1d92b5da2642bce919d9d6.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ru.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ru.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ba563cd4a7ef5d6debec202b4d07f4d8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-rw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-rw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "20d2338a5eae7c30ad03e9a509c807c7.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sa.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sa.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "112146825b135301592b557c7d8159e3.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sb.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sb.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8eccab34b1a0f95a248f1e3d2b7a6153.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sc.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sc.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "02391836bc1333da76dcfb7bf0fd0104.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sd.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sd.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "1f881fd21dd1ceb9179777aa2ff4b036.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-se.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-se.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "814b8416da44f9d04b9326e71f1d4c1a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "840c95bad725fd6153dab4b0984b856a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-si.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-si.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "879739df6eba2fe605b14866b2aa651a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "30d59a0ea88effa1d133c58f201b9cf6.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sl.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sl.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "fee66dd531893ce83720a7747d807b17.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "d40a28c4797d5172c244b8b6a7974702.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "04585af7e2dd959b3a9ce3a18210c17a.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-so.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-so.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "0b83e920c866acb0ff49beb2bcce8cdd.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "c4807864f631deb191afd4752217b9cd.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ss.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ss.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e516f56053579cf69fcdba61ba6dac21.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-st.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-st.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "80527b4733852e0e8b93dc39f64887c1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sv.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sv.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "07264ec22193fac4d83f442840d9d7ee.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sy.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sy.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "44d8786c9ae2ccccf9effed486e69f6b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-sz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-sz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "a1fec135fd1f45cc75d426e381a8c56b.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-td.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-td.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4fcbb4160f1cf308a7db59fcacf40d6c.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tg.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tg.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "5b9aa0c024f2d146ec1faa659301b197.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-th.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-th.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "258b81176f3315cd27b2a6bf9ddcf142.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tj.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tj.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e629cc646eb4a40dcb83306f6a01d2a3.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tl.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tl.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "426270e519e594325b83df1a133f54f9.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "227b2d83a8aeadcdc06c0de57ff87f0d.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b7c46f8dc2568127d81b9d891a3b0025.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-to.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-to.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "6d31c827457dde070e1c781f12b41cc7.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tr.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tr.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8e255e44086da1858a5d193901c45ec1.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tt.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tt.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "49a04d56ec38a2a00de02e7cc9e10ed5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tv.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tv.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8ba79f9509958f8a676270deef1f1c28.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "3768098c9bd4964406e6df2e1a97dedf.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-tz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-tz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "8cf2b672cff3c723c1d7c374b8aaa2a5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ua.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ua.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "4703366a55eb4e3b321018b89868c0b8.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ug.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ug.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "16a9366d40f5065011408f28e59640a5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-us.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-us.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "139c375bb84cb17bca0ce9709eaef8c3.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-uy.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-uy.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "87c50c45cc2797ba6769e9d455285baa.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-uz.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-uz.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "e2a62191247db3c8d5229aa1cf7e4555.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-va.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-va.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "cb4e0197a453cfae645dcd759989ef15.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-vc.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-vc.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "ab36204c28498a30be3fb870b74d14e5.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ve.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ve.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "aff4405fe97ac30f073eeb876cd70381.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-vn.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-vn.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "80bbd04e40b2db4042fef4ca63e35675.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ws.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ws.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "624ad312821325132de8690eae1f38e2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-xk.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-xk.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "2e78353e294eeb7f20dd5532360bbe81.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-ye.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-ye.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "b4f818c770a34083f38934f944b461b9.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-za.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-za.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "5483112dcc28152080ca2e4e153b0dd2.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-zm.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-zm.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "568926ab89bcfeaf1b625c5081ec7f65.svg");

/***/ }),

/***/ "./public/vendors/@coreui/icons/svg/flag/cif-zw.svg":
/*!**********************************************************!*\
  !*** ./public/vendors/@coreui/icons/svg/flag/cif-zw.svg ***!
  \**********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.p, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "316fb6c43d5f32a382e63df0dc36103a.svg");

/***/ }),

/***/ "./node_modules/handsontable/node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!*****************************************************************************!*\
  !*** ./node_modules/handsontable/node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \*****************************************************************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.o, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": "./node_modules/handsontable/node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/handsontable/node_modules/moment/locale/af.js",
	"./ar": "./node_modules/handsontable/node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/handsontable/node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/handsontable/node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/handsontable/node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/handsontable/node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/handsontable/node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/handsontable/node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/handsontable/node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/handsontable/node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/handsontable/node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/handsontable/node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/handsontable/node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/handsontable/node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/handsontable/node_modules/moment/locale/ar.js",
	"./az": "./node_modules/handsontable/node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/handsontable/node_modules/moment/locale/az.js",
	"./be": "./node_modules/handsontable/node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/handsontable/node_modules/moment/locale/be.js",
	"./bg": "./node_modules/handsontable/node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/handsontable/node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/handsontable/node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/handsontable/node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/handsontable/node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/handsontable/node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/handsontable/node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/handsontable/node_modules/moment/locale/bo.js",
	"./br": "./node_modules/handsontable/node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/handsontable/node_modules/moment/locale/br.js",
	"./bs": "./node_modules/handsontable/node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/handsontable/node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/handsontable/node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/handsontable/node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/handsontable/node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/handsontable/node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/handsontable/node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/handsontable/node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/handsontable/node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/handsontable/node_modules/moment/locale/cy.js",
	"./da": "./node_modules/handsontable/node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/handsontable/node_modules/moment/locale/da.js",
	"./de": "./node_modules/handsontable/node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/handsontable/node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/handsontable/node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/handsontable/node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/handsontable/node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/handsontable/node_modules/moment/locale/de.js",
	"./dv": "./node_modules/handsontable/node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/handsontable/node_modules/moment/locale/dv.js",
	"./el": "./node_modules/handsontable/node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/handsontable/node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/handsontable/node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/handsontable/node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/handsontable/node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/handsontable/node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/handsontable/node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/handsontable/node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/handsontable/node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/handsontable/node_modules/moment/locale/en-ie.js",
	"./en-nz": "./node_modules/handsontable/node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/handsontable/node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/handsontable/node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/handsontable/node_modules/moment/locale/eo.js",
	"./es": "./node_modules/handsontable/node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/handsontable/node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/handsontable/node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/handsontable/node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/handsontable/node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/handsontable/node_modules/moment/locale/es.js",
	"./et": "./node_modules/handsontable/node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/handsontable/node_modules/moment/locale/et.js",
	"./eu": "./node_modules/handsontable/node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/handsontable/node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/handsontable/node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/handsontable/node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/handsontable/node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/handsontable/node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/handsontable/node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/handsontable/node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/handsontable/node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/handsontable/node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/handsontable/node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/handsontable/node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/handsontable/node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/handsontable/node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/handsontable/node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/handsontable/node_modules/moment/locale/fy.js",
	"./gd": "./node_modules/handsontable/node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/handsontable/node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/handsontable/node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/handsontable/node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/handsontable/node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/handsontable/node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/handsontable/node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/handsontable/node_modules/moment/locale/gu.js",
	"./he": "./node_modules/handsontable/node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/handsontable/node_modules/moment/locale/he.js",
	"./hi": "./node_modules/handsontable/node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/handsontable/node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/handsontable/node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/handsontable/node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/handsontable/node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/handsontable/node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/handsontable/node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/handsontable/node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/handsontable/node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/handsontable/node_modules/moment/locale/id.js",
	"./is": "./node_modules/handsontable/node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/handsontable/node_modules/moment/locale/is.js",
	"./it": "./node_modules/handsontable/node_modules/moment/locale/it.js",
	"./it.js": "./node_modules/handsontable/node_modules/moment/locale/it.js",
	"./ja": "./node_modules/handsontable/node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/handsontable/node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/handsontable/node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/handsontable/node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/handsontable/node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/handsontable/node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/handsontable/node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/handsontable/node_modules/moment/locale/kk.js",
	"./km": "./node_modules/handsontable/node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/handsontable/node_modules/moment/locale/km.js",
	"./kn": "./node_modules/handsontable/node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/handsontable/node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/handsontable/node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/handsontable/node_modules/moment/locale/ko.js",
	"./ky": "./node_modules/handsontable/node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/handsontable/node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/handsontable/node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/handsontable/node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/handsontable/node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/handsontable/node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/handsontable/node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/handsontable/node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/handsontable/node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/handsontable/node_modules/moment/locale/lv.js",
	"./me": "./node_modules/handsontable/node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/handsontable/node_modules/moment/locale/me.js",
	"./mi": "./node_modules/handsontable/node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/handsontable/node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/handsontable/node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/handsontable/node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/handsontable/node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/handsontable/node_modules/moment/locale/ml.js",
	"./mr": "./node_modules/handsontable/node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/handsontable/node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/handsontable/node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/handsontable/node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/handsontable/node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/handsontable/node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/handsontable/node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/handsontable/node_modules/moment/locale/mt.js",
	"./my": "./node_modules/handsontable/node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/handsontable/node_modules/moment/locale/my.js",
	"./nb": "./node_modules/handsontable/node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/handsontable/node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/handsontable/node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/handsontable/node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/handsontable/node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/handsontable/node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/handsontable/node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/handsontable/node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/handsontable/node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/handsontable/node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/handsontable/node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/handsontable/node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/handsontable/node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/handsontable/node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/handsontable/node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/handsontable/node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/handsontable/node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/handsontable/node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/handsontable/node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/handsontable/node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/handsontable/node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/handsontable/node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/handsontable/node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/handsontable/node_modules/moment/locale/sd.js",
	"./se": "./node_modules/handsontable/node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/handsontable/node_modules/moment/locale/se.js",
	"./si": "./node_modules/handsontable/node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/handsontable/node_modules/moment/locale/si.js",
	"./sk": "./node_modules/handsontable/node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/handsontable/node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/handsontable/node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/handsontable/node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/handsontable/node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/handsontable/node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/handsontable/node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/handsontable/node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/handsontable/node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/handsontable/node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/handsontable/node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/handsontable/node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/handsontable/node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/handsontable/node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/handsontable/node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/handsontable/node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/handsontable/node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/handsontable/node_modules/moment/locale/ta.js",
	"./te": "./node_modules/handsontable/node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/handsontable/node_modules/moment/locale/te.js",
	"./tet": "./node_modules/handsontable/node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/handsontable/node_modules/moment/locale/tet.js",
	"./th": "./node_modules/handsontable/node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/handsontable/node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/handsontable/node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/handsontable/node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/handsontable/node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/handsontable/node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/handsontable/node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/handsontable/node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/handsontable/node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/handsontable/node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/handsontable/node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/handsontable/node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/handsontable/node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/handsontable/node_modules/moment/locale/tzm.js",
	"./uk": "./node_modules/handsontable/node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/handsontable/node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/handsontable/node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/handsontable/node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/handsontable/node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/handsontable/node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/handsontable/node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/handsontable/node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/handsontable/node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/handsontable/node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/handsontable/node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/handsontable/node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/handsontable/node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/handsontable/node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/handsontable/node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/handsontable/node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/handsontable/node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/handsontable/node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/handsontable/node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/handsontable/node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/handsontable/node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/*! default exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: module, __webpack_require__.o, __webpack_require__ */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn-bd": "./node_modules/moment/locale/bn-bd.js",
	"./bn-bd.js": "./node_modules/moment/locale/bn-bd.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-in": "./node_modules/moment/locale/en-in.js",
	"./en-in.js": "./node_modules/moment/locale/en-in.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./en-sg": "./node_modules/moment/locale/en-sg.js",
	"./en-sg.js": "./node_modules/moment/locale/en-sg.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-mx": "./node_modules/moment/locale/es-mx.js",
	"./es-mx.js": "./node_modules/moment/locale/es-mx.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fil": "./node_modules/moment/locale/fil.js",
	"./fil.js": "./node_modules/moment/locale/fil.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-deva": "./node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "./node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./oc-lnc": "./node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "./node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tk": "./node_modules/moment/locale/tk.js",
	"./tk.js": "./node_modules/moment/locale/tk.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "./node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "./node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./public/vendors/@coreui/icons/css/brand.min.css":
/*!********************************************************!*\
  !*** ./public/vendors/@coreui/icons/css/brand.min.css ***!
  \********************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_brand_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./brand.min.css */ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/brand.min.css");
;
            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_brand_min_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_brand_min_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./public/vendors/@coreui/icons/css/flag.min.css":
/*!*******************************************************!*\
  !*** ./public/vendors/@coreui/icons/css/flag.min.css ***!
  \*******************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_flag_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./flag.min.css */ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/flag.min.css");
;
            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_flag_min_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_flag_min_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./public/vendors/@coreui/icons/css/free.min.css":
/*!*******************************************************!*\
  !*** ./public/vendors/@coreui/icons/css/free.min.css ***!
  \*******************************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.n, __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_free_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../../node_modules/css-loader/dist/cjs.js!./free.min.css */ "./node_modules/css-loader/dist/cjs.js!./public/vendors/@coreui/icons/css/free.min.css");
;
            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_free_min_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_free_min_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "?8465":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?65c5":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?cc48":
/*!************************!*\
  !*** stream (ignored) ***!
  \************************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
/***/ (() => {

/* (ignored) */

/***/ })

},
0,[["./public/js/index.js","runtime","vendors-node_modules_a","vendors-node_modules_core-js_e","vendors-node_modules_c","vendors-node_modules_d3-mitch-tree_dist_js_d3-mitch-tree_min_js-9118cabb","vendors-node_modules_f","vendors-node_modules_handsontable_dist_handsontable_js-91fff723","vendors-node_modules_json5_dist_index_js-5e48c892","vendors-node_modules_m","vendors-node_modules_p","vendors-node_modules_s","vendors-node_modules_xlsx_jszip_js-15a426a7","vendors-node_modules_xlsx_xlsx_js-11464b91"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,